<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0320.1853                               -->
<workbook original-version='18.1' source-build='2021.1.0 (20211.21.0320.1853)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='PhoenixNYT_1945-2005' inline='true' name='federated.0ylu8n80byp4731h73qz30z8f062' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='PhoenixNYT_1945-2005' name='textscan.0o9s8lh0qrezsi120z9jn0g7lpb0'>
            <connection class='textscan' directory='/Users/test/Downloads' filename='PhoenixNYT_1945-2005.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0o9s8lh0qrezsi120z9jn0g7lpb0' name='PhoenixNYT_1945-2005.csv' table='[PhoenixNYT_1945-2005#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='nl_BE' separator=','>
            <column datatype='string' name='eid' ordinal='0' />
            <column datatype='date' name='story_date' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy' name='year' ordinal='2' />
            <column datatype='integer' name='month' ordinal='3' />
            <column datatype='integer' name='day' ordinal='4' />
            <column datatype='string' name='source' ordinal='5' />
            <column datatype='string' name='source_root' ordinal='6' />
            <column datatype='string' name='source_agent' ordinal='7' />
            <column datatype='string' name='source_others' ordinal='8' />
            <column datatype='string' name='target' ordinal='9' />
            <column datatype='string' name='target_root' ordinal='10' />
            <column datatype='string' name='target_agent' ordinal='11' />
            <column datatype='string' name='target_others' ordinal='12' />
            <column datatype='string' name='code' ordinal='13' />
            <column datatype='integer' name='root_code' ordinal='14' />
            <column datatype='integer' name='quad_class' ordinal='15' />
            <column datatype='string' name='goldstein' ordinal='16' />
            <column datatype='string' name='joined_issues' ordinal='17' />
            <column datatype='string' name='lat' ordinal='18' />
            <column datatype='string' name='lon' ordinal='19' />
            <column datatype='string' name='placename' ordinal='20' />
            <column datatype='string' name='statename' ordinal='21' />
            <column datatype='string' name='countryname' ordinal='22' />
            <column datatype='integer' name='aid' ordinal='23' />
            <column datatype='string' name='process' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0o9s8lh0qrezsi120z9jn0g7lpb0' name='PhoenixNYT_1945-2005.csv' table='[PhoenixNYT_1945-2005#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='nl_BE' separator=','>
            <column datatype='string' name='eid' ordinal='0' />
            <column datatype='date' name='story_date' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy' name='year' ordinal='2' />
            <column datatype='integer' name='month' ordinal='3' />
            <column datatype='integer' name='day' ordinal='4' />
            <column datatype='string' name='source' ordinal='5' />
            <column datatype='string' name='source_root' ordinal='6' />
            <column datatype='string' name='source_agent' ordinal='7' />
            <column datatype='string' name='source_others' ordinal='8' />
            <column datatype='string' name='target' ordinal='9' />
            <column datatype='string' name='target_root' ordinal='10' />
            <column datatype='string' name='target_agent' ordinal='11' />
            <column datatype='string' name='target_others' ordinal='12' />
            <column datatype='string' name='code' ordinal='13' />
            <column datatype='integer' name='root_code' ordinal='14' />
            <column datatype='integer' name='quad_class' ordinal='15' />
            <column datatype='string' name='goldstein' ordinal='16' />
            <column datatype='string' name='joined_issues' ordinal='17' />
            <column datatype='string' name='lat' ordinal='18' />
            <column datatype='string' name='lon' ordinal='19' />
            <column datatype='string' name='placename' ordinal='20' />
            <column datatype='string' name='statename' ordinal='21' />
            <column datatype='string' name='countryname' ordinal='22' />
            <column datatype='integer' name='aid' ordinal='23' />
            <column datatype='string' name='process' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;nl_NL&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¬&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;nl_BE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[eid]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>eid</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>story_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[story_date]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>story_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_root</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source_root]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>source_root</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_agent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source_agent]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>source_agent</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_others</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source_others]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>source_others</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>target</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_root</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_root]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>target_root</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_agent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_agent]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>target_agent</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_others</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_others]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>target_others</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>root_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[root_code]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>root_code</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quad_class</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quad_class]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>quad_class</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>goldstein</remote-name>
            <remote-type>129</remote-type>
            <local-name>[goldstein]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>goldstein</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>joined_issues</remote-name>
            <remote-type>129</remote-type>
            <local-name>[joined_issues]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>joined_issues</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lon</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lon]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>lon</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>placename</remote-name>
            <remote-type>129</remote-type>
            <local-name>[placename]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>placename</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>statename</remote-name>
            <remote-type>129</remote-type>
            <local-name>[statename]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>statename</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countryname]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>countryname</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[aid]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>aid</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>process</remote-name>
            <remote-type>129</remote-type>
            <local-name>[process]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>process</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143541334019:qk]&quot;' value='RUS' />
          <alias key='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143549136900:qk]&quot;' value='NATO' />
          <alias key='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143561543692:qk]&quot;' value='EU' />
          <alias key='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152162152448:qk]&quot;' value='USA' />
          <alias key='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152163409923:qk]&quot;' value='GBR' />
          <alias key='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166035460:qk]&quot;' value='FRA' />
        </aliases>
      </column>
      <column aggregation='CountD' caption='rus' datatype='string' name='[Calculation_1022317143541334019]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF (CONTAINS([source_root], &quot;RUS&quot;) OR CONTAINS([source_root], &quot;SUN&quot;)) AND&#13;&#10; (NOT CONTAINS ([target_root], &quot;RUS&quot;) OR NOT CONTAINS ([target_root], &quot;SUN&quot;)) THEN &quot;RUS&quot; END' />
      </column>
      <column aggregation='CountD' caption='nato' datatype='string' name='[Calculation_1022317143549136900]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot; &#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;CAN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558758407] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558905864] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;HUN&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;END' />
      </column>
      <column caption='FirstBatch' datatype='date' name='[Calculation_1022317143554514949]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE (&quot;1949-08-24&quot;)' />
      </column>
      <column caption='SecondBatch' datatype='date' name='[Calculation_1022317143558508550]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(&quot;1952-02-18&quot;)' />
      </column>
      <column caption='ThirdBatch' datatype='date' name='[Calculation_1022317143558758407]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='date(&quot;1955-5-8&quot;)' />
      </column>
      <column caption='FourthBatch' datatype='date' name='[Calculation_1022317143558905864]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='date(&quot;1982-5-30&quot;)' />
      </column>
      <column caption='FifthBatch' datatype='date' name='[Calculation_1022317143559049225]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='date(&quot;1999-3-12&quot;)' />
      </column>
      <column caption='eu1' datatype='date' name='[Calculation_1022317143561314315]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='date(&quot;1958-1-1&quot;)' />
      </column>
      <column aggregation='CountD' caption='eu' datatype='string' name='[Calculation_1022317143561543692]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot; &#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;IRL&quot;) AND NOT CONTAINS([target_root], &quot;IRL&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND [story_date] &gt;= [Calculation_1022317143563837455] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;AUT&quot;) AND NOT CONTAINS([target_root], &quot;AUT&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FIN&quot;) AND NOT CONTAINS([target_root], &quot;FIN&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;SWE&quot;) AND NOT CONTAINS([target_root], &quot;SWE&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;END' />
      </column>
      <column caption='eu2' datatype='date' name='[Calculation_1022317143563157518]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='date(&quot;1973-1-1&quot;)' />
      </column>
      <column caption='eu3' datatype='date' name='[Calculation_1022317143563837455]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='date(&quot;1981-1-1&quot;)' />
      </column>
      <column caption='eu4' datatype='date' name='[Calculation_1022317143564128272]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='date(&quot;1986-1-1&quot;)' />
      </column>
      <column caption='eu5' datatype='date' name='[Calculation_1022317143564386321]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='date(&quot;1995-1-1&quot;)' />
      </column>
      <column aggregation='CountD' caption='usa' datatype='string' name='[Calculation_1219068152162152448]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) THEN &quot;USA&quot; END' />
      </column>
      <column aggregation='CountD' caption='gbr' datatype='string' name='[Calculation_1219068152163409923]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) THEN &quot;GBR&quot; END' />
      </column>
      <column aggregation='CountD' caption='fra' datatype='string' name='[Calculation_1219068152166035460]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) THEN &quot;FRA&quot; END' />
      </column>
      <column caption='null' datatype='string' name='[Calculation_1219068152166596613]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;&quot;) THEN &quot;null&quot; END' />
      </column>
      <column caption='event_type' datatype='string' name='[Calculation_1844012970967576576]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([code], &apos;11&apos;) THEN &apos;Disapprove&apos; &#10;ELSEIF CONTAINS([code],&apos;12&apos;) THEN &apos;Reject&apos;&#10;ELSEIF CONTAINS([code],&apos;13&apos;) THEN &apos;Threaten&apos;&#10;ELSEIF CONTAINS([code],&apos;14&apos;) THEN &apos;Protest&apos;&#10;ELSEIF CONTAINS([code],&apos;15&apos;) THEN &apos;Exhibit force posture&apos;&#10;ELSEIF CONTAINS([code],&apos;16&apos;) THEN &apos;Reduce relations&apos;&#10;ELSEIF CONTAINS([code],&apos;17&apos;) THEN &apos;Coerce&apos;&#10;ELSEIF CONTAINS([code],&apos;18&apos;) THEN &apos;Assault&apos;&#10;ELSEIF CONTAINS([code],&apos;19&apos;) THEN &apos;Fight&apos;&#10;ELSEIF CONTAINS([code],&apos;20&apos;) THEN &apos;Use unconventional mass violence&apos;&#10;ELSE &apos;Other&apos;&#10;END' />
      </column>
      <column caption='Region' datatype='string' name='[Calculation_1844012971028602881]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([countryname],&apos;ARE&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BHR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CYP&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;EGY&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;IRN&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;IRQ&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ISR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;JOR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;KWT&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LBN&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;OMN&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;PSE&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;QAT&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SAU&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SYR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TUR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;YEM&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;DEU&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;AND&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ALB&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;AUT&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;AZE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BLR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ARE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BEL&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BIH&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BGR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CZE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;DNK&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ARM&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;EST&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;FIN&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;FRA&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GEO&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NLD&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;IRL&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ESP&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SWE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CHE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ITA&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ISL&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MNE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;KAZ&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MKD&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LVA&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LTU&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LIE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LUX&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;HUN&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MLT&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MDA&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MCO&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NOR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;POL&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;RUS&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SMR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SRB&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SUK&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SUN&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MKR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;VAT&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GRC&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;AGO&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BEN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BWA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BFA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BDI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;DZA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;DJI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TCD&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GNQ&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ERI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ETH&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MAR&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CIV&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GMP&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GHA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GIN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GNB&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ZAF&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SSD&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CMR&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;KEN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;COM&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;COG&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;COD&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LSO&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LBR&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MDG&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MWI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MLI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MUS&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MRT&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MOZ&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NAM&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NER&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NGA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CAF&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;RWA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;STP&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SEN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SYC&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SLE&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SOM&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SDN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TZA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TGO&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TUN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;UGA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ZMB&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ZWE&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;&apos;) THEN &apos;Null&apos;&#10;ELSE &apos;Other&apos;&#10;END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='PhoenixNYT_1945-2005.csv' datatype='table' name='[__tableau_internal_object_id__].[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]' role='measure' type='quantitative' />
      <column datatype='integer' name='[aid]' role='measure' type='quantitative' />
      <column datatype='string' name='[code]' role='dimension' type='nominal' />
      <column datatype='string' name='[countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[day]' role='measure' type='quantitative' />
      <column datatype='string' name='[eid]' role='dimension' type='nominal' />
      <column aggregate-role-from='[lon]' datatype='string' name='[lat]' role='dimension' type='nominal' />
      <column datatype='string' name='[lon]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[month]' role='measure' type='quantitative' />
      <column datatype='integer' name='[quad_class]' role='measure' type='quantitative' />
      <column datatype='integer' name='[root_code]' role='measure' type='quantitative' />
      <column datatype='string' name='[source_root]' role='dimension' type='nominal' />
      <column datatype='string' name='[target_root]' role='dimension' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1022317143541334019]' derivation='Count' name='[cnt:Calculation_1022317143541334019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[cnt:Calculation_1022317143549136900:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1022317143561543692]' derivation='Count' name='[cnt:Calculation_1022317143561543692:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1219068152162152448]' derivation='Count' name='[cnt:Calculation_1219068152162152448:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1219068152163409923]' derivation='Count' name='[cnt:Calculation_1219068152163409923:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1219068152166035460]' derivation='Count' name='[cnt:Calculation_1219068152166035460:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1219068152166596613]' derivation='Count' name='[cnt:Calculation_1219068152166596613:qk]' pivot='key' type='quantitative' />
      <column-instance column='[code]' derivation='Count' name='[cnt:code:qk]' pivot='key' type='quantitative' />
      <column-instance column='[eid]' derivation='Count' name='[cnt:eid:qk]' pivot='key' type='quantitative' />
      <column-instance column='[root_code]' derivation='Count' name='[cnt:root_code:qk]' pivot='key' type='quantitative' />
      <column-instance column='[source_root]' derivation='Count' name='[cnt:source_root:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[cum:cnt:Calculation_1022317143549136900:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[diff:cnt:Calculation_1022317143549136900:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='ColumnInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[diff:cnt:Calculation_1022317143549136900:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[diff:cnt:Calculation_1022317143549136900:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[diff:cnt:Calculation_1022317143549136900:qk:6]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='PaneCol' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[diff:cnt:Calculation_1022317143549136900:qk:7]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Pane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[diff:cnt:Calculation_1022317143549136900:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[countryname Set]' derivation='InOut' name='[io:countryname Set:nk]' pivot='key' type='nominal' />
      <column-instance column='[countryname]' derivation='Max' name='[max:countryname:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1022317143541334019]' derivation='None' name='[none:Calculation_1022317143541334019:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1219068152162152448]' derivation='None' name='[none:Calculation_1219068152162152448:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1219068152163409923]' derivation='None' name='[none:Calculation_1219068152163409923:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1844012970967576576]' derivation='None' name='[none:Calculation_1844012970967576576:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1844012971028602881]' derivation='None' name='[none:Calculation_1844012971028602881:nk]' pivot='key' type='nominal' />
      <column-instance column='[countryname]' derivation='None' name='[none:countryname:nk]' pivot='key' type='nominal' />
      <column-instance column='[target_root]' derivation='None' name='[none:target_root:nk]' pivot='key' type='nominal' />
      <column-instance column='[aid]' derivation='Sum' name='[sum:aid:qk]' pivot='key' type='quantitative' />
      <column-instance column='[code]' derivation='Sum' name='[sum:code:qk]' pivot='key' type='quantitative' />
      <column-instance column='[day]' derivation='Sum' name='[sum:day:qk]' pivot='key' type='quantitative' />
      <column-instance column='[month]' derivation='Sum' name='[sum:month:qk]' pivot='key' type='quantitative' />
      <column-instance column='[quad_class]' derivation='Sum' name='[sum:quad_class:qk]' pivot='key' type='quantitative' />
      <column-instance column='[root_code]' derivation='Sum' name='[sum:root_code:qk]' pivot='key' type='quantitative' />
      <group caption='fisrt three' name='[countryname Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[countryname]' member='&quot;GBR&quot;' />
          <groupfilter function='member' level='[countryname]' member='&quot;RUS&quot;' />
          <groupfilter function='member' level='[countryname]' member='&quot;USA&quot;' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1219068152162152448:nk]' type='palette'>
            <map to='#f28e2b'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:countryname Set:nk]' type='palette'>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:countryname:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BMU&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CRI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FJI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GUM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PRK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SOM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;XKX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BFA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GMB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LCA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MNG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TCA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VCT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AIA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BHS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;COG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GRD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MSR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PLW&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SLB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VNM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ATF&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BRN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HRV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KIR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PYF&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TWN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ZWE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BOL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FLK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PRT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;YEM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BIH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GRL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JEY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MTQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PNG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TKM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VUT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GIN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LBR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MMR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SAU&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SYC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ABW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CIV&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;EGY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GNB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LIE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MNP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TCD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VEN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DMA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IMN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LAO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SWZ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;URY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AND&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;COM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GTM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JOR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MUS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SLV&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TLS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WLF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ATG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HTI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KNA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NIC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;QAT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TZA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DEU&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MHL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NLD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;REU&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SVN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CCK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DNK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GIB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LBN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MLT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NRU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RWA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SXM&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DZA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GLP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IRN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LBY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OMN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SDN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VAT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ASM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CUW&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KGZ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NCL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PRY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SSD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ZAF&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BLZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CPV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GUF&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MAC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MWI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PRI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SMR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TON&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WSM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GNQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SGS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TGO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VGB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CAF&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GGY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IDN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KWT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MKD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ROU&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ATA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BRB&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CYM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FRO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HND&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KHM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MDG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NER&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;STP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TUV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ZMB&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AGO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BHR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ESH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LSO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MRT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SJM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VIR&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1022317143541334019:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1844012971028602881:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Null&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Middle East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:target_root:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BRB&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CYM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IGO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KWT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WSM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BHR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;COG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GTM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NER&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PRY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AIA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BLZ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CPV&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HRV&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KIR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NLD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SYC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VCT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CAF&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DEU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IRN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LBY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SLV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TON&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ZMB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BRN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IMG&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LAO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MLT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OMN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;YEM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BMU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CRI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FJI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HTI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KNA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RWA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VEN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JOR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PRK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SUN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TZA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ABW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BHS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;COK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SVN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;URY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GNB&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LSO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MUS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SSD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TUV&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AND&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BOL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CSK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MHL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SAU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TCD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VNM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GIN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LCA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MNG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SMR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ZWE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DMA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GLP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LIE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PLW&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SOM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BFA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CIV&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DZA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GNQ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MWI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PRI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;STP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TWN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;EGY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GRD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PRT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ATG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LBN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MMR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SLB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TKM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;YUG&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FSM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IDN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KSV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MKD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NRU&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SDN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TGO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VUT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BIH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KGZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NGO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;QAT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DNK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GMB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MRT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PNG&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DDR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GGY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LBR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MNC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TMP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ZAF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AGO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;COM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HND&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KHM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MDG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NIC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ROU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SWZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:countryname:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BMU&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CRI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FJI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GUM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PRK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SOM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;XKX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BFA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DEU&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GMB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LCA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MNG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TCA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VCT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AIA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BHS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;COG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GRD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MSR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PLW&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SLB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VNM&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ATF&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BRN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HRV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KIR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PYF&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TWN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ZWE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BOL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FLK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PRT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;YEM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BIH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GRL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JEY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MTQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PNG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TKM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VUT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GIN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LBR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MMR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SAU&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SYC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ABW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CIV&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;EGY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GNB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LIE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MNP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TCD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VEN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DMA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IMN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LAO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SWZ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;URY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AND&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;COM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GTM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JOR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MUS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SLV&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TLS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WLF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ATG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HTI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KNA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NIC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;QAT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TZA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MHL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NLD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;REU&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SVN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CCK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DNK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GIB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LBN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MLT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NRU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RWA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SXM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DZA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GLP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IRN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LBY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OMN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SDN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VAT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ASM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CUW&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KGZ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NCL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PRY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SSD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ZAF&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BLZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CPV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GUF&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MAC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MWI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PRI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SMR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TON&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WSM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GNQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SGS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TGO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VGB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CAF&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GGY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IDN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KWT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MKD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ROU&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ATA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BRB&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CYM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FRO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HND&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KHM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MDG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NER&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;STP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TUV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ZMB&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AGO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BHR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ESH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LSO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MRT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SJM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VIR&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1844012970967576576:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Reject&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Assault&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fight&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Threaten&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coerce&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Protest&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Use unconventional mass violence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Reduce relations&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Disapprove&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Exhibit force posture&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[__tableau_internal_object_id__].[cnt:PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:code:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:eid:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[sum:code:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166035460:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[sum:quad_class:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152163409923:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152163409923:nk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[sum:month:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143561543692:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143541334019:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152162152448:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152162152448:nk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[sum:day:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166596613:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:root_code:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[sum:root_code:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:source_root:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[sum:aid:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143549136900:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cum:cnt:Calculation_1022317143549136900:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[diff:cnt:Calculation_1022317143549136900:qk:2]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[diff:cnt:Calculation_1022317143549136900:qk:3]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[diff:cnt:Calculation_1022317143549136900:qk:5]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[diff:cnt:Calculation_1022317143549136900:qk:6]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[diff:cnt:Calculation_1022317143549136900:qk:7]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[diff:cnt:Calculation_1022317143549136900:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Belgium&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='eid' />
        <field-sort-custom-order field='story_date' />
        <field-sort-custom-order field='Calculation_1022317143554514949' />
        <field-sort-custom-order field='Calculation_1022317143558508550' />
        <field-sort-custom-order field='Calculation_1022317143558758407' />
        <field-sort-custom-order field='Calculation_1022317143558905864' />
        <field-sort-custom-order field='Calculation_1022317143559049225' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='day' />
        <field-sort-custom-order field='source' />
        <field-sort-custom-order field='source_root' />
        <field-sort-custom-order field='Calculation_1022317143561543692' />
        <field-sort-custom-order field='Calculation_1022317143561314315' />
        <field-sort-custom-order field='Calculation_1022317143563157518' />
        <field-sort-custom-order field='Calculation_1022317143563837455' />
        <field-sort-custom-order field='Calculation_1022317143564128272' />
        <field-sort-custom-order field='Calculation_1022317143564386321' />
        <field-sort-custom-order field='Calculation_1022317143549136900' />
        <field-sort-custom-order field='Calculation_1022317143541334019' />
        <field-sort-custom-order field='Calculation_1219068152166596613' />
        <field-sort-custom-order field='Calculation_1219068152166035460' />
        <field-sort-custom-order field='Calculation_1219068152163409923' />
        <field-sort-custom-order field='Calculation_1219068152162152448' />
        <field-sort-custom-order field='source_agent' />
        <field-sort-custom-order field='source_others' />
        <field-sort-custom-order field='target' />
        <field-sort-custom-order field='target_root' />
        <field-sort-custom-order field='target_agent' />
        <field-sort-custom-order field='target_others' />
        <field-sort-custom-order field='code' />
        <field-sort-custom-order field='Calculation_1844012970967576576' />
        <field-sort-custom-order field='root_code' />
        <field-sort-custom-order field='quad_class' />
        <field-sort-custom-order field='goldstein' />
        <field-sort-custom-order field='joined_issues' />
        <field-sort-custom-order field='lat' />
        <field-sort-custom-order field='lon' />
        <field-sort-custom-order field='placename' />
        <field-sort-custom-order field='statename' />
        <field-sort-custom-order field='countryname' />
        <field-sort-custom-order field='Calculation_1844012971028602881' />
        <field-sort-custom-order field='aid' />
        <field-sort-custom-order field='process' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='PhoenixNYT_1945-2005.csv' id='PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895'>
            <properties context=''>
              <relation connection='textscan.0o9s8lh0qrezsi120z9jn0g7lpb0' name='PhoenixNYT_1945-2005.csv' table='[PhoenixNYT_1945-2005#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='nl_BE' separator=','>
                  <column datatype='string' name='eid' ordinal='0' />
                  <column datatype='date' name='story_date' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy' name='year' ordinal='2' />
                  <column datatype='integer' name='month' ordinal='3' />
                  <column datatype='integer' name='day' ordinal='4' />
                  <column datatype='string' name='source' ordinal='5' />
                  <column datatype='string' name='source_root' ordinal='6' />
                  <column datatype='string' name='source_agent' ordinal='7' />
                  <column datatype='string' name='source_others' ordinal='8' />
                  <column datatype='string' name='target' ordinal='9' />
                  <column datatype='string' name='target_root' ordinal='10' />
                  <column datatype='string' name='target_agent' ordinal='11' />
                  <column datatype='string' name='target_others' ordinal='12' />
                  <column datatype='string' name='code' ordinal='13' />
                  <column datatype='integer' name='root_code' ordinal='14' />
                  <column datatype='integer' name='quad_class' ordinal='15' />
                  <column datatype='string' name='goldstein' ordinal='16' />
                  <column datatype='string' name='joined_issues' ordinal='17' />
                  <column datatype='string' name='lat' ordinal='18' />
                  <column datatype='string' name='lon' ordinal='19' />
                  <column datatype='string' name='placename' ordinal='20' />
                  <column datatype='string' name='statename' ordinal='21' />
                  <column datatype='string' name='countryname' ordinal='22' />
                  <column datatype='integer' name='aid' ordinal='23' />
                  <column datatype='string' name='process' ordinal='24' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Events per Actors btw 1945-2000</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column aggregation='CountD' caption='rus' datatype='string' name='[Calculation_1022317143541334019]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (CONTAINS([source_root], &quot;RUS&quot;) OR CONTAINS([source_root], &quot;SUN&quot;)) AND&#13;&#10; (NOT CONTAINS ([target_root], &quot;RUS&quot;) OR NOT CONTAINS ([target_root], &quot;SUN&quot;)) THEN &quot;RUS&quot; END' />
            </column>
            <column aggregation='CountD' caption='nato' datatype='string' name='[Calculation_1022317143549136900]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot; &#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;CAN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558758407] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558905864] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;HUN&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;END' />
            </column>
            <column caption='FirstBatch' datatype='date' name='[Calculation_1022317143554514949]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE (&quot;1949-08-24&quot;)' />
            </column>
            <column caption='SecondBatch' datatype='date' name='[Calculation_1022317143558508550]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;1952-02-18&quot;)' />
            </column>
            <column caption='ThirdBatch' datatype='date' name='[Calculation_1022317143558758407]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1955-5-8&quot;)' />
            </column>
            <column caption='FourthBatch' datatype='date' name='[Calculation_1022317143558905864]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1982-5-30&quot;)' />
            </column>
            <column caption='FifthBatch' datatype='date' name='[Calculation_1022317143559049225]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1999-3-12&quot;)' />
            </column>
            <column caption='eu1' datatype='date' name='[Calculation_1022317143561314315]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1958-1-1&quot;)' />
            </column>
            <column aggregation='CountD' caption='eu' datatype='string' name='[Calculation_1022317143561543692]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot; &#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;IRL&quot;) AND NOT CONTAINS([target_root], &quot;IRL&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND [story_date] &gt;= [Calculation_1022317143563837455] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;AUT&quot;) AND NOT CONTAINS([target_root], &quot;AUT&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FIN&quot;) AND NOT CONTAINS([target_root], &quot;FIN&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;SWE&quot;) AND NOT CONTAINS([target_root], &quot;SWE&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;END' />
            </column>
            <column caption='eu2' datatype='date' name='[Calculation_1022317143563157518]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1973-1-1&quot;)' />
            </column>
            <column caption='eu3' datatype='date' name='[Calculation_1022317143563837455]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1981-1-1&quot;)' />
            </column>
            <column caption='eu4' datatype='date' name='[Calculation_1022317143564128272]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1986-1-1&quot;)' />
            </column>
            <column caption='eu5' datatype='date' name='[Calculation_1022317143564386321]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1995-1-1&quot;)' />
            </column>
            <column aggregation='CountD' caption='usa' datatype='string' name='[Calculation_1219068152162152448]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) THEN &quot;USA&quot; END' />
            </column>
            <column aggregation='CountD' caption='gbr' datatype='string' name='[Calculation_1219068152163409923]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) THEN &quot;GBR&quot; END' />
            </column>
            <column aggregation='CountD' caption='fra' datatype='string' name='[Calculation_1219068152166035460]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) THEN &quot;FRA&quot; END' />
            </column>
            <column caption='event_type' datatype='string' name='[Calculation_1844012970967576576]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([code], &apos;11&apos;) THEN &apos;Disapprove&apos; &#10;ELSEIF CONTAINS([code],&apos;12&apos;) THEN &apos;Reject&apos;&#10;ELSEIF CONTAINS([code],&apos;13&apos;) THEN &apos;Threaten&apos;&#10;ELSEIF CONTAINS([code],&apos;14&apos;) THEN &apos;Protest&apos;&#10;ELSEIF CONTAINS([code],&apos;15&apos;) THEN &apos;Exhibit force posture&apos;&#10;ELSEIF CONTAINS([code],&apos;16&apos;) THEN &apos;Reduce relations&apos;&#10;ELSEIF CONTAINS([code],&apos;17&apos;) THEN &apos;Coerce&apos;&#10;ELSEIF CONTAINS([code],&apos;18&apos;) THEN &apos;Assault&apos;&#10;ELSEIF CONTAINS([code],&apos;19&apos;) THEN &apos;Fight&apos;&#10;ELSEIF CONTAINS([code],&apos;20&apos;) THEN &apos;Use unconventional mass violence&apos;&#10;ELSE &apos;Other&apos;&#10;END' />
            </column>
            <column-instance column='[Calculation_1022317143541334019]' derivation='Count' name='[cnt:Calculation_1022317143541334019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[cnt:Calculation_1022317143549136900:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1022317143561543692]' derivation='Count' name='[cnt:Calculation_1022317143561543692:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152162152448]' derivation='Count' name='[cnt:Calculation_1219068152162152448:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152163409923]' derivation='Count' name='[cnt:Calculation_1219068152163409923:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152166035460]' derivation='Count' name='[cnt:Calculation_1219068152166035460:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[code]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1844012970967576576]' derivation='None' name='[none:Calculation_1844012970967576576:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[source_root]' role='dimension' type='nominal' />
            <column datatype='date' name='[story_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[target_root]' role='dimension' type='nominal' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143549136900:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152162152448:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143561543692:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152163409923:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143541334019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166035460:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143549136900:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152162152448:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143561543692:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152163409923:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143541334019:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166035460:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Assault&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Fight&quot;' />
              <groupfilter from='&quot;Protest&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Use unconventional mass violence&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Disapprove&quot;</bucket>
              <bucket>&quot;Coerce&quot;</bucket>
              <bucket>&quot;Fight&quot;</bucket>
              <bucket>&quot;Use unconventional mass violence&quot;</bucket>
              <bucket>&quot;Reject&quot;</bucket>
              <bucket>&quot;Threaten&quot;</bucket>
              <bucket>&quot;Protest&quot;</bucket>
              <bucket>&quot;Reduce relations&quot;</bucket>
              <bucket>&quot;Exhibit force posture&quot;</bucket>
              <bucket>&quot;Assault&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0ylu8n80byp4731h73qz30z8f062].[tyr:year:qk]' included-values='in-range'>
            <min>#1945-01-01 00:00:00#</min>
            <max>#2000-09-03 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[tyr:year:qk]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0ylu8n80byp4731h73qz30z8f062].[Multiple Values]' enable-instant-analytics='true' formula='total' id='refline0' label-type='value' scope='per-pane' value-column='[federated.0ylu8n80byp4731h73qz30z8f062].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[Multiple Values]</rows>
        <cols>([federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names] / [federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk])</cols>
      </table>
      <simple-id uuid='{69525287-50F1-47EB-9B7E-53CC5188FD46}' />
    </worksheet>
    <worksheet name='2'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column aggregation='CountD' caption='rus' datatype='string' name='[Calculation_1022317143541334019]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (CONTAINS([source_root], &quot;RUS&quot;) OR CONTAINS([source_root], &quot;SUN&quot;)) AND&#13;&#10; (NOT CONTAINS ([target_root], &quot;RUS&quot;) OR NOT CONTAINS ([target_root], &quot;SUN&quot;)) THEN &quot;RUS&quot; END' />
            </column>
            <column aggregation='CountD' caption='nato' datatype='string' name='[Calculation_1022317143549136900]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot; &#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;CAN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558758407] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558905864] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;HUN&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;END' />
            </column>
            <column caption='FirstBatch' datatype='date' name='[Calculation_1022317143554514949]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE (&quot;1949-08-24&quot;)' />
            </column>
            <column caption='SecondBatch' datatype='date' name='[Calculation_1022317143558508550]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;1952-02-18&quot;)' />
            </column>
            <column caption='ThirdBatch' datatype='date' name='[Calculation_1022317143558758407]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1955-5-8&quot;)' />
            </column>
            <column caption='FourthBatch' datatype='date' name='[Calculation_1022317143558905864]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1982-5-30&quot;)' />
            </column>
            <column caption='FifthBatch' datatype='date' name='[Calculation_1022317143559049225]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1999-3-12&quot;)' />
            </column>
            <column caption='eu1' datatype='date' name='[Calculation_1022317143561314315]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1958-1-1&quot;)' />
            </column>
            <column aggregation='CountD' caption='eu' datatype='string' name='[Calculation_1022317143561543692]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot; &#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;IRL&quot;) AND NOT CONTAINS([target_root], &quot;IRL&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND [story_date] &gt;= [Calculation_1022317143563837455] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;AUT&quot;) AND NOT CONTAINS([target_root], &quot;AUT&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FIN&quot;) AND NOT CONTAINS([target_root], &quot;FIN&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;SWE&quot;) AND NOT CONTAINS([target_root], &quot;SWE&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;END' />
            </column>
            <column caption='eu2' datatype='date' name='[Calculation_1022317143563157518]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1973-1-1&quot;)' />
            </column>
            <column caption='eu3' datatype='date' name='[Calculation_1022317143563837455]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1981-1-1&quot;)' />
            </column>
            <column caption='eu4' datatype='date' name='[Calculation_1022317143564128272]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1986-1-1&quot;)' />
            </column>
            <column caption='eu5' datatype='date' name='[Calculation_1022317143564386321]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1995-1-1&quot;)' />
            </column>
            <column aggregation='CountD' caption='usa' datatype='string' name='[Calculation_1219068152162152448]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) THEN &quot;USA&quot; END' />
            </column>
            <column aggregation='CountD' caption='gbr' datatype='string' name='[Calculation_1219068152163409923]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) THEN &quot;GBR&quot; END' />
            </column>
            <column aggregation='CountD' caption='fra' datatype='string' name='[Calculation_1219068152166035460]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) THEN &quot;FRA&quot; END' />
            </column>
            <column caption='event_type' datatype='string' name='[Calculation_1844012970967576576]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([code], &apos;11&apos;) THEN &apos;Disapprove&apos; &#10;ELSEIF CONTAINS([code],&apos;12&apos;) THEN &apos;Reject&apos;&#10;ELSEIF CONTAINS([code],&apos;13&apos;) THEN &apos;Threaten&apos;&#10;ELSEIF CONTAINS([code],&apos;14&apos;) THEN &apos;Protest&apos;&#10;ELSEIF CONTAINS([code],&apos;15&apos;) THEN &apos;Exhibit force posture&apos;&#10;ELSEIF CONTAINS([code],&apos;16&apos;) THEN &apos;Reduce relations&apos;&#10;ELSEIF CONTAINS([code],&apos;17&apos;) THEN &apos;Coerce&apos;&#10;ELSEIF CONTAINS([code],&apos;18&apos;) THEN &apos;Assault&apos;&#10;ELSEIF CONTAINS([code],&apos;19&apos;) THEN &apos;Fight&apos;&#10;ELSEIF CONTAINS([code],&apos;20&apos;) THEN &apos;Use unconventional mass violence&apos;&#10;ELSE &apos;Other&apos;&#10;END' />
            </column>
            <column caption='Region' datatype='string' name='[Calculation_1844012971028602881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([countryname],&apos;ARE&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BHR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CYP&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;EGY&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;IRN&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;IRQ&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ISR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;JOR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;KWT&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LBN&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;OMN&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;PSE&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;QAT&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SAU&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SYR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TUR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;YEM&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;DEU&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;AND&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ALB&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;AUT&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;AZE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BLR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ARE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BEL&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BIH&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BGR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CZE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;DNK&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ARM&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;EST&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;FIN&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;FRA&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GEO&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NLD&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;IRL&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ESP&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SWE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CHE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ITA&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ISL&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MNE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;KAZ&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MKD&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LVA&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LTU&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LIE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LUX&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;HUN&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MLT&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MDA&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MCO&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NOR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;POL&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;RUS&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SMR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SRB&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SUK&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SUN&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MKR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;VAT&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GRC&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;AGO&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BEN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BWA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BFA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BDI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;DZA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;DJI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TCD&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GNQ&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ERI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ETH&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MAR&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CIV&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GMP&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GHA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GIN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GNB&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ZAF&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SSD&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CMR&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;KEN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;COM&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;COG&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;COD&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LSO&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LBR&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MDG&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MWI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MLI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MUS&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MRT&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MOZ&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NAM&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NER&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NGA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CAF&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;RWA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;STP&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SEN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SYC&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SLE&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SOM&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SDN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TZA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TGO&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TUN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;UGA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ZMB&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ZWE&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;&apos;) THEN &apos;Null&apos;&#10;ELSE &apos;Other&apos;&#10;END' />
            </column>
            <column-instance column='[Calculation_1022317143541334019]' derivation='Count' name='[cnt:Calculation_1022317143541334019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[cnt:Calculation_1022317143549136900:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1022317143561543692]' derivation='Count' name='[cnt:Calculation_1022317143561543692:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152162152448]' derivation='Count' name='[cnt:Calculation_1219068152162152448:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152163409923]' derivation='Count' name='[cnt:Calculation_1219068152163409923:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152166035460]' derivation='Count' name='[cnt:Calculation_1219068152166035460:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[code]' role='dimension' type='nominal' />
            <column datatype='string' name='[countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_1844012970967576576]' derivation='None' name='[none:Calculation_1844012970967576576:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1844012971028602881]' derivation='None' name='[none:Calculation_1844012971028602881:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[source_root]' role='dimension' type='nominal' />
            <column datatype='date' name='[story_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[target_root]' role='dimension' type='nominal' />
            <column datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143561543692:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166035460:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152163409923:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143549136900:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143541334019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152162152448:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012971028602881:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Africa&quot;' function='range' level='[none:Calculation_1844012971028602881:nk]' to='&quot;Middle East&quot;' />
              <groupfilter function='member' level='[none:Calculation_1844012971028602881:nk]' member='&quot;Other&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' included-values='in-range'>
            <min>1945</min>
            <max>2000</max>
          </filter>
          <slices>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012971028602881:nk]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#e15759' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' />
              <text column='[federated.0ylu8n80byp4731h73qz30z8f062].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012971028602881:nk] / [federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk])</rows>
        <cols>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{FBE6F79A-09EF-4026-B387-750D5E9D34B7}' />
    </worksheet>
    <worksheet name='3'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column aggregation='CountD' caption='rus' datatype='string' name='[Calculation_1022317143541334019]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (CONTAINS([source_root], &quot;RUS&quot;) OR CONTAINS([source_root], &quot;SUN&quot;)) AND&#13;&#10; (NOT CONTAINS ([target_root], &quot;RUS&quot;) OR NOT CONTAINS ([target_root], &quot;SUN&quot;)) THEN &quot;RUS&quot; END' />
            </column>
            <column aggregation='CountD' caption='nato' datatype='string' name='[Calculation_1022317143549136900]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot; &#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;CAN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558758407] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558905864] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;HUN&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;END' />
            </column>
            <column caption='FirstBatch' datatype='date' name='[Calculation_1022317143554514949]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE (&quot;1949-08-24&quot;)' />
            </column>
            <column caption='SecondBatch' datatype='date' name='[Calculation_1022317143558508550]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;1952-02-18&quot;)' />
            </column>
            <column caption='ThirdBatch' datatype='date' name='[Calculation_1022317143558758407]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1955-5-8&quot;)' />
            </column>
            <column caption='FourthBatch' datatype='date' name='[Calculation_1022317143558905864]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1982-5-30&quot;)' />
            </column>
            <column caption='FifthBatch' datatype='date' name='[Calculation_1022317143559049225]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1999-3-12&quot;)' />
            </column>
            <column caption='eu1' datatype='date' name='[Calculation_1022317143561314315]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1958-1-1&quot;)' />
            </column>
            <column aggregation='CountD' caption='eu' datatype='string' name='[Calculation_1022317143561543692]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot; &#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;IRL&quot;) AND NOT CONTAINS([target_root], &quot;IRL&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND [story_date] &gt;= [Calculation_1022317143563837455] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;AUT&quot;) AND NOT CONTAINS([target_root], &quot;AUT&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FIN&quot;) AND NOT CONTAINS([target_root], &quot;FIN&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;SWE&quot;) AND NOT CONTAINS([target_root], &quot;SWE&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;END' />
            </column>
            <column caption='eu2' datatype='date' name='[Calculation_1022317143563157518]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1973-1-1&quot;)' />
            </column>
            <column caption='eu3' datatype='date' name='[Calculation_1022317143563837455]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1981-1-1&quot;)' />
            </column>
            <column caption='eu4' datatype='date' name='[Calculation_1022317143564128272]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1986-1-1&quot;)' />
            </column>
            <column caption='eu5' datatype='date' name='[Calculation_1022317143564386321]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1995-1-1&quot;)' />
            </column>
            <column aggregation='CountD' caption='usa' datatype='string' name='[Calculation_1219068152162152448]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) THEN &quot;USA&quot; END' />
            </column>
            <column aggregation='CountD' caption='gbr' datatype='string' name='[Calculation_1219068152163409923]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) THEN &quot;GBR&quot; END' />
            </column>
            <column aggregation='CountD' caption='fra' datatype='string' name='[Calculation_1219068152166035460]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) THEN &quot;FRA&quot; END' />
            </column>
            <column caption='event_type' datatype='string' name='[Calculation_1844012970967576576]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([code], &apos;11&apos;) THEN &apos;Disapprove&apos; &#10;ELSEIF CONTAINS([code],&apos;12&apos;) THEN &apos;Reject&apos;&#10;ELSEIF CONTAINS([code],&apos;13&apos;) THEN &apos;Threaten&apos;&#10;ELSEIF CONTAINS([code],&apos;14&apos;) THEN &apos;Protest&apos;&#10;ELSEIF CONTAINS([code],&apos;15&apos;) THEN &apos;Exhibit force posture&apos;&#10;ELSEIF CONTAINS([code],&apos;16&apos;) THEN &apos;Reduce relations&apos;&#10;ELSEIF CONTAINS([code],&apos;17&apos;) THEN &apos;Coerce&apos;&#10;ELSEIF CONTAINS([code],&apos;18&apos;) THEN &apos;Assault&apos;&#10;ELSEIF CONTAINS([code],&apos;19&apos;) THEN &apos;Fight&apos;&#10;ELSEIF CONTAINS([code],&apos;20&apos;) THEN &apos;Use unconventional mass violence&apos;&#10;ELSE &apos;Other&apos;&#10;END' />
            </column>
            <column-instance column='[Calculation_1022317143541334019]' derivation='Count' name='[cnt:Calculation_1022317143541334019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[cnt:Calculation_1022317143549136900:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1022317143561543692]' derivation='Count' name='[cnt:Calculation_1022317143561543692:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152162152448]' derivation='Count' name='[cnt:Calculation_1219068152162152448:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152163409923]' derivation='Count' name='[cnt:Calculation_1219068152163409923:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152166035460]' derivation='Count' name='[cnt:Calculation_1219068152166035460:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[code]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1844012970967576576]' derivation='None' name='[none:Calculation_1844012970967576576:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[source_root]' role='dimension' type='nominal' />
            <column datatype='date' name='[story_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[target_root]' role='dimension' type='nominal' />
            <column datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143549136900:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152162152448:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152163409923:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143541334019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166035460:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143561543692:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143549136900:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152162152448:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143541334019:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143561543692:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152163409923:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166035460:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Assault&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Fight&quot;' />
              <groupfilter from='&quot;Protest&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Use unconventional mass violence&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' included-values='in-range'>
            <min>1945</min>
            <max>2000</max>
          </filter>
          <slices>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#59a14f' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[Multiple Values]</rows>
        <cols>([federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk] / [federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{CBFB5218-8F5D-4321-82C9-29B837C646AF}' />
    </worksheet>
    <worksheet name='4'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column caption='event_type' datatype='string' name='[Calculation_1844012970967576576]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([code], &apos;11&apos;) THEN &apos;Disapprove&apos; &#10;ELSEIF CONTAINS([code],&apos;12&apos;) THEN &apos;Reject&apos;&#10;ELSEIF CONTAINS([code],&apos;13&apos;) THEN &apos;Threaten&apos;&#10;ELSEIF CONTAINS([code],&apos;14&apos;) THEN &apos;Protest&apos;&#10;ELSEIF CONTAINS([code],&apos;15&apos;) THEN &apos;Exhibit force posture&apos;&#10;ELSEIF CONTAINS([code],&apos;16&apos;) THEN &apos;Reduce relations&apos;&#10;ELSEIF CONTAINS([code],&apos;17&apos;) THEN &apos;Coerce&apos;&#10;ELSEIF CONTAINS([code],&apos;18&apos;) THEN &apos;Assault&apos;&#10;ELSEIF CONTAINS([code],&apos;19&apos;) THEN &apos;Fight&apos;&#10;ELSEIF CONTAINS([code],&apos;20&apos;) THEN &apos;Use unconventional mass violence&apos;&#10;ELSE &apos;Other&apos;&#10;END' />
            </column>
            <column-instance column='[Calculation_1844012970967576576]' derivation='Count' name='[cnt:Calculation_1844012970967576576:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[code]' role='dimension' type='nominal' />
            <column datatype='string' name='[countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[eid]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1844012970967576576]' derivation='None' name='[none:Calculation_1844012970967576576:nk]' pivot='key' type='nominal' />
            <column-instance column='[countryname]' derivation='None' name='[none:countryname:nk]' pivot='key' type='nominal' />
            <column datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Assault&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Fight&quot;' />
              <groupfilter from='&quot;Protest&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Use unconventional mass violence&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([eid])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:countryname:nk]' />
                  <groupfilter function='member' level='[none:countryname:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' included-values='in-range'>
            <min>1945</min>
            <max>2000</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1844012970967576576:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' />
              <text column='[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1844012970967576576:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1844012970967576576:qk]</rows>
        <cols>[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]</cols>
      </table>
      <simple-id uuid='{05FB2345-F5DD-4377-AAFA-7BC59942888E}' />
    </worksheet>
    <worksheet name='5'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column aggregation='CountD' caption='rus' datatype='string' name='[Calculation_1022317143541334019]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (CONTAINS([source_root], &quot;RUS&quot;) OR CONTAINS([source_root], &quot;SUN&quot;)) AND&#13;&#10; (NOT CONTAINS ([target_root], &quot;RUS&quot;) OR NOT CONTAINS ([target_root], &quot;SUN&quot;)) THEN &quot;RUS&quot; END' />
            </column>
            <column aggregation='CountD' caption='nato' datatype='string' name='[Calculation_1022317143549136900]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot; &#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;CAN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558758407] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558905864] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;HUN&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;END' />
            </column>
            <column caption='FirstBatch' datatype='date' name='[Calculation_1022317143554514949]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE (&quot;1949-08-24&quot;)' />
            </column>
            <column caption='SecondBatch' datatype='date' name='[Calculation_1022317143558508550]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;1952-02-18&quot;)' />
            </column>
            <column caption='ThirdBatch' datatype='date' name='[Calculation_1022317143558758407]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1955-5-8&quot;)' />
            </column>
            <column caption='FourthBatch' datatype='date' name='[Calculation_1022317143558905864]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1982-5-30&quot;)' />
            </column>
            <column caption='FifthBatch' datatype='date' name='[Calculation_1022317143559049225]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1999-3-12&quot;)' />
            </column>
            <column caption='eu1' datatype='date' name='[Calculation_1022317143561314315]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1958-1-1&quot;)' />
            </column>
            <column aggregation='CountD' caption='eu' datatype='string' name='[Calculation_1022317143561543692]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot; &#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;IRL&quot;) AND NOT CONTAINS([target_root], &quot;IRL&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND [story_date] &gt;= [Calculation_1022317143563837455] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;AUT&quot;) AND NOT CONTAINS([target_root], &quot;AUT&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FIN&quot;) AND NOT CONTAINS([target_root], &quot;FIN&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;SWE&quot;) AND NOT CONTAINS([target_root], &quot;SWE&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;END' />
            </column>
            <column caption='eu2' datatype='date' name='[Calculation_1022317143563157518]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1973-1-1&quot;)' />
            </column>
            <column caption='eu3' datatype='date' name='[Calculation_1022317143563837455]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1981-1-1&quot;)' />
            </column>
            <column caption='eu4' datatype='date' name='[Calculation_1022317143564128272]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1986-1-1&quot;)' />
            </column>
            <column caption='eu5' datatype='date' name='[Calculation_1022317143564386321]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1995-1-1&quot;)' />
            </column>
            <column aggregation='CountD' caption='usa' datatype='string' name='[Calculation_1219068152162152448]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) THEN &quot;USA&quot; END' />
            </column>
            <column aggregation='CountD' caption='gbr' datatype='string' name='[Calculation_1219068152163409923]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) THEN &quot;GBR&quot; END' />
            </column>
            <column aggregation='CountD' caption='fra' datatype='string' name='[Calculation_1219068152166035460]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) THEN &quot;FRA&quot; END' />
            </column>
            <column caption='event_type' datatype='string' name='[Calculation_1844012970967576576]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([code], &apos;11&apos;) THEN &apos;Disapprove&apos; &#10;ELSEIF CONTAINS([code],&apos;12&apos;) THEN &apos;Reject&apos;&#10;ELSEIF CONTAINS([code],&apos;13&apos;) THEN &apos;Threaten&apos;&#10;ELSEIF CONTAINS([code],&apos;14&apos;) THEN &apos;Protest&apos;&#10;ELSEIF CONTAINS([code],&apos;15&apos;) THEN &apos;Exhibit force posture&apos;&#10;ELSEIF CONTAINS([code],&apos;16&apos;) THEN &apos;Reduce relations&apos;&#10;ELSEIF CONTAINS([code],&apos;17&apos;) THEN &apos;Coerce&apos;&#10;ELSEIF CONTAINS([code],&apos;18&apos;) THEN &apos;Assault&apos;&#10;ELSEIF CONTAINS([code],&apos;19&apos;) THEN &apos;Fight&apos;&#10;ELSEIF CONTAINS([code],&apos;20&apos;) THEN &apos;Use unconventional mass violence&apos;&#10;ELSE &apos;Other&apos;&#10;END' />
            </column>
            <column-instance column='[Calculation_1022317143541334019]' derivation='Count' name='[cnt:Calculation_1022317143541334019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[cnt:Calculation_1022317143549136900:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1022317143561543692]' derivation='Count' name='[cnt:Calculation_1022317143561543692:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152162152448]' derivation='Count' name='[cnt:Calculation_1219068152162152448:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152163409923]' derivation='Count' name='[cnt:Calculation_1219068152163409923:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152166035460]' derivation='Count' name='[cnt:Calculation_1219068152166035460:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[code]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1844012970967576576]' derivation='None' name='[none:Calculation_1844012970967576576:nk]' pivot='key' type='nominal' />
            <column-instance column='[target_root]' derivation='None' name='[none:target_root:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[source_root]' role='dimension' type='nominal' />
            <column datatype='date' name='[story_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[target_root]' role='dimension' type='nominal' />
            <column datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143549136900:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152162152448:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152163409923:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143541334019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166035460:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143561543692:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143549136900:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152162152448:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152163409923:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143541334019:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166035460:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143561543692:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1844012970967576576:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:target_root:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([target_root])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;ABW&quot;' function='range' level='[none:target_root:nk]' to='&quot;ZWE&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' included-values='in-range'>
            <min>1945</min>
            <max>2000</max>
          </filter>
          <slices>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[none:target_root:nk]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:target_root:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0ylu8n80byp4731h73qz30z8f062].[Multiple Values]' enable-instant-analytics='true' formula='total' id='refline1' label-type='value' scope='per-cell' value-column='[federated.0ylu8n80byp4731h73qz30z8f062].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[Multiple Values]</rows>
        <cols>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{ED5A0050-9878-4D62-8D82-00BA271CF827}' />
    </worksheet>
    <worksheet name='5-'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column-instance column='[code]' derivation='Count' name='[cnt:code:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[code]' role='dimension' type='nominal' />
            <column datatype='string' name='[countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[countryname]' derivation='None' name='[none:countryname:nk]' pivot='key' type='nominal' />
            <column datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' included-values='in-range'>
            <min>1945</min>
            <max>2000</max>
          </filter>
          <slices>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ylu8n80byp4731h73qz30z8f062].[Longitude (generated)]' field-type='quantitative' max='22551560.207619183' min='-11116608.412367919' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ylu8n80byp4731h73qz30z8f062].[Latitude (generated)]' field-type='quantitative' max='14823066.640553826' min='-12297224.169514455' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]' />
              <text column='[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:code:qk]' />
              <lod column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[Latitude (generated)]</rows>
        <cols>[federated.0ylu8n80byp4731h73qz30z8f062].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{37D3E326-9345-46A7-92AA-C4E6D8C380FA}' />
    </worksheet>
    <worksheet name='7'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column caption='event_type' datatype='string' name='[Calculation_1844012970967576576]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([code], &apos;11&apos;) THEN &apos;Disapprove&apos; &#10;ELSEIF CONTAINS([code],&apos;12&apos;) THEN &apos;Reject&apos;&#10;ELSEIF CONTAINS([code],&apos;13&apos;) THEN &apos;Threaten&apos;&#10;ELSEIF CONTAINS([code],&apos;14&apos;) THEN &apos;Protest&apos;&#10;ELSEIF CONTAINS([code],&apos;15&apos;) THEN &apos;Exhibit force posture&apos;&#10;ELSEIF CONTAINS([code],&apos;16&apos;) THEN &apos;Reduce relations&apos;&#10;ELSEIF CONTAINS([code],&apos;17&apos;) THEN &apos;Coerce&apos;&#10;ELSEIF CONTAINS([code],&apos;18&apos;) THEN &apos;Assault&apos;&#10;ELSEIF CONTAINS([code],&apos;19&apos;) THEN &apos;Fight&apos;&#10;ELSEIF CONTAINS([code],&apos;20&apos;) THEN &apos;Use unconventional mass violence&apos;&#10;ELSE &apos;Other&apos;&#10;END' />
            </column>
            <column-instance column='[code]' derivation='Count' name='[cnt:code:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[code]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1844012970967576576]' derivation='None' name='[none:Calculation_1844012970967576576:nk]' pivot='key' type='nominal' />
            <column datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Assault&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Fight&quot;' />
              <groupfilter from='&quot;Protest&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Use unconventional mass violence&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' included-values='in-range'>
            <min>1946</min>
            <max>2000</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:code:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#e15759' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</rows>
        <cols>[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:code:qk]</cols>
      </table>
      <simple-id uuid='{0BB072D7-3EE8-4201-AFAB-2F8C70BF00A6}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column-instance column='[eid]' derivation='Count' name='[cnt:eid:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[eid]' role='dimension' type='nominal' />
            <column-instance column='[countryname]' derivation='None' name='[none:countryname:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ylu8n80byp4731h73qz30z8f062].[Longitude (generated)]' field-type='quantitative' max='21116913.114878159' min='-20323180.367076933' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ylu8n80byp4731h73qz30z8f062].[Latitude (generated)]' field-type='quantitative' max='16424711.310816519' min='-7558933.5763682434' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:eid:qk]' max='10000' min='100' num-steps='10' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#cae1ca</color>
                <color>#a7d1a7</color>
                <color>#87c287</color>
                <color>#6bb26b</color>
                <color>#51a351</color>
                <color>#3a933a</color>
                <color>#278327</color>
                <color>#177417</color>
                <color>#0a640a</color>
                <color>#005500</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:eid:qk]' />
              <lod column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]' />
              <geometry column='[federated.0ylu8n80byp4731h73qz30z8f062].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[Latitude (generated)]</rows>
        <cols>[federated.0ylu8n80byp4731h73qz30z8f062].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0948519F-B02C-4F89-B56F-63DF6F6D96F2}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column-instance column='[eid]' derivation='Count' name='[cnt:eid:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[code]' role='dimension' type='nominal' />
            <column datatype='string' name='[eid]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ylu8n80byp4731h73qz30z8f062].[none:code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:eid:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:eid:qk]' value='68' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:eid:qk]</rows>
        <cols>[federated.0ylu8n80byp4731h73qz30z8f062].[none:code:nk]</cols>
      </table>
      <simple-id uuid='{A323B536-A223-4426-B5E7-F007DEE0C230}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column aggregation='CountD' caption='usa' datatype='string' name='[Calculation_1219068152162152448]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) THEN &quot;USA&quot; END' />
            </column>
            <column aggregation='CountD' caption='gbr' datatype='string' name='[Calculation_1219068152163409923]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) THEN &quot;GBR&quot; END' />
            </column>
            <column aggregation='CountD' caption='fra' datatype='string' name='[Calculation_1219068152166035460]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) THEN &quot;FRA&quot; END' />
            </column>
            <column caption='null' datatype='string' name='[Calculation_1219068152166596613]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;&quot;) THEN &quot;null&quot; END' />
            </column>
            <column-instance column='[Calculation_1219068152162152448]' derivation='Count' name='[cnt:Calculation_1219068152162152448:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152163409923]' derivation='Count' name='[cnt:Calculation_1219068152163409923:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152166035460]' derivation='Count' name='[cnt:Calculation_1219068152166035460:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152166596613]' derivation='Count' name='[cnt:Calculation_1219068152166596613:qk]' pivot='key' type='quantitative' />
            <column-instance column='[eid]' derivation='Count' name='[cnt:eid:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[eid]' role='dimension' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[source_root]' role='dimension' type='nominal' />
            <column datatype='string' name='[target_root]' role='dimension' type='nominal' />
            <column datatype='date' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:eid:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166035460:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152163409923:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166596613:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152162152448:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[Multiple Values]</rows>
        <cols>[federated.0ylu8n80byp4731h73qz30z8f062].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{849088BE-9BD1-4B78-8A28-0781731E09D9}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column-instance column='[eid]' derivation='Count' name='[cnt:eid:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[eid]' role='dimension' type='nominal' />
            <column-instance column='[source_root]' derivation='None' name='[none:source_root:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[source_root]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ylu8n80byp4731h73qz30z8f062].[none:source_root:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:eid:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[none:source_root:nk]</rows>
        <cols>[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:eid:qk]</cols>
      </table>
      <simple-id uuid='{E7E2B3AC-45ED-421F-A6C4-9E139243E320}' />
    </worksheet>
    <worksheet name='how many countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column datatype='string' name='[countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[countryname]' derivation='CountD' name='[ctd:countryname:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ylu8n80byp4731h73qz30z8f062].[ctd:countryname:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{72922C7F-7655-426B-9A7B-900A41165DAE}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:eid:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:eid:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{29327B4E-AB21-4FFC-8AD6-D1B3760484A9}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:eid:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{20B4D0F1-F996-4767-A941-E0F876852738}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='9' param='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152162152448:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152163409923:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152166035460:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152166596613:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:eid:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:source_agent:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:source_root:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:statename:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C46BE8A-951A-46A0-BE38-30A5D16D935B}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:eid:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:source_root:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D097DCB-1009-42F8-B7F9-B8321E08F503}' />
    </window>
    <window class='worksheet' name='1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' type='filter' />
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[tyr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='8' param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143541334019:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143549136900:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143561543692:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152162152448:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152163409923:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152166035460:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:code:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F03A1F0F-77D9-45CD-938A-EDB465AB184D}' />
    </window>
    <window class='worksheet' name='2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[countryname (group)]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143541334019:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143549136900:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143561543692:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152162152448:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152163409923:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152166035460:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152166596613:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012971028602881:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:code:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A848569-D3A6-4729-BAEF-8C7FE36AD09D}' />
    </window>
    <window class='worksheet' maximized='true' name='3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' type='filter' />
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0ylu8n80byp4731h73qz30z8f062].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143541334019:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143549136900:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152162152448:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152163409923:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152166035460:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:code:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7E4ACBE-77ED-4EE0-A590-FF9E7A406186}' />
    </window>
    <window class='worksheet' name='4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' type='filter' />
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:eid:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4485CA33-89CA-473E-AC43-E38A84C8CB52}' />
    </window>
    <window class='worksheet' name='5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='196'>
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' type='filter' />
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='12' param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:target_root:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143541334019:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143549136900:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143561543692:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152163409923:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152166035460:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:code:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:target_root:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3EF80B9A-C248-49E7-95CE-146A44E67135}' />
    </window>
    <window class='worksheet' name='5-'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:code:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:year:qk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{600BD536-46D2-4172-A5D7-985840A8DC44}' />
    </window>
    <window class='worksheet' name='7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' type='filter' />
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:AdhocCluster:2:ok]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:code (bin):qk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:code:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:code:qk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{280410EF-8D7F-40A3-AD25-6D87986B0C4E}' />
    </window>
    <window class='worksheet' name='how many countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75DDE74C-01D0-49C2-B42D-352CC79AEC47}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9aZMc13Wu++ycap66u3ruxgwCBClSHGTpXNuSpRMO+aN/gP+A/5sjbtih
      D47rq2NJlimKImmSAAhi6Lm7eqi5KufMvc+H6iqBFAWgspooAOo3ggE02PXW2pl7XPtdawml
      lOIc5/gLhBBCaNM24hznmCbOB0BCeJ43bRPOcQY4HwAJ4brutE04xxnAmLYBf0n4wx/+QK1W
      Y21tjdXVVfb29nj77bfH4vj3f/93UqkUAP1+n5/85Cd8/PHHXL58mbW1tWfmcRyH//iP/2B5
      eZl+v0+n0+Hdd9/lt7/9LdeuXeOdd9554uf39vbY398nl8tx48YN/uVf/oV/+Id/4Be/+AWV
      SoXZ2Vl2dnb4+7//ewqFwjPb9dlnn7G1tcV7771HvV6nWCzi+z737t3j/fffZ2Vl5Zm5Pv/8
      c27evMnt27c5OTkhm83y3nvv8Ytf/IJ//Md/BM5XgOeKhw8fIqXk5OSETqfD/fv3x+bY2dlh
      aWmJnZ0dPM9jc3OT3d1dPvvss7F4fv/737O6ukoYhty/f5+dnR329/eJ45gPP/yQp/lGGo0G
      v/nNb7h37x7b29vU63WazSbz8/PcvHmThw8f8ld/9Vd89NFHY9m1vb1NLpfjD3/4Aw8ePODg
      4IAHDx7Q6/UolUpjcT169Ig4jrl37x5fffUVlUqFr776iqOjI9rtNnA+AJ4rdF3nrbfeolwu
      s729jeM4Y3NomoZlWcRxzO7uLrquc3x8zMOHD4nj+Jl5crkctm3z4MEDcrkcV65coV6vs7e3
      x8LCwjNxvPfee3z88cd88cUX5HI5Pv74Y3RdxzRNfN/n8PCQbDY7VvuUUnzxxRfcvHmTVqtF
      rVbj8uXLXLt2jd/85jdjcQFsbW0hpeTnP/85v/zlL7lz5w7pdJpPPvkEAHHuBk2GVqtFpVIZ
      6zO7u7tsb29z69Yt7ty5w9WrV1lcXByL4+DggOXlZQ4ODpiZmeHRo0dcunSJXq/H7OwshvFs
      u1opJZ9++uloe9LpdLh58yZBENDtdllbW0PX9T/7+W63i67r7O3tkc/nRzal02ny+TytVout
      rS3ef//9J/J8E0dHR8zMzLC7u0sURdi2zYULF7hz5w7vvvvuWAPKcRw+/PBD3n33XR48eECp
      VCKbzbK8vMz+/j6rq6tiNADiOCaKomcm/0tHt9ulWCxO24xzTIB0Oi1G04WU8nwAjIHzCePV
      wGgAmKaJaZoA/Nu//Rs//elP+d3vfsetW7dYXFzk/v37XLt2DSHEmXyxbdsIIZ66pHmeh1IK
      y7LGWkq/awRBQC6XS/z5WqOHUrA89+wekm9DLCV7x12EEKzNFyd6P1Ip9o67ZFIG1XKytoVR
      TM8JmClmaPc9MimDlDmZszEIY3aPOyzPFcikzIm4AJpdl0LWAr7FDer7PsfHx3zwwQf86le/
      Io5j/vVf/5WlpSX29vYIgoB8Ps/m5ib/9E//lNiIzc1NhBCUSiV83yeVSuH7Pul0mlarxcLC
      wujvnU6HZrPJ3/7t357ZAJwmpFTc2TrhvevLE3MJISgX0nz64JC1+Qm3ZAosU+fO5gk/fjub
      6FnXOw47R13efW2JX3+2zQ9urrA4k5/ILD+MSFkGX27Xeef60kRcYRTzy082+dm7l4Bv8QLd
      vn2bOI7Z2NjgrbfeolKp8LOf/YwgCDg8PORHP/oRGxsb1Gq1iQyp1WocHBzgui6e543+6/f7
      1Go16vU6/X4f13UpFApcuHBhou97kSAE3Fyf4/f39pET+iA0IejZAVeWKxNPDpomcP1oIp6F
      mTwpU+fu1glRLDlq9ieyCQZt3Dho8ebl+Ym5Pnt4hBBw3LKBb1kBlpeXeeutt6jVamiaRjab
      JZVKkclkSKVS3Lt3j7fffnssl9s34Xkeb7/9NlJK+v0+cRyTTqdxXRelFOVymUwmQ61WY2lp
      iWw2y8bGxiszCKRUHLcdquUsgslXNC+MuLI8nkfq2xCEMa2eSy6TfJuxf9KlbXv84MYKa/NF
      NG3y9tW7LmnLoNXzmK8k33YCvHdjmfXFErn0YAt07gZNiCRu0HO8WBBCiOcqhZBSEgTB8/zK
      7wxhGJ4L4l4BPHctkJQSYHTV/rIeaqWUo7aM9Tml0IQ4k/YrpUCcxSbqj1xMaNdZv1elFOL0
      eU38rE7tkkqNntnUxHCfffYZMzMzlEolpJSk02l6vR7FYnE0s2qahuM4zMzMYFnWtEw9MwSx
      ouXGKCCSg5ewXDBJ8l79SNJ0JZoAL1IUUxqVTDI3sR9JGq7E0MCPFTNpnZyVrLPV+jGxVBRS
      GnYg0TXBYj5ZN+t4MXaoKFgabT+mYGmU08na2PYkvUBSSGm4oWImM/D/TGUARFFENptldXWV
      u3fvIoSg3W7jui7lcplqtUq32x1d9efz+aeqE18GWLrAixSmLkjrGrFSKFSig7ClCxSQMTVC
      GeNEivLpJJ6ECyBramQMmORQGEuFFykW8hp+rKgk7LAAxZSGF8V4kWQpb1B3kjteUobgyFZo
      QqIUOOGglVMRw+m6TrvdZnt7mzAMR/cAs7Oz5HI5VldXCYIA3/fRNO2ZxVkvOtxQkjIGS7Ad
      SvxYJd6+dH2JG0pgMKCiWJG063Z8iRsNOkbbi+l48qlq0G/D8CMZU+BHCinBnKCHdX1Jx5do
      QnDQi0YDNYldbqhIGwJTE2iaIJKnW6Ln6QWSUo62N0qprz3k4T5P07TR/x/+KYR44c4KSbVA
      sVTo2tmcAYZ4kc5TSikUA9/9WWJ4dkqKx+0angHy+fzz9QIJIZ5ZrfiiQ9f1RG15NVr/6uC5
      D4BX4TALYBjGK9OWv2RMLSDm008/5dGjR9i2je/70zLjuULFAeGj/4OSMdHOh8S1z5NzRf6A
      Kw6Jdj8ievRLlBrfLTvg8og2/nNg1+5HRLu/T3QGAIiPvyTa+g2ys0+08StkZy8RD0Bcf0C0
      8Z/Izh7R5n8hO/vJuY7uEO19hHRbRFv/hXSawBRXZNM0EUJQq9VGl0pra2vcu3ePixcvsrGx
      QbVapdFokM/nCcOQQqFAq9WiUCiQzWaJ45h6vU46neb73//+tJry7BDa4NAb+Sj7BBl5aItv
      kCg7jaYjAKGb6EvfI979MPkZQBiDk6LQ0OeuEe3+LhkPINu7KLeJsPLIXg2RLkJpNRGXVl4n
      am2DkUYFXZTfBZ49JvhrdnX2ENk55OFtVOiAGniUphoS6TgOmqaRz+fxPI+9vT10XafT6XD1
      6lVc12VpaQlN08hkMiwsLLC6uopSahTT2Ww2R0HiLzqEZoBhgZlBX3ln8HNCP9CIC4iP76LN
      v56cSz/lUpJo90OMy3+XbDANB9Hy94kbjzAu/wTldRLZBBDvf4K++CbCymGs/RDZO0zMZaz/
      EFSECmz05e8jj+4M/j0x44QwTZOZmRkKhQK2bVOpVFhYWOD4+JhCocD29jY3b97kiy++4PXX
      X8eyLPL5PI1Gg/X1daIoIp/Pk0qlRp6jFx3K7wEC1dxAeh30tb9KfuPqdQGBbG2hFVfQcnPJ
      7XI7Iy6RLiNPvkJbfHN824RAn7+J7NUwX/s5ce1z9OXkK7NIl5CtTbTiCrK1hbGS/C5I2icI
      3UK/+tPBwFp5d/Adz9MN+qxfJaUcuUTjOH4hPUfnYriXH5qmPV83qFIqkYAsDMPvwJrJEATB
      eXKsVwBT2zscHx/TbDZHP/d6PWBwLhj+PYoifN8fxR7Ytk2j0Uj8nUqpieIYzgLC7w7+EnkQ
      T6CMVWrEJfwuhPbkximJcBsIr/nHa91xEbkI52TERXRGitnQBnkGMdgyGtkHUzwD7OzscO3a
      NQ4PDxFCsLGxwezsLPl8nna7TRzHLC0t0el0qNVq/OhHP+LTTz9lbW2Nw8NDFhYWRh6iTqfD
      /Pw8tVqNGzduUKvVaLfbXL16lUePHrG4uMjJyQnFYpHt7W2uX79OOp0mDEOOj49Jp9MEQXCm
      Mc/fijhEbz8imn8bzT5EmVlUNmGUkzzlqr6BcI7RlCSuXEsmBnoMSrfQu9vEqWTbOxGHaEEH
      FXQRShKbk4VDAiBjjPpt4pmbqNRkYZ9abxdlFtB6A5fq1FYA27bp9Xrs7u7iOA7lcnkkitN1
      nUuXLrG3t4emaayurqJpGnNzc2QyGebn5zk5OaHX69Htdrl+/Tqbm5uEYUiv1xspSG/fvs31
      69fZ29vDcRxSqRSrq6s0m0263S71ep1cLsfOzg6tViuRvHks6CYyVQYhUJlZknptBlzWgEvG
      AzehZjCZjI2BmzbykLml5ANJBiihg2ag9DRaP/k9wBBabwcUiCC5R2kIlZ5Bc48R0WD7OrUV
      oFAoEMcx1WoVgFKphKZpo1Qj29vbLC0tYZom+/v7SCkpFosUi0Xu37/P7OwspVKJVCrFgwcP
      WFxcpNvtks1mcV2XIAi4evXq6Hc7nc7IxVooFDg+PmZ5eZl8Pj/ay3/nWprIR0Q2wqkjwj7I
      aDAQktwDRB4itBGhDbEPE7hUH4eQETI3XrKur33e74DQUakymn2ETJcntkkWL6LSFZQ2+c27
      0gwQBnFhkEd1amK47xLPw0Nznhjr5UculxPP3Q36nW8znhPa7Tbl8uSz2zmmB8Mwnr8a9PHk
      Vt+U8cZx/EIlv3oSNE1LZOtZSpeljBFCGwXVTBoyeFbSbIVCExpSxmja2bzPswiJHNmlJJqY
      YkQYwK9//WsuX76MZVlkMhlc1+Xk5ITZ2VmEEPR6Pa5cufJCaNzPEp8dfELOyhHGEfudHX52
      /eejlzEOel6Xe8d3uVC5xGbzEYZm8M7q+4melxs6/HbjV/zs+s/5r81fsVZa5+Ls5bF5lFJ8
      dvAJfuhRyc7S9TrMFxZYr1wcm+tx2H6f3+98wI+v/izRswLYbD6i1tmnml+g5TZZKQ3OAFPz
      Ag1THjabTR4+fMj+/j6u67K/v08URYnViC8yTvrHKKXwI5/1ykWWS2sTvNANQLHf2WUmO4ul
      W8iEatC0kWG+sIhUElMzabnNxM8/iALs0KZhnxDKkIMJ1KBDZK0cc7nqRBzz+QWE0PAil++v
      vkfDPgGmOACWlpZGqcFd16XT6ZDNZikUCuRyOTqdyV1eLxoMzcAyUvT8Ho/qD7gyey0x11Jx
      GakUsYw57Nbo+b3Eg8kO+mw3t6h198mn8vT9XiIeIQSr5TVMzeRa9TVM3WSxOHn6x57fZbu1
      yUn/ODHHf2/+hpyVI21k+Hj39xRO7xOmlhjr8a999OgRYRhy48aN0b9JKdE07YXdAiX1NH0z
      DDQplFJEMsLQDKSSCCESD4DHbRrsj0UyiTYQyxhQaEIf2TfpOzyLZ/Y4R6xidKGjadrz9wK9
      KinFO53O2CV7zvFiwbKs5y+GexGFbUkQRdEr05a/ZEzNC7S5uUkQBFy8eBEpJe12m6WlyVJf
      v6johR2aQZ2yOUM7bFI0yzhRH1OzmE+P1+Ze2KURHDFnLXDsH1JNLWDHfYpGmawxXuLYXtih
      7h8zm6rSCuqUzBnc2KZszZLRn1y3IVYx+84Wa9lLCKFx5O3jxz4Fs0Q/6lJNLXLo7TOfWhrb
      rrp/jKmZhDLAlx55o0QnbJLRc1RT46XIOfZqA/cnGr70qKYWOfIPRjxTGQBxHON5HvPz86Pq
      hnEcjwq0DetEnZyc8O67744Kd7ysSOsZ3NhGFwZ21CNWEbGKiaI21dTiWPvarJGjF6VoBnUi
      FWJoJqY0CaRHlvE6WtbIYYYmsYopmGWc2B51vKcNAIFAIk/vIKBizbHZv49CUTIrbNkPuZi7
      wrF3yLoxnks1q+dohw3c2CGr5ykaRfzYJa2lx+IB2He3WUyv0omaGMJk036AqZkjsetUvEBC
      iJHUeW5ujpWVFWZmZpidnaVWq5HL5UZanpe98w+xmF7lyNtnLXsZIbSxZ/4hWkEdU7NYzKyw
      nr1Mzd3F0pKFhDb9Omk9S0pL0Q+7LKVXMcWz6W00oWGKwbuJVcyes8XF3HUUkkhFGMIglGGi
      Q+uwPSuZC0gk/ahHP+qSN8aXnhTNMm5ss5q5RKRCUlqKhfQKx/6gvsVUBsBQ2en7PhcuXCCK
      IhYWFpifn+d73/seQgiWl5fHKrD8IsONHTphi1ul79MOG8ynFnGiPiuZC2N3EEMYeLGLGzsc
      ezUW06v0oy5u7Ix9D2BoBm5s48YuQgg6YQsntnGi/lPvAQLpEyvJsXdIwz8ipaWp+4dUU0uE
      0udS7hqdsMVievwg9rp/RKxinMhGIMjoOZYyq4kGU8Wao2CUcGOHilVlPXeZVlBnKT0I1H8l
      xXDPA71e75UZoH+pyOVyz9cLNKw48yrA9/1Xpi1/yZjaTfDJyQn9/p/Wj/q2e4IXIZTxrODZ
      J4PY6P4RXv8oMY9SasTl9g/x7OS3pI8j9DvEE4Rqhn4Xu72FlBF2ZxsZT+4qlnFAv71JfAbh
      lUpJ7M42UegAUxwAGxsb3Lt3j729Pba2trhz5w4HBwf853/+J41Gg08//ZRGo8GdO3fY3Nzk
      t7/97UuvD4pDl6Ot/x9QRJFLff93yTOwRS5HW78EJYkn5BpCKUmz9jGenXxghkGffmeLk93/
      IvQ7tI7+ZyKbAKLQQcYBzdrHE3N1619id3ZGMc9TGwCtVotMJsPBwQGWZTE7O0uj0WBpaYl2
      u43neezu7tLv90mlUqytrU3L1DODbmbIFtcBgdevUareSny1b5hZssU1EBpu74By9Y2JJQdC
      aOQrVyYq3CdjH00zMa0iufJlZDR52ktNM+i3NphZendirsBrYVh52scD9/vUBsDrr7/OrVu3
      WF5eZmZmhsPDQwqFArquk81mMQyD+fl50uk0Qgharda0TD0zhEEP363Tbz3Ed5tEQT9xPs/Q
      7+I7J/RbDwm8NmHQS8w1xHDb4nR3EnM5nR2EppPOVTnZ+Q258sWJbAJwegfoRorAbT79l5+C
      wsxrhF6L1GkyghemSuSzmvGiiOPOE2M9HYMgFjiLWOWzxLCvPffEWOdVIs/xomFqVSKf9P+e
      NddnHMd/Ipl+XtVSklaJ5BvVGCfN4zOgPMtqMxImCa9Up6WahIZScnCeOIt3MXxuZ8ChlBzJ
      vacmhvvggw/IZrPcuHED27YplUpsbW2Rz+eZnZ0dXZoZhjFKniuEGGWUDoKAbrfL/Pw8vV4P
      y7JoNpsUCgXK5TKtVovZ2VlardYo9cmw6v20oGSA6nyIVv5rpH0XYc4hxhR3/QmnilC9LwY5
      ffLfm6iTKBWDu4GKbUT+rURcyt9HBUcIawEVtSC9jjAmk42r2EH1Pkcr/VXi9in/ABV1EOYs
      yj8AayBFmdoAcF0XXdf57LPPRtUhs9ksnU4HKSXN5iAsL5fLcXBwQLFYZHV1lXv37o1k1dVq
      FcdxePToEblcDsMwRp/NZrPcvXt39H2dToc333xzqgNACBOsORAg0isQO2fBCnEPxOSaKSF0
      lDBATrC1s6oQHKKiDkgfog5MOACEngGzzCDxV8IU8NYiRD2IOojcLZTzAJiiF6harY6yPw/z
      6/R6PQzDYG9vb5TcahgfPAyWv3z5MqZpUiqV0HWdo6Mjstksuq4TBAFSDqKj+v0+mqYxOzuL
      YRhUKhX29iaPT50ESvoo/xAVHA9mJP9wYs8NKgI9A8JATZgZTslwUDjiNINCIo7uJwg9jzCK
      oKUgnjxnqYptlF8brChJOYIjVFADdJR9F3Eq0X4hqkQO06FEUYRpmoRhOJrNhRBIKdF1fbQv
      Hd4MD9OmR1GEYRhEUTT6vSAIRjW8hpFohmGcWS2BJImxBu2NGcw7w8c+YdinUigVDSrGT+jT
      UEqBCkHoCJEsnYlSwxt7DVQAwkwcXvk1u06fW1KuwUQjAf20jSb5fP75hkRKKV+ZKKrzzHAv
      P9Lp9PMXw70s5YyeBsMwXpm2/CVjameAzz//nI2NjdHP3W73T4Rwruu+MisGgBuG/GFnm91W
      i7uHNR6cJBewhXHMx7s7xFLy+cE+j+onibmCOOKTvV2UUtw7OqTrJS/8IZXik70dAO4fH9M9
      g7uSrufyh51tWk5yp8FJv8dGo07bdfjDzjZtd8A1NS+Q53k4jkMQBKN44FarxcHBAYuLizQa
      DaIoIpfL8cYbk+tcXgSYmsZKucx2s0nWMnHCYJT+JQm8KMQNQ7qex1Gvy+XZuUTPSSDwTica
      TQicIKCYziSyabNR57Dbpe/7PKwfU0ynKabHD2V8HHXbJohjUhOUykoZJrvtNrGUxEqSMgZe
      s6mtAP1+nziOOTo6IpPJYNs2tVqNbDbL0dERV69eZXV1lbW1tVei88NgBdhqNnl7ZZVIKqRM
      frlj6joZwyRnWVyYmUFOcJQzdZ20Mcjfk5tgW6eU4qDToet53D2sIaXisNtNzDfEYqHIzYVF
      Pj9IXic4Z1loAlZKZa5V50dcU1sB3nnnHaSU+L5Pt9vFcRxu3rzJ7u4ut27dYn9/n6WlJZrN
      JqVS6ZUYBLGSWLpO3bYppdOYuo6WsF1930cqxV6nTcd1eXslWcggQM/zkEqx22rRdgcXjfOF
      4ti2CSH4mytXadg2s7kcThCcySVwGMdsNOq8sZQ8y9xuu0UUS7qex16nzZunXC9MlUjHcV6q
      CKvz9OgvP16oKpFCiJeq6qLv+y+Vvef4dkxlCxRF0ahkkWVZT5z5X6aaAc8KpRT9YBAokrdS
      E23vpFLYgQ8I8pY1cb5ROwzQhCBrJitH5EcRXhSSt1LYYUDaMLEmfH+xlPQCn7xlYSSsNxBL
      SSQlhqZhhwGZ00PwVAaAUoqHDx9y5coV7t69y/LyMqlUCqUUvV6PSqUyEr3t7Oxw8+ZNjo6O
      WFhY4OTkhHw+z+rq6jRMPzPEp/v3W/PJ63F9nas1MZdi0IGP+j1uVhcSDSYvCqk7Nh3PI5Qx
      q8XJt4lBHONHER3P5UJ5JhFHx3Npey45K4UXhaQLA33SVLxApmlSLBapVCrMzMzgeR4HBwdk
      s1kODw9HWqC9vT1mZ2eJomhUUXKo83mZIYRAQzCfy098uNeEAAWL+cLkIZFAz/dZzBcTc0ml
      0IVgPp/H0nWO7WSp1h+HrgnanstyIbmorpzJYug6xVQageDk1K6peYHy+cHLLxaLKKXI5/MU
      CgXy+TzVapVWq0WxWBytDKZpMj8/jxDilcgQ4YQB8/mzySvkRiELZ8AVK4kbBaQNI3FJopbr
      YGg6ThAQSUkhNdkdAEDH8zA0DTcKMRNup5qOTd/3yZkWkZLkzcE9xwuXGOtp5rwo7tBzLdDT
      oU4DUF6MN/ZHDO3KP+/EWEKIV0Y/Y5rmK9OWv2RMtUrk88CTlvKhJDuJFGGSKpFCiOcWuvms
      OEu7zqri5Nc4pTyVfE9QIUYphKaNuGCKZ4BHjx6RTqcplUoEQUChUBh5gMIwHMUH9Ho9yuUy
      /X6fTCYz+rnX65FOp0cxwWEYjjqz53mjCi5RFFEoFAiCgHQ6Pfp8q9WiUChweHjI2toa7XZ7
      pFaNoghN00YBO7quE8fxxLlApe9j//o35P/3z/D+538wFhYwlyeroaWUwvngd5iLC1iXx6/s
      CCBdF+e/PyD3kx/j3/0Sadtk/uoHiTqbCkN6/99/kPvRDwk2NhCWRfrNNxPZNUTUbBJubmFd
      uYye8PIx2Nwkqh1irq0S1+tYV64AUxbDaZrGo0ePgEGWhWazyQ9/+EMODg6oVqtsb2+TTqfZ
      3t4mk8kgpSSbzbK3t4dSCsP4Y/2pk5MTpJSUy2V0Xcf3fQqFAo1Gg/39fXRdJwxDLMvC8zy2
      traYnZ3FNE1arRZHR0ejg3c6nWZ3d5dsNsvKygr7+/usrKxMPACEZWHMzyMA88IFpD15tBRS
      DqIiu73EM69Ip9Hn5hC6jj47M5ghE0AphXf7Nnohj1YsIjJZzLXJ3dXh3j7S84jb7cQDwFxc
      JDo8Ijo6QoURcXtQhHFqYrhGo8Hu7i6Li4u0Wi1c16VYLI4iu3Z2dhBCsLi4OAqkUUrh+4ML
      pGq1iq7ro5l6GDaZzWYplUoUi0Vc1x1tc4bRZgsLC+zu7mJZ1kh+rZRifn6emZkZdF3n5OQE
      IQQLCwtsb2+zuLjI9vY2SikajQb1ej1Rm5XnER0cEB4dEe7vEx0cJO5sfyRVGDOzyAlEZ8px
      B3Yd1HA//gS9lPxwrxWKxJ0ust9Hug5aPp+YawijUkHL5Yi7yV2qzge/Qy+X0CsVtHxu9Lym
      lhhrGL9rmia+75NKpUbblGH+IMuyRp17GCbp+z7pU3ntsHMPwyaHfEM8HloZx/HXQiTDMMQ0
      zdGMOeQYbqeG++HH/zRNc5QKpdvtjp0YS0mJCsPBPnS4Jz2D21vl+whNQ1jJbm+VlKggROiD
      /bEQAh57NmPzxTFoGkiJOIMzn1IK5TiITAaRUDqugmDwHk0T5bqITAZN1/8YEul53rm2ZQz0
      +33yZzC7nWN6mJmZ+aMbNJ1Oj2bW7wqvUoGM4ap1jpcbf3IIfvDgAR988AE/+MEPRhUch1sN
      27aZmZmh0+mMXr6UMlG93Hq9jhCC2dnZJ/7eMHDGsiwymWRRSi8Sao0+pqFz0nGwDI0ry8ny
      i3pBxL2dBguVHF0nQKF4bXVmYvfjna062bTJpcVksoO9kx7NnstiJcdhy6aYTXExIdfucZee
      E3BttcLOcY+lmRzZdLL8R3snPepdh0uLZTYO2ry2NtAU/ckAsG0bx3GwbZvf/va3OI7Dw4cP
      uXDhAp7nYVnWKBePbdtIKfnnf/7nUYqSZ8XJySCGtdFojA6+w0DzYVhkLpcbBcs0Gg3++q//
      +oXxmydBGEl2jrsUMhbHbYcb608e/E+CrgmWZvMctx0uLZb4fCN5TPAQUSw5btvculhNzFHK
      pXiw3+TyUplKPo2hJ/ezHDT6zJezeEHMo4MW5Xwq8QCYK2U4bPa5v9fk9fVZHuwPcgx9q3W5
      XA7Lsvjyyy/pdDqsra3x+uuvA3/MySOEwPd9FhfHVyBKKTk6OuLo6Ih8Pk+n00fehpgAACAA
      SURBVKFQKNDpdGg0GqNB6Ps+URRRLBZZX19/qTs/wN5Jl1gq6h2X719b4MF+M3Eoox/G7B53
      eX19ljtbdd6+On8G9QHg3WuL3N9tJiq2oZRC1wRzpSy2F3LYslmYGa906+N4/cIcPTfg841j
      pFQct5MHxT86aLE2XySftojkMGv1t6wAb7zxBpcuXSKVSrG6ukomk0EIgWVZVKtVcrkcv/zl
      L/npT3868qaMeyMaRRHvv/8+SilarRblchkhBJVKBdM0yWQyVCqVUcEMy7LY3d39Tm4Ynycu
      LZVZXyjStQNqjT5r1eSqyzCSmIbOYcsmkzLYP+lxdaUy8fPZr/dYXygmjlU+6TgopSjlUlxZ
      riQO+QRo9wciuB+9voLrh+gTrCamoXPSdlhfKLJx0Obm6eo7tht0kqvyV+kQfC6Ge/mRqErk
      JDPMeZXIc7xomNpNsOu69HqTB0u8LAgieRq+GBPFiiCWuOH4cQ2xVPT9GKkUThATxhIniPGj
      5DfKUg04Y6lwwwHnuFBK4UeSIJLYQTz6OclZYtimKB7YM2xrJMfncsIY7/TZB/Ef38HQrqmF
      RH7xxRdcunSJdrtNFEXk83kajQbVapVut4sQgnQ6TaPRYHl5+aUuRxRJxZfHDldmM/iR5KQf
      EivFTNYkM6ZTw4skXS+ibg8OctW8iRdJmk7EldlMoq17y42w/RipQNdAKlgvjxer3HIj6nbI
      UjHFST9gLmdS6wVcnxvfdb3T8qlkDepOiCYEuhBEUrGQN0Ebr4F+KKnbEdW8Sc+LSJv6aBDA
      lFaAOI7J5XLMzMzQ7XbxfZ/PP/+cw8NDHj58SKlUwnGckfZme3t7GmaeGQ46AaauEUlFx4up
      5kxiqWg70dheIF0IglhhaIKUodG0H08nmcyjJBh0eksXxBL6/ngrk1SKo15IJEEXEMYKS9co
      WMlkEEGsaDoRmhAUUjqGLtAFNN0/rSH9NAghUCiK6QFPrBSzOZMwnmKZVMMwiOOYzc1NlFIE
      QcDKygozMzPMz89TLpeJomik+0nian2RsFy0mM8PHroQEClF1hy8kHEn7JYbYWiCYlrHCyWm
      LnBP/0wKXRPomsDUBWlTYy43ng5IAFdm08xkDexAkjI0vEhiB5LemIMJoJjWMXWBqQnabjQY
      mApSxnjdVSmwgxhT1+i4Ef1AkjY0dts+pfRg8zM1Mdyf+9rHawB827+/KJi0SuRZBZ4Mut/Z
      BbFMatfZteuPGNmVILzy2+wZtlWISSsqjIlXqT5AGIYjafY5Xl4890PwNzM6vGihgc+KocT6
      mTCqnHhaHVJoX6umODZOKzmOTryTVpx83JZJuNTjbZys6s3IhhHnN9o8Edcf7ZtaRNiHH35I
      LpdjfX0dwzAIw5BMJoPjOBQKBbrd7qi6o2VZo4iuKIpGoZDD84Ou69+5knUSqF4NGg/AykLo
      QLqMCmxEpoKo3hyPq7M74MrODjhUDEYavC7i8k+TVXZsb0FnFwqL4LYh6CMu/d1YXMppovZ+
      h7jyv1Ff/r+IS3+Hqt9DGGnEyvtjGKOQm/8HoRlQXAX7GGauQv1LqL6OyI6nn1K1T8BrQ+kC
      uE2Yew12fou49g/AFAdAsVikVCpRq9UIw5AwDFlbW+P27dusr6/T6/XQNG0ktXBdl4WFhVFS
      rFQqhZSSWq1GOp3mRz/60bSa8nRkKqjePmL+dVTzAKEU9GoQB6i518are1VYQjXuI0rriO4e
      5Bch9iGaoAB56AAK2juDDtLZHe/zSg06mpmB/T+AlYfMDMLMQ+XS+Pb4XZTfQ1v/f1BOHVqP
      UKGDcJsw5gDAKqBam2gXf4LymohUEfUYx9QuwprNJoeHh+RyOQqFAv1+fxT7O9xbPx6NValU
      qFaro8D3fr9PLpcjjmNmZpKly3tucJuI2WuoozuIuRuD5TxXHVRlHDckcu/3CN0CTQenPlhN
      tn4N+QnqDZcvgm5BZiYRl1IxIl2G7j6Y2cFM63cg6CHSY0qhhRisirk5VL+G6u6ClUdkKuA0
      xuNSCuJgUBy7d4Dq7KKc+uBPd8A1tcRYrutiGMYo48LQ5RkEAUEQ0O/3qVar7O3tsb6+Por9
      dRxnNPsbhkEQBFPJNzSOFkhFPoQ2pErg98DKgYxAxQhrvKgyFfmDl2pkAAWaAYE96DhmNtkW
      SMaDDpsqDVYDoSXiUnGI0E1UHA7sUvFgKzOuPV5nsK1DQRwOVha/D6n8eHxKofzuwBahDZ65
      bp0+vxT5YuW8SmRSnIvhXn6cV4mcAOdVIl8NTO0McPv27a9JHA4PD4HBBdPw70EQ0Ov1RsH6
      x8fH1Gq1xN8Zx/H0A/+dBngd6O5B7zA5TxwMvEFuc3Bo7U/AJWNobw32zJ0d6B8l51JqwOV3
      oflwMru8LrQ2IOgP2upPIJ7sH0Lr0SnX/RHX1LxA7XabhYUFvvzySyzLYn9/n4ODA2ZmZkap
      0KvVKp7nsb+/z49//GPu3r3L+vo6H330EdVqdfQ7wyRYx8fHfO9732Nzc5N2u821a9fY2dmh
      WCzS6XSoVqtsbGxw+fJlcrnciDuTyRCGIe+8886ZVZL/Vsh48CKGh1jpgJpPdheAgOwc9GuD
      g6fvQi4hl5KDjhF5gw7sd065Evjy7ePBACpfHPBNUiW+9RAys4MJAwXGBCuulYfeAeQWIF0B
      7wkhkc8DlmWRTqfpdrtIKUfRZr1eD13XuXHjBo1GA8uyuHjxIoZhMD8/P7o76Pf7FItF4jjm
      1q1bHB0djQ7RQgjW1tZ49OgRb7zxBvZpBjbTNLl48SKO44z+u3z58ihA/zs/DtlHoE4PnJN+
      l4wGnb9yecA1kkUkgG4ODp3iVFaR1DalBm2MvMHB3GlAZgIPnW6dHmDFYEC2NpPbJfTBROG1
      B8+/uAZMcQXI5XLU63UuX748yv8/zP2vlGJ/f5/r16+jaRr7+/vEcczi4iLFYpEHDx6wvLw8
      kkzfv3+f69evc3h4OCq5ahgG3//+93n48CGrq6scHx9TqVTY3d2lUqnQbDZZWVkhnU5z48aN
      UUWa7xSF5cEMFNqDJVjTk8+QMgTNHHQ03Ry83KS3r6EzWJ0Ce9BRMpVkXELAwvcGM7aRHrR3
      khWguDoYRNm5wcpSnCDNotscDCY9BaE72KIxRTHcdwnP877zm+FJxXDnmD6mIoZ7XjHBjpM8
      g8CzwPf97/w7zvHdY2pnANu28Tzva/cCQw/NMBHXq4IwDmi7LWIZ0/W6BJGPHfRxwvEHkFIK
      N3RRStJ2W0RxSN/v407EpUaftwMbPxp/kur7PeygTywj2m4LqSRu6CR6j27oYAd93NCl63WQ
      StLx2kg1fqimE9iDZx3YdL0ukYy+xjW1M8Dnn3/O9evXCcMQKeUoRjiTyZDJZGg2m7z11lsv
      nUr022AHNlutDQzNpOu1uTn/BnePvwAE/+vC34zVxrbX4u7RbS5ULnLcP0ITGnZgIwT8aH08
      rpbb5KuTu7y9/B7/vf0b/ubiT7h3cgcUvLPy/phcLTaaDyhnKmTNLLpm8PHeh/zt5Z8yror/
      D3sfcnnmGoZusNF4SDFdQhMCQzO5NvfaWFzH9hE7rS1uzN/i7tEXzOcX0YTGiX4MTDko3nVd
      Op0OrVZrlK0ZIJPJsLAwgbblBUPGzNL3e+RTecqZCjvtLRTqNJRlvBmykpmhlC6jCY0wDtCE
      hkKedrLxuGaysxRSJTJmhoX8EkEcMJOZJWWkx7bL1A1iGdPzujiBgxe5zCfUJ62W1tloPiBt
      pPEilzAOuDxzFS8a/w4njAPWyxepZCrMZGfRNI3LM1dHK97UBsCVK1dYWloilxtkDjs5ORlV
      iRx6iF4VNJw6OSuPF3rEMiZjZskYWTLm+GlVGk6dplun7/fImFksPZWYq26f0HTr1Lr7A86g
      R8ttIgRjzdpKKZpOg4yZYam4glQxURzScOrU7eOx7XJCm6yZo26fkLfyVDIzfHbwCfP58UNj
      D7r7BHFAw2lwoXKJ2ewc/1P7mMXCoDLP1KtEKqXY3NzEsixWVla+FhL5Im9/xhLDPRb0c2ah
      h6jTGJuzrTeWlOssQ1j/fEjkeAPzifwC8rn88xXDDfOKvgoY1iA7x8sL0zSff5nUYRbpb840
      Usrv/iLqDKFp2jNnxP7mbC3E6W5dPdtM+c1n9ficNUz7cWZcE64AZ7HK/dkV4Iztgikmxvrs
      s8+QUrK+vj4Sva2srJDNZun1euTzeYIgIJVKvVQDY4hH3a9I62lWchc4dmp0wzZFq4wb2Zha
      iqJZoubucb1064k8Sin2nR3ssMf10i3aQZOW32A+s8Rm9yvenH2PbtDh2K1xrfTk8EqlFLv9
      TbJmjrn0Ak2vTidokjOLdIMWebOIE9nkzQLzmaUncgVxwMPul6zk1imaZR517w0Cl6xZOmGb
      ijVL3TuiYJVYyDy5EqYT2Rw6+wgEl4rX2Le3cSKbUqpCy29STS/QDhosZlbImU8uVOhENjv9
      DVay6xSsErv2Jhk9CwjcyGYmPceRW2MpuwJMaQDEcUwqlWJ5eZkvv/ySdDqN53l0u11SqRSd
      TodsNovv+/zgBz94KQdALCM8Bj72UIV0gvag00UnaKZOzd1DQ3vqWUcIQVpPc+wOVLBH7gEC
      DaliClYZqWKO3AM0xNPPTQKqmUU6QeuUax9NGBixO/g3IegGbQCq6cUnckUqRKqYUA5CMd3Y
      wY1cLheu0wu7xCqmE7TIGk9Pj541cuSMHJnT303pGU68Qy4Vr9HyG7T8OqEMcWPnqQMglhGx
      ignl4H5pMbvKiVtjKbvGbr/PiXtIKAPcaIpeIF3X6XQ6bG1tsba2hmEYFAoFKpUKURSRSqXI
      5XJcv3597MIbLwpKqQpu5NKPugSxx3J2lYZ3zEyqih32sbQUnaCN5MmXO0opYiUxNZNu2CFn
      FMibBZp+nU7Qoht0sDSLbtB+uutScfqZNr2gQ84sUDCL1Jw9lnPrKCXJmwUiGTyVS0Mwl16g
      7Texoz5L2VVyZp5e2KMTtOiHXRazK/jx0y/VpJL0wi4Fs0Q/7CKJ0YTO/c5dimaJvFkkbxbo
      h0+XQ+uawWyqSito0A97tP0GnaBNL+zQCdqk9Ax5s0g/nLIWyHXdUU5Q27ZJpVLDZEX0+32y
      2eyoDOqLiKdpgYY+627YZjZVxY1d0noGN3bI6FkMzSCSEcZTQvyUUrixg0DQCzvMpRdwoj5p
      PUsgfQxhYunWM3P5sYdCnXLN40Q2WSOHEzlk9AyhGsycaf3JOT2lkjiRPbiPkD6mlsIQJqCI
      VISlpfBil4yRRRdPTpE4GOQxkQwHbdIMBBqa0IhVTEpP40bOM3FJFeOczu5KSQzNRKHQhUGs
      oq9xGZpx7gVKinMv0MuP5+4FGubxeRUQhuEr05a/ZExtg33v3j1KpRJLS1/3NjiO8yeFJ+I4
      Hp0NXkbEkYfT2SBbukLn+FMyhVUCt4HQTAqzNxNdGiklaR99Qqawhm8foukpCrM3EtkXBj16
      9TvkypfxnWN0I0euPF4+H7d/gBAaSka4vT3yM6/Rb35FrnyFVHa8ontubw9NM9H0FIHXxMrM
      0WvcJT/zGlZ6fAm6Uop+8ysCt06ufAWnuz16VlMbAEEQcHBwQKvVwjAMHMchn8+zvb3NrVu3
      2N7eZmFhgXa7TaFQ4ODg4KWtEqlkiO+ckC1dIVe+TL/1kGzxAp2TzyjMjpcZbohe4y5x6CKE
      htvbpbL0g8T26UYaTbfoN+9jWAU8+4Bs6cJYCbsE4PUPyM+8htvbw24/RMkYw3qy1+bPsbn9
      AzLFNXznGClDoqCP291ONACEEORnXqO5X8d3jolDG6c7SP41tRNmu91mdXUVKSWVSoXl5eVR
      mnTP80b5goYXTi9zlUjDKqDpKZQM6Z7cprL0AzTdQgj9NOfl+FBSki2u0a3fobL8Q1q1P6AS
      cqEUZqpMHHmJZehWZg4Au/2IVKZKcfYW2dJFWrWPxufKDris9AxCaMjIJVu6SBwlT0YcBR10
      M4tSMdnSReSpk2JqA+CNN95gYWGBlZUVKpXKKEi+UChQLBbJZrMUi0Usy6JSqeD7/ksbI+DZ
      R8g4wO3tohtp3N4uTnebdG4xcchgce51PLtGvnIVt7tDrnwp8QQRBT08u0Zx7hZCaKRzi+Ol
      awT6zfvEpwrLwGsS+C3c7jbFudfHtqffvE8cOTidLeLYx8pWCdwTcuUrY3MNIeOAwuzrZIsX
      8Z3jEdfUxXAvK84TY738SFQlchIIIchkxq8Z9SLC9/1Xpi1/yXjuA2AI13XRdR3Lskb/FkXR
      KEPEs8DzPCzLGqVKh4HHSNf153JeGF+YFYP0AR2GN8BaOrEXSEU2wsgMUqQIDaFZT//gn+OK
      HYSWHtgnDISewOOmFEoGg9QvmgEqGnAlsetrXBZKugg9n/y9Dvk0C4Z/MkUv0O9//3tSqRTX
      r18fVYK8ffs2i4uLVKtVwjCk3W6TzWY5OTlhfX0d0zQ5ODgglUqNiujNz8+zt7dHoVCgVqux
      srJCqVRiZ2eHixcvjrxJrVaLarU63cur2Cf29lBhGy21QGQ/xJr7aUIuD+nto2J30NEQGOV3
      kw2m2EG6+yjpohklYu8Aa+Z/JUqNIqM2cfcueuEG0j9BCB2j+GTB35/lClvEvbsIs4LQM6CZ
      GLlk5wAZdQgb/4U19xPC9seYs38LTHEA9Pt9dF3n9u3baJpGs9nkwoULtNttWq0Wx8fHZLNZ
      lFK02+1R/YBut0ur1ULXdcrl8ii0MgxD5ufncRyHVqvFpUuXuH379ijDtOu6lMvlaTUXAGFk
      QQYYxbdQsY2RvZx8RtMzqKgHmokwZyD2GIisx+cTWhoVddALN1F+AxDJmIRAs+aQZgU9vYTy
      6+j5a2Pb8zUuaxY9tUjsbIEw4Onauj+BUoqoexuhZ0GYaNbc6P9NbQDcuHFjpAcaboW2t7dZ
      XV1lb2+PbDaL67qYpolhGCwuLmKaJqurqxiGgVKKfD5Pv98nnU6PsswVi0VSqRQPHz5kYWGB
      XC6HlBLTNGm1WszNzT3duO8Sp9uL2N1BzyUoHnEKFbYHWxbNRIUdEGbiaCnpH51y9lCxnXgr
      BaCCJnp2DSUj0DOTcYUN9MzaIAGYbqFn1hNzGcW3iJ0tVGwjgzpaMIX6AN+Gx79+WPzi2wIX
      4E+DOL4ZPvm4HFhKORLXfdvPk2LqibGUGgTWC+1PnsdktC9ezTZ1WsNsXNfs03BeJXICDOsY
      n+PlxtSrRA7xIs48T0Icx2MpW7+2qg0rFZKsvd9c8b6r2rxJ7fpzPz9PW77J9UKFRAJ89NFH
      ZLNZXnvttZGyMpvNjv50XRfbtjFNk1Kp9NIMjG9Dy3G4d3LEm4vLPGickDFMYqWwA5/3V8eT
      eDQcmwcnJ7y9vMJvtzf56ZVrfLy/y3q5wnw+ie7mNES1dsBcNkfbc/GjiHdWVsey697xEZau
      ownBVqvFQqFA1/NYL1dYGvPC8M7RIR3PY6lQ5LDXZbVU5sTukzFNXl8YLzXKnaNDCqkUAuj6
      PsvFElutJrOngsupDQDXHYQLfvHFF/R6PZaWlojjmGazSTabxbIsoigil8u99Lr7ciZDxrTI
      p1L0PJ9UziBtGNS6nbG5ZjJZ0qZJyjCYzQ5cIuvlCmGcUAcENF0HLwzxohBT16nb/bE5Ls/O
      8qBe5/X5BY77/dNMbhqbzcbYA2C1VKbrH7JSKlHrdZnP5+n5Pmvl8c9cV+fm2Gw2uT5XpX06
      GOp2n+ppPqqpaYHy+TyapuG67khSEAQBlmVhmibpdJpKpfLMl2IvMuwgoGHbHPa6XKhUaLkO
      pq6jCQ05pg+iH/g0bJu25w7+dF3qtk3DscfmGsILIzQhOLFtMqbJadnssXDS71O3+zQch0o2
      y3q5gqnrzOXG91v+99Yma6UKH+5sM5/PgwAnDMhb43uUjvt9GrZN03Wo2zYt1+XaXJWT00E+
      NS1QGIajCDHf99nf3+fq1asjWfQwLsDzPPL5CW4AvyOMowXyohA7CEgbBnYQUEynsYMAU9Mp
      jpnG3QtD7DAgbZh4UUjaMAlPzyKldLJbZQCpFJGU9DwPy9AppMazq+O5xFKRT1kYmk4sJW3X
      ZTaXQxvTppbjgABD0whjSSGVQgGW/uRwyG9D+3SnYeo6QRyRNkz6gc9MJkupWHz+VSL/XBTV
      y5YX6FwM9/Ijk8k8/yqR33XhiucF13Vfmbb8JWMqh2DXdXnw4AHZbJZyufzE21nXdV8Z1WUY
      x+y2mywVS3RcF13TqE7gudlpNymns3R9D1PTWCgUE22BpFLUuh1WSmV2201MXWexMJ7joeO5
      CBhso3yPxUKJw16H2WyO/JjbqVq3Qywls7k8duBTyWQ57ndZLCT3BtbtPl4YUslmOep1WSoO
      2jeVAZDJZNA0jUuXLvHrX/+aubk5hBBks1nq9TozMzOj88Lh4SFvvvkmOzs7zM/Pc3x8TLFY
      5ObNZKGE08R+p00lm2OjUSdnWaOXPO4eGQadJIhiDF2jkEqx126xUEi2JYulpOM6LBaKtByH
      K3PjxfACSKno+i5uGFLN5anbPfwoQtfG37eXM1ke1Y8pZTJ0PZdiKk3HdccelEMopTju90gb
      JlEcY2ja4JzBFL1AQywvL4/CH6vVKt1uF9d16ff7dDodVlYGKeyiKMJxHGZmZl7ayLDVUpm2
      4xAryUBqlvxgHytFJZtlr90eSTySPhVT10mfFim8NDvHo8bJ2M+4kB742tfLM7Rdl7brUs5k
      2Ws3x7Znt93k4swsOWuQK8oyDFITeAOFECwUirRdB075glPHwdTuARYXB6n3qtXq6GHn83mW
      l5cpl8v0ej1KpRKZTAbDMCiVSszNzWGaJlIm93lPE7FSSKW4NjdP07FJG0ai2R8YXOg068zl
      crQcm2I6nXg4uWFAJCVNx8b2faq5wthbjaPeYMbv+x6aEFyZrbLfaTOfYFXShKDp2LhhSBjH
      tF2HMI7peINBlQSxlIOLQgV932c+P7Br6mK4lxVTF8OdY2K80lUiv2sEQXBeJfIVwNTOAJ1O
      h36/TxRF3wn/MItEu93+s78TxzGtVisR/zgLpwpDop1dVBAQ3L6D7PUI7n1F8OWXqDG3cyoM
      iXZ3kd0uwZ07RHv7xEdHSNsetwkjyE5nwLW/T/hog2h7e+wzQLixQbixgXRdooMaKo4J732F
      fMLz/3NQUhJtbyMdh+jwEBXHiWwCiBsNZKdDVDskfLSB8n2CO/+3vTN7buvK1vtvnwHAwTyQ
      BAkOEilZ1nC7PV1XnKSTrtzq/AN5Tv9beU6lKm/Jm1/S3ZVyp5yO27r2vZYtyxJJkeCMeToA
      zrh3HiCg275qyzhUi6Ranx5QKtZZWOfgrD2s/a1vPUQ9O4+6sD3A6ekplmVNxF/HY9LpNGdn
      Z7z77rs0Gg2y2Sz1ep1ut8vy8jLNZpNCoUCr1WJxcZFarUahUMAwjJmg7rQe2HEcHMehXC4T
      j8dpNps4jkMymaTT6bC1tcXBwQHlcpnRaIRhGOzs7OD7PqVSCV3XZ0Q8y7JwHId4PM7GRrSC
      DOW6hI060rbRV5bxt3eIvfsO3lcP5q8rdhzCRgNjfR19ZQXZ7aJGQ4RUaBFoBwBaLofu+8iB
      jV5ewv/2W/Q571UvFvG+/gYtn0c2myjHQToOegT6gv/dd6jRCJHJIBsN9FyOsF5HX1+fu0xT
      uS7yWRCIVArvqweYt2/jb28DFzgD+L6P67rEYjEcx6FarWKaJo7jMBgMZp+bm5vs7+9TqVQY
      DofcuXOHer3O8vIynudh2zb9fp+zszM8z5s0aSgUSKfTrK+vMxgM8H2fTCbDYDBgY2ODk5MT
      hBC025MMheu6rK+vk8vl8H0f27bpdDqYpolt2xiGwXA4RCmFlHLuTbiWTiPiccybNwiPTyDw
      CY9PMCorc/+gWiaDiMUmZX77VYzr19GKxfMklCa2Dg4xrm3gf/cY886cco1KoeSEQaQVCqBr
      EIbopSL+kyfz+eIHhGc1wrMaWiYDuo6wLEQyWnDrpRIg0FdXCc9qk+etazM6+oXNAIlEgiAI
      sCyLRCLBysoKnU6HeDxOoVCYveSWZc0K5wuFAru7u2xsbBCLxYjH4zOO97R+OJvNYhgG+Xye
      4+NjFhYWGI/HOI7D2toaiUSCUqlEt9ulVCphGMZMc3T6o/d6PWKxGIZhkEgkZp/AbMk0D0kv
      bLdRrodst0GAeecO0h6iLS3N/dzCVgvleqheH31lQg0OG01AoZaWEFHoJEpNgjEMwdAJ6w3E
      nPyrsFZDKxQJT89QjouxujoJqrW1uVwRpoH1D/+BsF4nrNdnM55yHGSrhb443xlFUD1AjceI
      pIWxtopeWcV/so359q3J970RxoqGN1ygq4/vCWM5jsN4PH8j4nnxumRdfd9/bYL5bxmzAJgq
      K3Q6ndlG8/T0lFgsxtbWFjs7O1y/fp1GozHr6j6VNrdtm88//5yNjQ1u3rz5vS/4S/nyMAwR
      QryQATrNEr0qsaufiuleIyrCZwUsun6+bdiEUj4pkDeN+WkHP7TlBxJNExgR/ZJS4YchMUMn
      lApNCDTtfL+bUgrXD4mb0d8B9ewQUhMC15/4B8/ZA1SrVT755BPu3r1LvV7n1q1b7O3t8cUX
      X/DLX/6SP/zhD7z//vsEQcBvf/tbfvGLX0w6hbfb3L17l9/85jdYlkWr1WJtbY2PP/6YX//6
      19y48X1Bo0ePHqFpGsvLy9i2PZM4icfjjMdjSqUSpmnSarXo9Xr0ej0++uijSxUEUaGU4ndf
      POXmapEbq8Vz2ZJK8fiwyXFzwH/8+3PoDDF5eXeO25y2BvzD+9HEdg/qPfZPuxSzFu3+mHdu
      lilkzkdm3DnuUO/YZFMJfrY1/74JoFrrcdoasLqQ5aQ14M61CQHzuWE+bVUai8U4OTnh7OyM
      t99+m4cPH/LRRx8BsL29zXg85uTkBJjMArZtMxgM+OabbxBC0Ol0uHfvb3NycAAAEC9JREFU
      Hpub/1L/pt1u02w2OTo6wvM8jo6O8H2f4XDId999x9HREZ1OB9u2sSyLpQgbxssKpWCllOGo
      0T/3klATAl3TuFY+f920rmuRR/4pMskYpqGztpjFihvU2tHPJ6YwdIE99ogZ0X1bX8qSjJs0
      ukM0IThqTJrk/YsZoFwu86tf/Yp+v49hGOi6TqPRYDAY8N5771GtVnn33XdZWVnh8ePHrK+v
      zyTNp9VbS0tLhGFIOp1mcXGR/f19tra2Zt/hOA4rKytIKTEMg3q9zvr6OkdHR8RisVm55OHh
      IUtLS6RSKfb29r5n4ypjOh2fd8kCEISSvdMOm5VCZBWGKTw/ZOT4xEw9osYcPNxrkE3GGTo+
      uq6de/kDkwGjmD3fLHJY73Pasrl9bYFa254tgS6cC6SUeq6w1fRv0z3Cyxa2Oi/OywW6rDIw
      Uk462b8Mvy6rrVDKZ3sT7dVzgf5a1IdXjSAI3jTJu8KYKjq98oOw1yUApo373uBq40K7RFqW
      xdra2mypM+XyTKkGQgiklJe6Yfa8aI5CTA2cUGFqgqIVbR8QSMVRP2AjZ3BmT2RNyikjiqI5
      Sikao5CkqaEJ6LuS5fR8r0ZjGOCEikxMw/Yk2bhGz5UUEjrpWLTfrjMOsf2JLduTlCydxJwb
      4fowIG4I0qbGYT9gManTcyVFa2LnQgJgOnKur6/z4MGD2fq+1+uRz+dn/KBCocDR0RGlUom7
      d+fvNXXZ4IUKN5T4oWDgSTIxLfLGVReChDG5buQrdAFR5dHdUOGGCl0onEA+dz/2IuQSOmM7
      IBvXGLiSoadYThk0x2HkAJi++KGEQM7oO3OhaOl0nJCmHyIE+FIRSDWzdSHD6pRt2e12Z9Lo
      w+GQTCaDaZrcunUL0zRn1V/pdPoi3HzpcAOFYPLCpUyBVCpyGaNUCjdQjH2FZWoY2vxiVj/0
      y/YkQkw+57V12PcpWjong4B0XCNuCHqufBaY0XAyCMjENSxDUEzodN35KwGdYPKcFDD2JboQ
      FBKTWQAukAtk2zae581e8lgshm3bZDIZ4vE4g8EATdNmNOYfNs++aETlAimlCNVkCSMVJM1o
      Y1AoFSNfEdMhUJORzIpoCyYBpRTomsAPFeacb67tPTvZFpPR2jIFY1+RionIZZ9jXxJIiBsC
      J5CkTA19zrTq8Fkwp0yN4FkmaeRL0jGNTDp9eYSxrhrekOGuPt4IY50Db4SxXg9caBZoWrjy
      55z81xlKhoQHn6EVr6NGXdBN9IW3IjWjU6FHeHgfrbiJ7B2DAH31g8hdVGT/BGEmkd0DiKXQ
      i1tz+RU2HoM/RqQWUMMm2sItwtN/Ri/fQySi6/nIxncIq4hsP0XLVtAK1+ayEda+BSURiRxy
      cDp5Xo0n6Cs/By4wAIIgoNVqEQTBrDZ3dXWV3d1dbty4wfb2NpVKZSaEBZMZpN/vk8/nSSaT
      BEFAu90mHo9z+/bti7qVnww1OAMZIBJ5wuMvASYBEAVhgLb4NrL+Lfq1f0u49/voTMnQJzz8
      HJHfQA1OJ34V56OdiHSZcP9TsOto6SWCw88QQiOsf4ex8a8i+SU7e4RHXxB7/z+jvCFK/vSG
      JDO/shXC/U8xNv8ddKsgQ0Qig2ztAhcsjDXN/kzbDXU6HZRS1Go1rl+/TqvVolgszkhypVKJ
      5eVlxuMxtVqN4XDI8fHxK6ljeBkQyRIif41g53+DEQc9hlJRNY4U4eHn6Bv/GtncRiu9RdS6
      yPD0waRXcPcAjEk70nnzU/LsAXrlPbSFm5PZIPQnI3/E+1NKEZ78M8ofIp0usrM39+gPIE++
      RF/7ENnemzx/qwAynDTx44JnAF3XKZfLDIdDEokElmWRSqVIpVI8ffqUra0ttre32dzcJJFI
      kMvlZmWOvu9TLE6oxFdGOzRwUL1DtOWfoeyzSTPpiEsW5fQQsfRkxNZNRG6+0sM/h7H2Aap8
      FzXuIjv7CDPB3MEkQ2T/GJEsoRWuoRVvIOuP0ErRCIxCCGJ/95+QnSrCTKIvvIWIILOolET2
      jibNxAMH2T9GOX200qRu5cLJcM+D7/uz1qbTNOhlwxthrKuPSy+MNW1CdxkFqN4IY70euDQE
      m+n5gFJq1kp1SpWeIgxDBoPBhfj3Q5x74lQRz/af70zktfb3bMDL8WtmK3x59yjPaesvPKML
      2wN88sknbG5uzpYR29vbLC0tzTI9pmmytLREs9mk2WzywQcf8Nlnn1GpVGg0Gt8TtWq326ys
      rHB6esrm5iadTodut8u1a9fY29tjdXWVs7Mzkskkh4eH3L59G9M0CcOQfr+Pruv4vk+lUnk1
      /PzQR+88BjTC0p1IadAZlETrHyLcDuHiO9FshS5G/SuC8vvo7ccgNMLi7Wi2Ahfz9DP85b9H
      s09BCGT+xouv+xGIcRtt3CBMr0IsGi1GDGtooxoyVUYbt1HmBXeJnJKtnjx5MmuGNxqNCMMQ
      TdMoFAo8ffqUXC5HqVRC0zSKxSKpVIogCKhWqzSbTUqlEpubmzx8+BAp5UxRzrIsvv76a27c
      uMHDhw8ByOfzlEolTk5OSKfTDIdDwjCkXq8jhGB5eRk9Qh+quSE0QCC8lzGbCdBNlLUQPZD0
      ONJahNBDJYoQOEQi1imF3t1BxvMgDIT0CbPR1PT+HMKbdNPUnDYyYgBgJsFIoJJLKM9GZtYn
      Ns/tXURMRa0syyIIAjKZDIlEYtYl8uzsjHw+j2VZ9Ho9pJTE43GSyST1ep14PM76+jqFQoGD
      gwOy2SyWZZFOp/E8j16vx8LCAgcHB+TzeXRdx3Vdut0uSilOTk5IJBKsrq6Sy+VYXFx8ddVZ
      QkPF88jkOV7aKVQ4GWkR0ZcIwRjNaSOCEcLtggqImlKVmXXQTbRxA1SICP1oPv0ZVKIw8UdE
      H5y0fhWlxyD0QI+BdgElkT91Ezxd+09rAH5YPvjD8sjp/6fXnJ2dUS6XZ9dO6wo07U/04x+z
      /1Nwbi7QtEnGJSuJnAXRpfPr5T+vVCr1aslwSqnXpoqq1+td+Qbef+uIxWKvNg0qhHgtGl/D
      pKbhdbmXv2Vc2Cb4/v37VCoVkskkuVxu0vXw4ICNjQ1c153tCy6basJ5YLs2u80nZBJZbHfA
      cqbCUqYcyZYTONyv/j/+zea/56uTLzE0g5+tvBvpefWdHk9bO2TjObpOh6SZ5Hb53lw2Htcf
      YZkWY3+M7Q5YTC9RG5yxWdxiIR1N0+moe8jA6XG7fI9/OvpHbi7eIjsnse7bs2/IJXKM/BF9
      p085U+a0f8LNhYk47oUFgG3b6LpOs9lkZ2cHz/PQdZ1qtcr6+jqtVosPP/zwotz7qyAdT2O7
      A+JGgrX8BkPPjmwrrsfJWXkUiqbdIKbPr8P/J78y9MZdNKEx8ka0hk3eXro7VzBtlm6w23hC
      3+3TGbURCBJGgp3mduQAqGQrPBy1aY9a9JwuXjh/LcnWwk2qraeMgzHlTJmdxhMW00tsNx4D
      F5gFyuVyZLPZ2Z7AMAyy2SyVSoVCoTDj+bxOGHlD3l66Q3fcxnYH2K4d+UAtkAG2a9Mbd1lI
      LWLFLGTEw7CRN+J2+R5u4LJZ2iIVIdVoOwNsd5LW3SrdpJRaxNRj5K3odJGRP2LoDeiNu0gl
      aQ0bc9sYOH1szyYIA9qjNn+38g5CaBSTJeACZ4A7d+6QSCTY3NxkZ2dn1gxDCEEsFpudBr9O
      0DUd2xvys5V3GbgDTCuGQiEipBylkmwUrqFrOqv5dUzNiNSTd+rX2B9zb/nndEYt3qm8N/dS
      KpA+K7lVsok8A7dPMVmiadepnIOk54c+a/kNypll1vIbkZRBQhmykq2QTeSwXZtUPEXGz7Ka
      n/j1yrNAz+uuMmWGXqX1/pss0NWHYRivNguklMJ13ef+bUp8uyrwPO8v3ssbXB1c2B6gVqtR
      rVZnconTfl2vI5xwzOFoDyccczyq4kqXunNK3TmNZOtg+HSyBwgGOOGYunNK22tG8q3tNgik
      z+FoD1/6dLwWTbf2wutCFXI02scOJuv+llun4zUZ+D1Oxod40uNotE8g51/KNt0aZ84xSila
      bh2Ant/Bly/eBAcy4HC0xygYzmw1nDPaXoPT8RFe6D671wvsEimlpNFoUCqV+Oqrr/B9nzAM
      SaVSVCoVqtXqjMB27969K59vb3sNknqKrt8mHytxOj7EDR2up+YvhxQIUkaatteg47VIm1lG
      wQAFFMzSXMvIUTDk6fAJC/ElluIrHI6e4kmXNev6C4WxpJKUYoucOSekUmm6/p8GMIFgf7jN
      SmKNk/EhG6n5imJabp3rqbfo+m2OxlVyZoF9e5sbmduY2o9nuxQTvxruKdeMm6SMDIejPa4l
      b9DxWniOiyY0Gu4ZcEEzwJSGEIvFSCaTrK2tUSwWSafT7O7uYlkWtVqNcrl85V9+gFJsCVc6
      nI6PMISBQFCx1tm1H82dBXLkmGFgE6oAhaTvd9CEjib0ucsYT8YHCARpI8epc4QrXUwtNhl9
      X2BLAIfjfdaTk94PST1F12sj0DA1k2JsgYZ7RqDmnwEq1gbb9recjg8JpE91tIsC+n7vhdcq
      pTgZH7CW3EQpxdn4mJXEOqEKkUoiVYghzNndXcgMoOs68Xicer0+69mbz+cxTZNcLketVqNS
      qZCK2Pf2ssGRYzzp8VbmLifjA4rxRfp+l3xsvhEbwA0dEJA3iyzGVxiFNj2/gy70ubNJNzN3
      6Hkd4nqCYdCnktqg4zURz/79qB/SxRQmba/xLJOlsZa8jkDghCPimoUuBpQTq3P5BND3uxTM
      EqvJa3S9NvlYkVEwRP8JZDhXOhiaScutIxAoJIOghy50TM0kZxbp+12KsUmHmEtJhrsKeCOM
      NcH07EGLWNv810KoQjTEj8rEfK9L5KuAEOK1EZNyHOe1uZe/ZbzyALhKuf4fw0/pcPk8KCUj
      i1f9NfEy/bqM9zih2IdomoEMfYQ2efUvzMvf/e533L9/n36/T6PR4OnTp3S7XT799FP6/T7b
      29s4jsPu7i6Hh4f88Y9/vPI9hkN/zN6D/4aUAa2T+zz96r+eQxdoAqUUh4/+J73Gw8g2As9m
      /+v/jlKSg0f/g17zUXRb/pDtf/wvDHsHHG9/jDOsR7Y1hTOscbr7v2gc/t/INvrNR5xsf0y9
      +nvqB/+Hztk/ARcYAFMO0IMHDxgOh5imSbVaJZfL0Wq1OD095csvv6RWqxGLxVhYWLgoV18a
      dNMiU7yFphmk81sUyu+cf6RUkkRqiVH/KPIAYcTSpAs3UDNbh5FsKaWoV39PMruGEDqaHsMZ
      vvhM4UVIpMoYZpLiygeRbcSTJQwzRcwq4Q7r6MZEivPCAmBzc5MPP/yQ5eVlSqUSjUaDeDw+
      qwk2DIONjQ0SiQSDwYBmM9pBz2WC7w0Y9vaxu3vY3V2yi+dv+qGURGhm1ApGADynx7C3z7C7
      j6aZnMdYfunnCM1Ahi66YaHU+U/4Zeih6XF0I/qeq3n0B4xYGhk4WNlV5LNSzUsjjDV98af4
      S6WMl2UPcZmEsdSzcsGX8Wxeqi0ZgtAuzW82xdQvTdPE/wfm8slCSJm58gAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='5-' width='192'>
      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
      6Ifb9AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='7' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 2' width='384'>
      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
      f/qJr9zM0qKcAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 3' width='384'>
      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
      cs011yDLMi+//DKJiYk0atSIwYMHI4oiGzZswOPxnFV2sCr/yh8JydQQQ8TVuAt/xpVfe0mo
      pywZVS5HCmqJZIyt1/n8OQAU5+kqoCrVD36DoJNEn7cG6EK74inehMe6F5N655U8QC0IsRi5
      rW9bNu1LJ+mqC/8sWUx6gkx6bA4PDpcHfYUxgD9HE1hNkGUZvV7PyJEjNZbU/Px8hgwZQnZ2
      drXtN27cyAMPPECfPn2YP38+J06coHPnzrzzzjv069dPK+3+9NNPeeONN3j2rZ/IyC+jsNRO
      o5jz024+E+psAHr06FFjaWFdK04uBeiC2xOWtBTZmYkuqFU1vhyn08kHH3xAcnIykiRht9sp
      KSmhoKBAY0x89dVX+eCDD+jduzcHDhwgJSWFJk2asHHjRkaPHs3mzZs5cuQI6enptGrVigYN
      GtCtWzdeffVVoqKiaNKkyXkJqf9RMDb4O+6ijbgLfsIcP/L0JF0F7qKK6p+zMJ/WigraDFV2
      amRwfgEYP5wVbKA6nYSq+OQb9aEd8ZRuQ7anguICqfa2efCt2rZv305iYqJmVG02G1u3bq0x
      R5KZmcl3331HREQEt956q2ao/U1Sbdq0QVVVDhw4gMViCSjlvdQw8vp23NSrRTX6gQuBIJOB
      YLOB7KJybA4POknEandjMuj+kPNdCtDr9dx8880BC2K/fOi7775bbftbbrmFcePG8fnnn2O3
      23nyySc5ePAghYWFjBgxgo0bN1JQUEBGRgYzZswgedcx9I27czyr+NIxAJIkIUkShw8f5sMP
      P8RutyMIAv379w8ICV0OEAQBwRCNaKg5y67X67npppu46aabADAajURGRnLy5EnKysr4+9//
      jtlsZtu2bdx9990kJibSsWNHioqKuPHGG4mJicFut6PX67n22mtp3tynMfzggw9y9OhRHA5H
      jSWelwJ0wW3RBbfDa92LPXNFtdJNAFVVfNU/UCcBnao4XQbq0FrlPZWoIBRV1ZLABv3pJLBk
      bopojENxpCE70tAFt6Y2eL1epk6dyqFDh5g0aRINGjQgJSWF+fPnax2wlVFUVMT06dN54okn
      sFqtuN1uDAYDp06dYvbs2fTv3582bdowb948du3axc0333xJGwBBEP6wydjXC2Ams8BKkdWB
      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
      ACRJkjyUrAAkSZI8lKwAJEmSPJSsACRJkjyUrAAkSZI8lKwAJEmSPJSsACRJQgiBzWbj6wsD
      CCHUJUekm9PNvbSgJEnfkp2djU6nY8mSJWzcuJG5c+dSVFRESUkJAK+88gp1dXW888479PX1
      MXPmTJYuXcoLL7xAYmIiRqORNWvWuDkX0lCQLQBJ8jAzZsxg79692Gw2Tpw4QVRUFJ999hnr
      169n8uTJfP755yQmJvL000+zbNky8vLyEEJgMBgA+OUvf+nmHEhDRbYAJMnDjB07Fp1OR1ZW
      FqmpqVitVkwmE2+//TZOp5Px48fzySefcOrUKb7//e+r8SfCwsL42c9+pkamk4Y/+UtKkofR
      aDTcf//9bNu2jQULFhAeHk5YWBhxcXFMmjQJHx8famtriY6OxmKxqOEavby8ZOF/k5EtAEny
      QBMnTiQuLo64uDg0Gg2bN2/mX//6FxqNhqSkJG677Tb27dtHfHw8t956K35+fqSnp7s72dIQ
      k/EAJMnDVFdXs379en7+859z1113DVl4QWn4kRWAJHkYRVFQFAVvb29Z+Hs4WQFIkiR5KPlG
      R5IkyUP9D9NUJBrrNwy0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      sPyaDi0uMRdYXPXYNZZluXJ6eporV65gMpmoqqpicnKSnp4etm/fzuXLl3G5XGzduhW3283s
      7Cytra0Eg0GCwSDHjh27LzlK8HShaDp0IpHAarXK6k9LSwtutxu32015eTlut/uJ56irq+Pw
      4cOEQiF27txJV1cX8/PzwHL+eF1dHY2NjRw9ehSr1UpLSwsvvvgiFRUVRKNrk3skKFwUdQBJ
      kvB6vSwsLBCPx7lw4QItLS04nU6i0ShOp/OJ51hcXOSDDz7ge9/7HgMDA7jdbg4dOgTAd77z
      HcxmM//6r/9KOp3G4/HQ0NDA6dOnqa2tpaOj44nnF6xvFF0CGQwGNm/eTGVlJfPz8+zZs4eh
      oSHKysrYsmULQ0NDcubi78q1a9coLi7m+vXrjI+PY7FYGBkZIRKJkEgkcLlctLa2YrfbOXLk
      CADDw8Nks1laWlrkwxSCp5OCkUH/n19d5bJjbtXf6W238t9+78Ajx81ms2g0mnucTMig+WU9
      y6AF4wAiHTp/CAdYPQUjvC/Gk2Ryya/9nbISA7o1Ki0ieDr4RuMAgLw0+dlHNx+ZCvF//Zcj
      PNNaIzdIUKvVZLNZMpmMnOqQyWQA0Gq1ZLNZstksRUVFpFIpdDqdOH4puAfFHOCdd97h+9//
      Pg6HYznVYXaWffv2MTMzI6dFW61W2traHnvsU6dO4fV6+d73vscvfvELWltbOXToEOFwmJ//
      /Ockk0nefPNNTp8+TXt7OyqVirm5OZaWlvijP/ojBawVrFcUk0HLy8vx+Xwkk0mKioqoq6tj
      fHycbDaLx+Ph2WeflW/Ox+XIkSOUl5fjdDpxuVy43W6y2SxGoxGfz0c4HGZ6ehq/34/b7aa0
      tJSRkREFrBSsdxRzgJqaGqampuSMTJVKhc1mw+12o9VqicfjZLPZ3yktYcVpSkpKeOGFF7DZ
      bLhcLiYnJzl69Ci7d+8mnU5z9OhRysrK+Pzzz/mLv/gLkQIhuA/FHKChoQGbzUZrayvV1dXU
      1tbS1NREY2Mj7e3tzMzM3FekaDXkcjk+++wzFhYWyOVyLC4ukkgk0Ov1GAwGgsEgiUSC559/
      HrfbjVqt5rXXXuPDDz9ky5YtClgqWM8UjAz6m8+HuTMz/7W/98MXe1aV7vwohAyaX9azDFow
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='24' name='how many countries' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACO0lEQVRYhe2Yv2siURzEx+MIyTYhKGmybCdY5j9ItJUUBmyshUDAVhAESZFqIQpJISms
      rURSRCzEQqsIWkgSEJtAdHETsgRUXNGdKwJySzxyd+TusXd+ujffHwzDg8euiyTxH/NFtAHR
      rAIQbUA0qwBEGxDNKgDRBkSzCkC0AdGsAhBtQDSrAEQb+FXG4zE0TYNlWTZ9Pp9D0zQ8Pz9j
      2fedZVno9/uYTCY2/esfdfuJ3N7eQlVVjEYjbGxswDAMqKoKn8+HXC6HYrEIWZZhmiaGwyFU
      VYWiKHh9fUUmk8HNzQ12dnbQ7XYRjUYRiUTeFtMhZLNZ3t3dLc6lUomxWIwk2Wq1aJrmolYs
      FplMJkmS1WqVhUKBlmWRJA3DoN/v53A4JEk65gYcHR3Zzh6PBy6XCwCwu7trq5mmic3NTQDA
      /v6+rSZJEiRJWsw6JoDv6XQ6ODk5QSqVWmiapqHX66FWq6HRaODi4uLd3Hg8RjKZxN7eHiRJ
      ehP/1hX+DK6urnh4eMiHh4cf9jw9PTEej/P8/HyhPT4+MhgM8vr6+l2/YwJoNpsMhUIcDAYf
      9r68vPDg4IAkaZomQ6EQK5XK0l7HPIPlchnHx8fY3t626bPZDOVy2fYs1ut1uN1uAEC73YbX
      60UgEFi610U646doOBzGZDLB2traQpNlGWdnZ0gkEri/v4csy9B1HQBwenoKn8+Hy8tL5PN5
      bG1t2fal02koiuKcAD5iOp1C13Wsr6/D4/H89Nw/E8Dv8g3AYXordx5GqQAAAABJRU5ErkJg
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
