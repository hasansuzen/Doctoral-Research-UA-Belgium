<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0320.1853                               -->
<workbook original-version='18.1' source-build='2021.1.0 (20211.21.0320.1853)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='PhoenixNYT_1945-2005' inline='true' name='federated.0ylu8n80byp4731h73qz30z8f062' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='PhoenixNYT_1945-2005' name='textscan.0o9s8lh0qrezsi120z9jn0g7lpb0'>
            <connection class='textscan' directory='/Users/test/Downloads' filename='PhoenixNYT_1945-2005.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0o9s8lh0qrezsi120z9jn0g7lpb0' name='PhoenixNYT_1945-2005.csv' table='[PhoenixNYT_1945-2005#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='nl_BE' separator=','>
            <column datatype='string' name='eid' ordinal='0' />
            <column datatype='date' name='story_date' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy' name='year' ordinal='2' />
            <column datatype='integer' name='month' ordinal='3' />
            <column datatype='integer' name='day' ordinal='4' />
            <column datatype='string' name='source' ordinal='5' />
            <column datatype='string' name='source_root' ordinal='6' />
            <column datatype='string' name='source_agent' ordinal='7' />
            <column datatype='string' name='source_others' ordinal='8' />
            <column datatype='string' name='target' ordinal='9' />
            <column datatype='string' name='target_root' ordinal='10' />
            <column datatype='string' name='target_agent' ordinal='11' />
            <column datatype='string' name='target_others' ordinal='12' />
            <column datatype='string' name='code' ordinal='13' />
            <column datatype='integer' name='root_code' ordinal='14' />
            <column datatype='integer' name='quad_class' ordinal='15' />
            <column datatype='string' name='goldstein' ordinal='16' />
            <column datatype='string' name='joined_issues' ordinal='17' />
            <column datatype='string' name='lat' ordinal='18' />
            <column datatype='string' name='lon' ordinal='19' />
            <column datatype='string' name='placename' ordinal='20' />
            <column datatype='string' name='statename' ordinal='21' />
            <column datatype='string' name='countryname' ordinal='22' />
            <column datatype='integer' name='aid' ordinal='23' />
            <column datatype='string' name='process' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0o9s8lh0qrezsi120z9jn0g7lpb0' name='PhoenixNYT_1945-2005.csv' table='[PhoenixNYT_1945-2005#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='nl_BE' separator=','>
            <column datatype='string' name='eid' ordinal='0' />
            <column datatype='date' name='story_date' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy' name='year' ordinal='2' />
            <column datatype='integer' name='month' ordinal='3' />
            <column datatype='integer' name='day' ordinal='4' />
            <column datatype='string' name='source' ordinal='5' />
            <column datatype='string' name='source_root' ordinal='6' />
            <column datatype='string' name='source_agent' ordinal='7' />
            <column datatype='string' name='source_others' ordinal='8' />
            <column datatype='string' name='target' ordinal='9' />
            <column datatype='string' name='target_root' ordinal='10' />
            <column datatype='string' name='target_agent' ordinal='11' />
            <column datatype='string' name='target_others' ordinal='12' />
            <column datatype='string' name='code' ordinal='13' />
            <column datatype='integer' name='root_code' ordinal='14' />
            <column datatype='integer' name='quad_class' ordinal='15' />
            <column datatype='string' name='goldstein' ordinal='16' />
            <column datatype='string' name='joined_issues' ordinal='17' />
            <column datatype='string' name='lat' ordinal='18' />
            <column datatype='string' name='lon' ordinal='19' />
            <column datatype='string' name='placename' ordinal='20' />
            <column datatype='string' name='statename' ordinal='21' />
            <column datatype='string' name='countryname' ordinal='22' />
            <column datatype='integer' name='aid' ordinal='23' />
            <column datatype='string' name='process' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;nl_NL&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¬&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;nl_BE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[eid]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>eid</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>story_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[story_date]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>story_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_root</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source_root]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>source_root</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_agent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source_agent]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>source_agent</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_others</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source_others]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>source_others</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>target</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_root</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_root]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>target_root</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_agent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_agent]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>target_agent</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_others</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_others]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>target_others</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>root_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[root_code]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>root_code</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quad_class</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quad_class]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>quad_class</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>goldstein</remote-name>
            <remote-type>129</remote-type>
            <local-name>[goldstein]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>goldstein</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>joined_issues</remote-name>
            <remote-type>129</remote-type>
            <local-name>[joined_issues]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>joined_issues</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lon</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lon]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>lon</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>placename</remote-name>
            <remote-type>129</remote-type>
            <local-name>[placename]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>placename</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>statename</remote-name>
            <remote-type>129</remote-type>
            <local-name>[statename]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>statename</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countryname]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>countryname</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[aid]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>aid</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>process</remote-name>
            <remote-type>129</remote-type>
            <local-name>[process]</local-name>
            <parent-name>[PhoenixNYT_1945-2005.csv]</parent-name>
            <remote-alias>process</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LNL_RNL' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143541334019:qk]&quot;' value='RUS' />
          <alias key='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143549136900:qk]&quot;' value='NATO' />
          <alias key='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143561543692:qk]&quot;' value='EU' />
          <alias key='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152162152448:qk]&quot;' value='USA' />
          <alias key='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152163409923:qk]&quot;' value='GBR' />
          <alias key='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166035460:qk]&quot;' value='FRA' />
          <alias key='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_2369948970982801409:qk]&quot;' value='WEST' />
        </aliases>
      </column>
      <column aggregation='CountD' caption='rus' datatype='string' name='[Calculation_1022317143541334019]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF (CONTAINS([source_root], &quot;RUS&quot;) OR CONTAINS([source_root], &quot;SUN&quot;)) AND&#13;&#10; (NOT CONTAINS ([target_root], &quot;RUS&quot;) OR NOT CONTAINS ([target_root], &quot;SUN&quot;)) THEN &quot;RUS&quot; END' />
      </column>
      <column aggregation='CountD' caption='nato' datatype='string' name='[Calculation_1022317143549136900]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot; &#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;CAN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558758407] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558905864] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;HUN&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;END' />
      </column>
      <column caption='FirstBatch' datatype='date' name='[Calculation_1022317143554514949]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE (&quot;1949-08-24&quot;)' />
      </column>
      <column caption='SecondBatch' datatype='date' name='[Calculation_1022317143558508550]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(&quot;1952-02-18&quot;)' />
      </column>
      <column caption='ThirdBatch' datatype='date' name='[Calculation_1022317143558758407]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='date(&quot;1955-5-8&quot;)' />
      </column>
      <column caption='FourthBatch' datatype='date' name='[Calculation_1022317143558905864]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='date(&quot;1982-5-30&quot;)' />
      </column>
      <column caption='FifthBatch' datatype='date' name='[Calculation_1022317143559049225]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='date(&quot;1999-3-12&quot;)' />
      </column>
      <column caption='eu1' datatype='date' name='[Calculation_1022317143561314315]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='date(&quot;1958-1-1&quot;)' />
      </column>
      <column aggregation='CountD' caption='eu' datatype='string' name='[Calculation_1022317143561543692]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot; &#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;IRL&quot;) AND NOT CONTAINS([target_root], &quot;IRL&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND [story_date] &gt;= [Calculation_1022317143563837455] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;AUT&quot;) AND NOT CONTAINS([target_root], &quot;AUT&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FIN&quot;) AND NOT CONTAINS([target_root], &quot;FIN&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;SWE&quot;) AND NOT CONTAINS([target_root], &quot;SWE&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;END' />
      </column>
      <column caption='eu2' datatype='date' name='[Calculation_1022317143563157518]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='date(&quot;1973-1-1&quot;)' />
      </column>
      <column caption='eu3' datatype='date' name='[Calculation_1022317143563837455]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='date(&quot;1981-1-1&quot;)' />
      </column>
      <column caption='eu4' datatype='date' name='[Calculation_1022317143564128272]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='date(&quot;1986-1-1&quot;)' />
      </column>
      <column caption='eu5' datatype='date' name='[Calculation_1022317143564386321]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='date(&quot;1995-1-1&quot;)' />
      </column>
      <column aggregation='CountD' caption='usa' datatype='string' name='[Calculation_1219068152162152448]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) THEN &quot;USA&quot; END' />
      </column>
      <column aggregation='CountD' caption='gbr' datatype='string' name='[Calculation_1219068152163409923]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) THEN &quot;GBR&quot; END' />
      </column>
      <column aggregation='CountD' caption='fra' datatype='string' name='[Calculation_1219068152166035460]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) THEN &quot;FRA&quot; END' />
      </column>
      <column caption='null' datatype='string' name='[Calculation_1219068152166596613]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;&quot;) THEN &quot;null&quot; END' />
      </column>
      <column caption='event_type' datatype='string' name='[Calculation_1844012970967576576]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([code], &apos;11&apos;) THEN &apos;Disapprove&apos; &#10;ELSEIF CONTAINS([code],&apos;12&apos;) THEN &apos;Reject&apos;&#10;ELSEIF CONTAINS([code],&apos;13&apos;) THEN &apos;Threaten&apos;&#10;ELSEIF CONTAINS([code],&apos;14&apos;) THEN &apos;Protest&apos;&#10;ELSEIF CONTAINS([code],&apos;15&apos;) THEN &apos;Exhibit force posture&apos;&#10;ELSEIF CONTAINS([code],&apos;16&apos;) THEN &apos;Reduce relations&apos;&#10;ELSEIF CONTAINS([code],&apos;17&apos;) THEN &apos;Coerce&apos;&#10;ELSEIF CONTAINS([code],&apos;18&apos;) THEN &apos;Assault&apos;&#10;ELSEIF CONTAINS([code],&apos;19&apos;) THEN &apos;Fight&apos;&#10;ELSEIF CONTAINS([code],&apos;20&apos;) THEN &apos;Use unconventional mass violence&apos;&#10;ELSE &apos;Other&apos;&#10;END' />
      </column>
      <column caption='Region' datatype='string' name='[Calculation_1844012971028602881]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([countryname],&apos;ARE&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BHR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CYP&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;EGY&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;IRN&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;IRQ&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ISR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;JOR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;KWT&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LBN&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;OMN&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;PSE&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;QAT&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SAU&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SYR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TUR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;YEM&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;DEU&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;AND&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ALB&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;AUT&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;AZE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BLR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ARE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BEL&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BIH&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BGR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CZE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;DNK&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ARM&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;EST&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;FIN&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;FRA&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GEO&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NLD&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;IRL&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ESP&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SWE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CHE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ITA&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ISL&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MNE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;KAZ&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MKD&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LVA&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LTU&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LIE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LUX&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;HUN&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MLT&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MDA&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MCO&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NOR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;POL&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;RUS&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SMR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SRB&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SUK&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SUN&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MKR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;VAT&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GRC&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;AGO&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BEN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BWA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BFA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BDI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;DZA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;DJI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TCD&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GNQ&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ERI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ETH&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MAR&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CIV&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GMP&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GHA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GIN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GNB&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ZAF&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SSD&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CMR&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;KEN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;COM&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;COG&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;COD&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LSO&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LBR&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MDG&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MWI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MLI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MUS&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MRT&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MOZ&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NAM&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NER&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NGA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CAF&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;RWA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;STP&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SEN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SYC&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SLE&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SOM&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SDN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TZA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TGO&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TUN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;UGA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ZMB&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ZWE&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;&apos;) THEN &apos;Null&apos;&#10;ELSE &apos;Other&apos;&#10;END' />
      </column>
      <column caption='West' datatype='string' name='[Calculation_2369948970982801409]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([countryname],&apos;USA&apos;) OR  CONTAINS([countryname],&apos;GBR&apos;) OR CONTAINS([countryname],&apos;FRA&apos;) THEN &apos;West&apos;&#10;ELSE &apos;Other&apos;&#13;END' />
      </column>
      <column caption='Calculation1' datatype='real' name='[Calculation_302937491124523008]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='PhoenixNYT_1945-2005.csv' datatype='table' name='[__tableau_internal_object_id__].[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]' role='measure' type='quantitative' />
      <column datatype='integer' name='[aid]' role='measure' type='quantitative' />
      <column datatype='string' name='[code]' role='dimension' type='nominal' />
      <column datatype='string' name='[countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[day]' role='measure' type='quantitative' />
      <column datatype='string' name='[eid]' role='dimension' type='nominal' />
      <column aggregate-role-from='[lon]' datatype='string' name='[lat]' role='dimension' type='nominal' />
      <column datatype='string' name='[lon]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[month]' role='measure' type='quantitative' />
      <column datatype='integer' name='[quad_class]' role='measure' type='quantitative' />
      <column datatype='integer' name='[root_code]' role='measure' type='quantitative' />
      <column datatype='string' name='[source_root]' role='dimension' type='nominal' />
      <column datatype='string' name='[target_root]' role='dimension' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1022317143541334019]' derivation='Count' name='[cnt:Calculation_1022317143541334019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[cnt:Calculation_1022317143549136900:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1022317143561543692]' derivation='Count' name='[cnt:Calculation_1022317143561543692:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1219068152162152448]' derivation='Count' name='[cnt:Calculation_1219068152162152448:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1219068152163409923]' derivation='Count' name='[cnt:Calculation_1219068152163409923:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1219068152166035460]' derivation='Count' name='[cnt:Calculation_1219068152166035460:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1219068152166596613]' derivation='Count' name='[cnt:Calculation_1219068152166596613:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2369948970982801409]' derivation='Count' name='[cnt:Calculation_2369948970982801409:qk]' pivot='key' type='quantitative' />
      <column-instance column='[code]' derivation='Count' name='[cnt:code:qk]' pivot='key' type='quantitative' />
      <column-instance column='[eid]' derivation='Count' name='[cnt:eid:qk]' pivot='key' type='quantitative' />
      <column-instance column='[root_code]' derivation='Count' name='[cnt:root_code:qk]' pivot='key' type='quantitative' />
      <column-instance column='[source_root]' derivation='Count' name='[cnt:source_root:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[cum:cnt:Calculation_1022317143549136900:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[diff:cnt:Calculation_1022317143549136900:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='ColumnInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[diff:cnt:Calculation_1022317143549136900:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[diff:cnt:Calculation_1022317143549136900:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[diff:cnt:Calculation_1022317143549136900:qk:6]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='PaneCol' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[diff:cnt:Calculation_1022317143549136900:qk:7]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Pane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[diff:cnt:Calculation_1022317143549136900:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[countryname Set]' derivation='InOut' name='[io:countryname Set:nk]' pivot='key' type='nominal' />
      <column-instance column='[countryname]' derivation='Max' name='[max:countryname:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1022317143541334019]' derivation='None' name='[none:Calculation_1022317143541334019:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1219068152162152448]' derivation='None' name='[none:Calculation_1219068152162152448:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1219068152163409923]' derivation='None' name='[none:Calculation_1219068152163409923:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1844012970967576576]' derivation='None' name='[none:Calculation_1844012970967576576:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1844012971028602881]' derivation='None' name='[none:Calculation_1844012971028602881:nk]' pivot='key' type='nominal' />
      <column-instance column='[countryname]' derivation='None' name='[none:countryname:nk]' pivot='key' type='nominal' />
      <column-instance column='[target_root]' derivation='None' name='[none:target_root:nk]' pivot='key' type='nominal' />
      <column-instance column='[aid]' derivation='Sum' name='[sum:aid:qk]' pivot='key' type='quantitative' />
      <column-instance column='[code]' derivation='Sum' name='[sum:code:qk]' pivot='key' type='quantitative' />
      <column-instance column='[day]' derivation='Sum' name='[sum:day:qk]' pivot='key' type='quantitative' />
      <column-instance column='[month]' derivation='Sum' name='[sum:month:qk]' pivot='key' type='quantitative' />
      <column-instance column='[quad_class]' derivation='Sum' name='[sum:quad_class:qk]' pivot='key' type='quantitative' />
      <column-instance column='[root_code]' derivation='Sum' name='[sum:root_code:qk]' pivot='key' type='quantitative' />
      <group caption='fisrt three' name='[countryname Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[countryname]' member='&quot;GBR&quot;' />
          <groupfilter function='member' level='[countryname]' member='&quot;RUS&quot;' />
          <groupfilter function='member' level='[countryname]' member='&quot;USA&quot;' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1219068152162152448:nk]' type='palette'>
            <map to='#f28e2b'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:countryname Set:nk]' type='palette'>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:countryname:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BMU&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CRI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FJI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GUM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PRK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SOM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;XKX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BFA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GMB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LCA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MNG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TCA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VCT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AIA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BHS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;COG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GRD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MSR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PLW&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SLB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VNM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ATF&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BRN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HRV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KIR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PYF&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TWN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ZWE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BOL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FLK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PRT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;YEM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BIH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GRL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JEY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MTQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PNG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TKM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VUT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GIN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LBR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MMR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SAU&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SYC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ABW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CIV&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;EGY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GNB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LIE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MNP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TCD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VEN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DMA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IMN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LAO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SWZ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;URY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AND&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;COM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GTM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JOR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MUS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SLV&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TLS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WLF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ATG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HTI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KNA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NIC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;QAT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TZA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DEU&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MHL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NLD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;REU&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SVN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CCK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DNK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GIB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LBN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MLT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NRU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RWA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SXM&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DZA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GLP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IRN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LBY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OMN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SDN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VAT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ASM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CUW&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KGZ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NCL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PRY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SSD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ZAF&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BLZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CPV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GUF&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MAC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MWI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PRI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SMR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TON&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WSM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GNQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SGS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TGO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VGB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CAF&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GGY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IDN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KWT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MKD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ROU&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ATA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BRB&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CYM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FRO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HND&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KHM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MDG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NER&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;STP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TUV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ZMB&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AGO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BHR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ESH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LSO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MRT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SJM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VIR&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1022317143541334019:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1844012971028602881:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Null&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Middle East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1844012970967576576:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Reject&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Assault&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fight&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Threaten&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>%all%</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coerce&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Protest&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Use unconventional mass violence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Reduce relations&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Disapprove&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Exhibit force posture&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[__tableau_internal_object_id__].[cnt:PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:code:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:eid:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[sum:code:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166035460:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[sum:quad_class:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152163409923:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152163409923:nk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[sum:month:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143561543692:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143541334019:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_2369948970982801409:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152162152448:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152162152448:nk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[sum:day:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166596613:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:root_code:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[sum:root_code:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:source_root:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[sum:aid:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143549136900:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cum:cnt:Calculation_1022317143549136900:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[diff:cnt:Calculation_1022317143549136900:qk:2]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[diff:cnt:Calculation_1022317143549136900:qk:3]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[diff:cnt:Calculation_1022317143549136900:qk:5]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[diff:cnt:Calculation_1022317143549136900:qk:6]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[diff:cnt:Calculation_1022317143549136900:qk:7]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[diff:cnt:Calculation_1022317143549136900:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:target_root:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BRB&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CYM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IGO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KWT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WSM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BHR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;COG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GTM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NER&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PRY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AIA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BLZ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CPV&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HRV&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KIR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NLD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SYC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VCT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CAF&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DEU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IRN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LBY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SLV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TON&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ZMB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BRN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IMG&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LAO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MLT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OMN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;YEM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BMU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CRI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FJI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HTI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KNA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RWA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VEN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JOR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PRK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SUN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TZA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ABW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BHS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;COK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SVN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;URY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GNB&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LSO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MUS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SSD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TUV&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AND&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BOL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CSK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MHL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SAU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TCD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VNM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GIN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LCA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MNG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SMR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ZWE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DMA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GLP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LIE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PLW&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SOM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BFA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CIV&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DZA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GNQ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MWI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PRI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;STP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TWN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;EGY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GRD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PRT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ATG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LBN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MMR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SLB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TKM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;YUG&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FSM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IDN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KSV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MKD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NRU&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SDN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TGO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VUT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BIH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KGZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NGO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;QAT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DNK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GMB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MRT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PNG&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DDR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GGY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LBR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MNC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TMP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ZAF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AGO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;COM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HND&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KHM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MDG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NIC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ROU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SWZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:countryname:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BMU&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CRI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FJI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GUM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PRK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SOM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;XKX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BFA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DEU&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GMB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LCA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MNG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TCA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VCT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AIA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BHS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;COG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GRD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MSR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PLW&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SLB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VNM&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ATF&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BRN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HRV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KIR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PYF&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TWN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ZWE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BOL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FLK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PRT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;YEM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BIH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GRL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JEY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MTQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PNG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TKM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VUT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GIN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LBR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MMR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SAU&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SYC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ABW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CIV&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;EGY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GNB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LIE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MNP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TCD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VEN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DMA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IMN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LAO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SWZ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;URY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AND&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;COM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GTM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JOR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MUS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SLV&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TLS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WLF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ATG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HTI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KNA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NIC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;QAT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TZA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MHL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NLD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;REU&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SVN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CCK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DNK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GIB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LBN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MLT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NRU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RWA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SXM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DZA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GLP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IRN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LBY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OMN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SDN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VAT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ASM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CUW&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KGZ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NCL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PRY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SSD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ZAF&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BLZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CPV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GUF&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MAC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MWI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PRI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SMR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TON&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WSM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GNQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SGS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TGO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VGB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CAF&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GGY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IDN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KWT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MKD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ROU&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ATA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BRB&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CYM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FRO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HND&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KHM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MDG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NER&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;STP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TUV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ZMB&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AGO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BHR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ESH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LSO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MRT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SJM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VIR&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Belgium&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='eid' />
        <field-sort-custom-order field='story_date' />
        <field-sort-custom-order field='Calculation_1022317143554514949' />
        <field-sort-custom-order field='Calculation_1022317143558508550' />
        <field-sort-custom-order field='Calculation_1022317143558758407' />
        <field-sort-custom-order field='Calculation_1022317143558905864' />
        <field-sort-custom-order field='Calculation_1022317143559049225' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='day' />
        <field-sort-custom-order field='source' />
        <field-sort-custom-order field='source_root' />
        <field-sort-custom-order field='Calculation_1022317143561543692' />
        <field-sort-custom-order field='Calculation_1022317143561314315' />
        <field-sort-custom-order field='Calculation_1022317143563157518' />
        <field-sort-custom-order field='Calculation_1022317143563837455' />
        <field-sort-custom-order field='Calculation_1022317143564128272' />
        <field-sort-custom-order field='Calculation_1022317143564386321' />
        <field-sort-custom-order field='Calculation_1022317143549136900' />
        <field-sort-custom-order field='Calculation_1022317143541334019' />
        <field-sort-custom-order field='Calculation_1219068152166596613' />
        <field-sort-custom-order field='Calculation_1219068152166035460' />
        <field-sort-custom-order field='Calculation_1219068152163409923' />
        <field-sort-custom-order field='Calculation_1219068152162152448' />
        <field-sort-custom-order field='source_agent' />
        <field-sort-custom-order field='source_others' />
        <field-sort-custom-order field='target' />
        <field-sort-custom-order field='target_root' />
        <field-sort-custom-order field='target_agent' />
        <field-sort-custom-order field='target_others' />
        <field-sort-custom-order field='code' />
        <field-sort-custom-order field='Calculation_1844012970967576576' />
        <field-sort-custom-order field='root_code' />
        <field-sort-custom-order field='quad_class' />
        <field-sort-custom-order field='goldstein' />
        <field-sort-custom-order field='joined_issues' />
        <field-sort-custom-order field='lat' />
        <field-sort-custom-order field='lon' />
        <field-sort-custom-order field='placename' />
        <field-sort-custom-order field='statename' />
        <field-sort-custom-order field='countryname' />
        <field-sort-custom-order field='Calculation_2369948970982801409' />
        <field-sort-custom-order field='Calculation_1844012971028602881' />
        <field-sort-custom-order field='aid' />
        <field-sort-custom-order field='process' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='PhoenixNYT_1945-2005.csv' id='PhoenixNYT_1945-2005.csv_6807A0A4BE8E46548060ABC89BFF4895'>
            <properties context=''>
              <relation connection='textscan.0o9s8lh0qrezsi120z9jn0g7lpb0' name='PhoenixNYT_1945-2005.csv' table='[PhoenixNYT_1945-2005#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='nl_BE' separator=','>
                  <column datatype='string' name='eid' ordinal='0' />
                  <column datatype='date' name='story_date' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy' name='year' ordinal='2' />
                  <column datatype='integer' name='month' ordinal='3' />
                  <column datatype='integer' name='day' ordinal='4' />
                  <column datatype='string' name='source' ordinal='5' />
                  <column datatype='string' name='source_root' ordinal='6' />
                  <column datatype='string' name='source_agent' ordinal='7' />
                  <column datatype='string' name='source_others' ordinal='8' />
                  <column datatype='string' name='target' ordinal='9' />
                  <column datatype='string' name='target_root' ordinal='10' />
                  <column datatype='string' name='target_agent' ordinal='11' />
                  <column datatype='string' name='target_others' ordinal='12' />
                  <column datatype='string' name='code' ordinal='13' />
                  <column datatype='integer' name='root_code' ordinal='14' />
                  <column datatype='integer' name='quad_class' ordinal='15' />
                  <column datatype='string' name='goldstein' ordinal='16' />
                  <column datatype='string' name='joined_issues' ordinal='17' />
                  <column datatype='string' name='lat' ordinal='18' />
                  <column datatype='string' name='lon' ordinal='19' />
                  <column datatype='string' name='placename' ordinal='20' />
                  <column datatype='string' name='statename' ordinal='21' />
                  <column datatype='string' name='countryname' ordinal='22' />
                  <column datatype='integer' name='aid' ordinal='23' />
                  <column datatype='string' name='process' ordinal='24' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Event Types in Which the West and Russia Involved (1946-2000)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column aggregation='CountD' caption='rus' datatype='string' name='[Calculation_1022317143541334019]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (CONTAINS([source_root], &quot;RUS&quot;) OR CONTAINS([source_root], &quot;SUN&quot;)) AND&#13;&#10; (NOT CONTAINS ([target_root], &quot;RUS&quot;) OR NOT CONTAINS ([target_root], &quot;SUN&quot;)) THEN &quot;RUS&quot; END' />
            </column>
            <column aggregation='CountD' caption='nato' datatype='string' name='[Calculation_1022317143549136900]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot; &#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;CAN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558758407] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558905864] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;HUN&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;END' />
            </column>
            <column caption='FirstBatch' datatype='date' name='[Calculation_1022317143554514949]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE (&quot;1949-08-24&quot;)' />
            </column>
            <column caption='SecondBatch' datatype='date' name='[Calculation_1022317143558508550]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;1952-02-18&quot;)' />
            </column>
            <column caption='ThirdBatch' datatype='date' name='[Calculation_1022317143558758407]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1955-5-8&quot;)' />
            </column>
            <column caption='FourthBatch' datatype='date' name='[Calculation_1022317143558905864]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1982-5-30&quot;)' />
            </column>
            <column caption='FifthBatch' datatype='date' name='[Calculation_1022317143559049225]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1999-3-12&quot;)' />
            </column>
            <column caption='eu1' datatype='date' name='[Calculation_1022317143561314315]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1958-1-1&quot;)' />
            </column>
            <column aggregation='CountD' caption='eu' datatype='string' name='[Calculation_1022317143561543692]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot; &#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;IRL&quot;) AND NOT CONTAINS([target_root], &quot;IRL&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND [story_date] &gt;= [Calculation_1022317143563837455] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;AUT&quot;) AND NOT CONTAINS([target_root], &quot;AUT&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FIN&quot;) AND NOT CONTAINS([target_root], &quot;FIN&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;SWE&quot;) AND NOT CONTAINS([target_root], &quot;SWE&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;END' />
            </column>
            <column caption='eu2' datatype='date' name='[Calculation_1022317143563157518]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1973-1-1&quot;)' />
            </column>
            <column caption='eu3' datatype='date' name='[Calculation_1022317143563837455]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1981-1-1&quot;)' />
            </column>
            <column caption='eu4' datatype='date' name='[Calculation_1022317143564128272]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1986-1-1&quot;)' />
            </column>
            <column caption='eu5' datatype='date' name='[Calculation_1022317143564386321]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1995-1-1&quot;)' />
            </column>
            <column aggregation='CountD' caption='usa' datatype='string' name='[Calculation_1219068152162152448]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) THEN &quot;USA&quot; END' />
            </column>
            <column aggregation='CountD' caption='gbr' datatype='string' name='[Calculation_1219068152163409923]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) THEN &quot;GBR&quot; END' />
            </column>
            <column aggregation='CountD' caption='fra' datatype='string' name='[Calculation_1219068152166035460]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) THEN &quot;FRA&quot; END' />
            </column>
            <column caption='event_type' datatype='string' name='[Calculation_1844012970967576576]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([code], &apos;11&apos;) THEN &apos;Disapprove&apos; &#10;ELSEIF CONTAINS([code],&apos;12&apos;) THEN &apos;Reject&apos;&#10;ELSEIF CONTAINS([code],&apos;13&apos;) THEN &apos;Threaten&apos;&#10;ELSEIF CONTAINS([code],&apos;14&apos;) THEN &apos;Protest&apos;&#10;ELSEIF CONTAINS([code],&apos;15&apos;) THEN &apos;Exhibit force posture&apos;&#10;ELSEIF CONTAINS([code],&apos;16&apos;) THEN &apos;Reduce relations&apos;&#10;ELSEIF CONTAINS([code],&apos;17&apos;) THEN &apos;Coerce&apos;&#10;ELSEIF CONTAINS([code],&apos;18&apos;) THEN &apos;Assault&apos;&#10;ELSEIF CONTAINS([code],&apos;19&apos;) THEN &apos;Fight&apos;&#10;ELSEIF CONTAINS([code],&apos;20&apos;) THEN &apos;Use unconventional mass violence&apos;&#10;ELSE &apos;Other&apos;&#10;END' />
            </column>
            <column caption='West' datatype='string' name='[Calculation_2369948970982801409]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([countryname],&apos;USA&apos;) OR  CONTAINS([countryname],&apos;GBR&apos;) OR CONTAINS([countryname],&apos;FRA&apos;) THEN &apos;West&apos;&#10;ELSE &apos;Other&apos;&#13;END' />
            </column>
            <column-instance column='[Calculation_1022317143541334019]' derivation='Count' name='[cnt:Calculation_1022317143541334019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[cnt:Calculation_1022317143549136900:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1022317143561543692]' derivation='Count' name='[cnt:Calculation_1022317143561543692:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152162152448]' derivation='Count' name='[cnt:Calculation_1219068152162152448:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152163409923]' derivation='Count' name='[cnt:Calculation_1219068152163409923:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152166035460]' derivation='Count' name='[cnt:Calculation_1219068152166035460:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2369948970982801409]' derivation='Count' name='[cnt:Calculation_2369948970982801409:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[code]' role='dimension' type='nominal' />
            <column datatype='string' name='[countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_1844012970967576576]' derivation='None' name='[none:Calculation_1844012970967576576:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[source_root]' role='dimension' type='nominal' />
            <column datatype='date' name='[story_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[target_root]' role='dimension' type='nominal' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143541334019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_2369948970982801409:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143549136900:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152162152448:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143561543692:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152163409923:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143541334019:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166035460:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Coerce&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Exhibit force posture&quot;' />
              <groupfilter from='&quot;Protest&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Use unconventional mass violence&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Disapprove&quot;</bucket>
              <bucket>&quot;Coerce&quot;</bucket>
              <bucket>&quot;Fight&quot;</bucket>
              <bucket>&quot;Use unconventional mass violence&quot;</bucket>
              <bucket>&quot;Reject&quot;</bucket>
              <bucket>&quot;Threaten&quot;</bucket>
              <bucket>&quot;Protest&quot;</bucket>
              <bucket>&quot;Reduce relations&quot;</bucket>
              <bucket>&quot;Exhibit force posture&quot;</bucket>
              <bucket>&quot;Assault&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0ylu8n80byp4731h73qz30z8f062].[tyr:year:qk]' included-values='in-range'>
            <min>#1945-01-01 00:00:00#</min>
            <max>#2000-09-29 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[tyr:year:qk]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0ylu8n80byp4731h73qz30z8f062].[Multiple Values]' enable-instant-analytics='true' formula='total' id='refline0' label-type='value' scope='per-pane' value-column='[federated.0ylu8n80byp4731h73qz30z8f062].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[Multiple Values]</rows>
        <cols>([federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names] / [federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk])</cols>
      </table>
      <simple-id uuid='{69525287-50F1-47EB-9B7E-53CC5188FD46}' />
    </worksheet>
    <worksheet name='2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Political Warfare Events by Actors and Region Between 1946-2000 </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column aggregation='CountD' caption='rus' datatype='string' name='[Calculation_1022317143541334019]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (CONTAINS([source_root], &quot;RUS&quot;) OR CONTAINS([source_root], &quot;SUN&quot;)) AND&#13;&#10; (NOT CONTAINS ([target_root], &quot;RUS&quot;) OR NOT CONTAINS ([target_root], &quot;SUN&quot;)) THEN &quot;RUS&quot; END' />
            </column>
            <column aggregation='CountD' caption='nato' datatype='string' name='[Calculation_1022317143549136900]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot; &#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;CAN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558758407] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558905864] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;HUN&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;END' />
            </column>
            <column caption='FirstBatch' datatype='date' name='[Calculation_1022317143554514949]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE (&quot;1949-08-24&quot;)' />
            </column>
            <column caption='SecondBatch' datatype='date' name='[Calculation_1022317143558508550]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;1952-02-18&quot;)' />
            </column>
            <column caption='ThirdBatch' datatype='date' name='[Calculation_1022317143558758407]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1955-5-8&quot;)' />
            </column>
            <column caption='FourthBatch' datatype='date' name='[Calculation_1022317143558905864]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1982-5-30&quot;)' />
            </column>
            <column caption='FifthBatch' datatype='date' name='[Calculation_1022317143559049225]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1999-3-12&quot;)' />
            </column>
            <column caption='eu1' datatype='date' name='[Calculation_1022317143561314315]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1958-1-1&quot;)' />
            </column>
            <column aggregation='CountD' caption='eu' datatype='string' name='[Calculation_1022317143561543692]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot; &#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;IRL&quot;) AND NOT CONTAINS([target_root], &quot;IRL&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND [story_date] &gt;= [Calculation_1022317143563837455] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;AUT&quot;) AND NOT CONTAINS([target_root], &quot;AUT&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FIN&quot;) AND NOT CONTAINS([target_root], &quot;FIN&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;SWE&quot;) AND NOT CONTAINS([target_root], &quot;SWE&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;END' />
            </column>
            <column caption='eu2' datatype='date' name='[Calculation_1022317143563157518]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1973-1-1&quot;)' />
            </column>
            <column caption='eu3' datatype='date' name='[Calculation_1022317143563837455]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1981-1-1&quot;)' />
            </column>
            <column caption='eu4' datatype='date' name='[Calculation_1022317143564128272]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1986-1-1&quot;)' />
            </column>
            <column caption='eu5' datatype='date' name='[Calculation_1022317143564386321]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1995-1-1&quot;)' />
            </column>
            <column aggregation='CountD' caption='usa' datatype='string' name='[Calculation_1219068152162152448]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) THEN &quot;USA&quot; END' />
            </column>
            <column aggregation='CountD' caption='gbr' datatype='string' name='[Calculation_1219068152163409923]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) THEN &quot;GBR&quot; END' />
            </column>
            <column aggregation='CountD' caption='fra' datatype='string' name='[Calculation_1219068152166035460]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) THEN &quot;FRA&quot; END' />
            </column>
            <column caption='event_type' datatype='string' name='[Calculation_1844012970967576576]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([code], &apos;11&apos;) THEN &apos;Disapprove&apos; &#10;ELSEIF CONTAINS([code],&apos;12&apos;) THEN &apos;Reject&apos;&#10;ELSEIF CONTAINS([code],&apos;13&apos;) THEN &apos;Threaten&apos;&#10;ELSEIF CONTAINS([code],&apos;14&apos;) THEN &apos;Protest&apos;&#10;ELSEIF CONTAINS([code],&apos;15&apos;) THEN &apos;Exhibit force posture&apos;&#10;ELSEIF CONTAINS([code],&apos;16&apos;) THEN &apos;Reduce relations&apos;&#10;ELSEIF CONTAINS([code],&apos;17&apos;) THEN &apos;Coerce&apos;&#10;ELSEIF CONTAINS([code],&apos;18&apos;) THEN &apos;Assault&apos;&#10;ELSEIF CONTAINS([code],&apos;19&apos;) THEN &apos;Fight&apos;&#10;ELSEIF CONTAINS([code],&apos;20&apos;) THEN &apos;Use unconventional mass violence&apos;&#10;ELSE &apos;Other&apos;&#10;END' />
            </column>
            <column caption='Region' datatype='string' name='[Calculation_1844012971028602881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([countryname],&apos;ARE&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BHR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CYP&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;EGY&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;IRN&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;IRQ&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ISR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;JOR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;KWT&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LBN&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;OMN&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;PSE&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;QAT&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SAU&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SYR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TUR&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;YEM&apos;) THEN &apos;Middle East&apos;&#10;ELSEIF CONTAINS([countryname],&apos;DEU&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;AND&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ALB&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;AUT&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;AZE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BLR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ARE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BEL&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BIH&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BGR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CZE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;DNK&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ARM&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;EST&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;FIN&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;FRA&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GEO&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NLD&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;IRL&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ESP&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SWE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CHE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ITA&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ISL&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MNE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;KAZ&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MKD&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LVA&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LTU&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LIE&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LUX&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;HUN&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MLT&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MDA&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MCO&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NOR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;POL&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;RUS&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SMR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SRB&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SUK&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SUN&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MKR&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;VAT&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GRC&apos;) THEN &apos;Europe&apos;&#10;ELSEIF CONTAINS([countryname],&apos;AGO&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BEN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BWA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BFA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;BDI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;DZA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;DJI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TCD&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GNQ&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ERI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ETH&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MAR&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CIV&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GMP&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GHA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GIN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;GNB&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ZAF&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SSD&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CMR&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;KEN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;COM&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;COG&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;COD&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LSO&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;LBR&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MDG&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MWI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MLI&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MUS&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MRT&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;MOZ&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NAM&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NER&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;NGA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;CAF&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;RWA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;STP&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SEN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SYC&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SLE&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SOM&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;SDN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TZA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TGO&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;TUN&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;UGA&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ZMB&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;ZWE&apos;) THEN &apos;Africa&apos;&#10;ELSEIF CONTAINS([countryname],&apos;&apos;) THEN &apos;Null&apos;&#10;ELSE &apos;Other&apos;&#10;END' />
            </column>
            <column caption='West' datatype='string' name='[Calculation_2369948970982801409]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([countryname],&apos;USA&apos;) OR  CONTAINS([countryname],&apos;GBR&apos;) OR CONTAINS([countryname],&apos;FRA&apos;) THEN &apos;West&apos;&#10;ELSE &apos;Other&apos;&#13;END' />
            </column>
            <column-instance column='[Calculation_1022317143541334019]' derivation='Count' name='[cnt:Calculation_1022317143541334019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[cnt:Calculation_1022317143549136900:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1022317143561543692]' derivation='Count' name='[cnt:Calculation_1022317143561543692:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152162152448]' derivation='Count' name='[cnt:Calculation_1219068152162152448:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152163409923]' derivation='Count' name='[cnt:Calculation_1219068152163409923:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152166035460]' derivation='Count' name='[cnt:Calculation_1219068152166035460:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2369948970982801409]' derivation='Count' name='[cnt:Calculation_2369948970982801409:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[code]' role='dimension' type='nominal' />
            <column datatype='string' name='[countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_1844012970967576576]' derivation='None' name='[none:Calculation_1844012970967576576:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1844012971028602881]' derivation='None' name='[none:Calculation_1844012971028602881:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[source_root]' role='dimension' type='nominal' />
            <column datatype='date' name='[story_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[target_root]' role='dimension' type='nominal' />
            <column datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143561543692:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166035460:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152163409923:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143549136900:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143541334019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152162152448:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_2369948970982801409:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Coerce&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Exhibit force posture&quot;' />
              <groupfilter from='&quot;Protest&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Use unconventional mass violence&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012971028602881:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Africa&quot;' function='range' level='[none:Calculation_1844012971028602881:nk]' to='&quot;Middle East&quot;' />
              <groupfilter function='member' level='[none:Calculation_1844012971028602881:nk]' member='&quot;Other&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' included-values='in-range'>
            <min>1945</min>
            <max>2000</max>
          </filter>
          <slices>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012971028602881:nk]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#e15759' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' />
              <text column='[federated.0ylu8n80byp4731h73qz30z8f062].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012971028602881:nk] / [federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk])</rows>
        <cols>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012971028602881:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{FBE6F79A-09EF-4026-B387-750D5E9D34B7}' />
    </worksheet>
    <worksheet name='3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Event Types by Actor (1946-2000)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column aggregation='CountD' caption='rus' datatype='string' name='[Calculation_1022317143541334019]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (CONTAINS([source_root], &quot;RUS&quot;) OR CONTAINS([source_root], &quot;SUN&quot;)) AND&#13;&#10; (NOT CONTAINS ([target_root], &quot;RUS&quot;) OR NOT CONTAINS ([target_root], &quot;SUN&quot;)) THEN &quot;RUS&quot; END' />
            </column>
            <column aggregation='CountD' caption='nato' datatype='string' name='[Calculation_1022317143549136900]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot; &#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;CAN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558758407] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558905864] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;HUN&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;END' />
            </column>
            <column caption='FirstBatch' datatype='date' name='[Calculation_1022317143554514949]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE (&quot;1949-08-24&quot;)' />
            </column>
            <column caption='SecondBatch' datatype='date' name='[Calculation_1022317143558508550]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;1952-02-18&quot;)' />
            </column>
            <column caption='ThirdBatch' datatype='date' name='[Calculation_1022317143558758407]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1955-5-8&quot;)' />
            </column>
            <column caption='FourthBatch' datatype='date' name='[Calculation_1022317143558905864]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1982-5-30&quot;)' />
            </column>
            <column caption='FifthBatch' datatype='date' name='[Calculation_1022317143559049225]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1999-3-12&quot;)' />
            </column>
            <column caption='eu1' datatype='date' name='[Calculation_1022317143561314315]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1958-1-1&quot;)' />
            </column>
            <column aggregation='CountD' caption='eu' datatype='string' name='[Calculation_1022317143561543692]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot; &#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;IRL&quot;) AND NOT CONTAINS([target_root], &quot;IRL&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND [story_date] &gt;= [Calculation_1022317143563837455] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;AUT&quot;) AND NOT CONTAINS([target_root], &quot;AUT&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FIN&quot;) AND NOT CONTAINS([target_root], &quot;FIN&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;SWE&quot;) AND NOT CONTAINS([target_root], &quot;SWE&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;END' />
            </column>
            <column caption='eu2' datatype='date' name='[Calculation_1022317143563157518]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1973-1-1&quot;)' />
            </column>
            <column caption='eu3' datatype='date' name='[Calculation_1022317143563837455]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1981-1-1&quot;)' />
            </column>
            <column caption='eu4' datatype='date' name='[Calculation_1022317143564128272]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1986-1-1&quot;)' />
            </column>
            <column caption='eu5' datatype='date' name='[Calculation_1022317143564386321]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1995-1-1&quot;)' />
            </column>
            <column aggregation='CountD' caption='usa' datatype='string' name='[Calculation_1219068152162152448]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) THEN &quot;USA&quot; END' />
            </column>
            <column aggregation='CountD' caption='gbr' datatype='string' name='[Calculation_1219068152163409923]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) THEN &quot;GBR&quot; END' />
            </column>
            <column aggregation='CountD' caption='fra' datatype='string' name='[Calculation_1219068152166035460]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) THEN &quot;FRA&quot; END' />
            </column>
            <column caption='event_type' datatype='string' name='[Calculation_1844012970967576576]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([code], &apos;11&apos;) THEN &apos;Disapprove&apos; &#10;ELSEIF CONTAINS([code],&apos;12&apos;) THEN &apos;Reject&apos;&#10;ELSEIF CONTAINS([code],&apos;13&apos;) THEN &apos;Threaten&apos;&#10;ELSEIF CONTAINS([code],&apos;14&apos;) THEN &apos;Protest&apos;&#10;ELSEIF CONTAINS([code],&apos;15&apos;) THEN &apos;Exhibit force posture&apos;&#10;ELSEIF CONTAINS([code],&apos;16&apos;) THEN &apos;Reduce relations&apos;&#10;ELSEIF CONTAINS([code],&apos;17&apos;) THEN &apos;Coerce&apos;&#10;ELSEIF CONTAINS([code],&apos;18&apos;) THEN &apos;Assault&apos;&#10;ELSEIF CONTAINS([code],&apos;19&apos;) THEN &apos;Fight&apos;&#10;ELSEIF CONTAINS([code],&apos;20&apos;) THEN &apos;Use unconventional mass violence&apos;&#10;ELSE &apos;Other&apos;&#10;END' />
            </column>
            <column caption='West' datatype='string' name='[Calculation_2369948970982801409]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([countryname],&apos;USA&apos;) OR  CONTAINS([countryname],&apos;GBR&apos;) OR CONTAINS([countryname],&apos;FRA&apos;) THEN &apos;West&apos;&#10;ELSE &apos;Other&apos;&#13;END' />
            </column>
            <column-instance column='[Calculation_1022317143541334019]' derivation='Count' name='[cnt:Calculation_1022317143541334019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[cnt:Calculation_1022317143549136900:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1022317143561543692]' derivation='Count' name='[cnt:Calculation_1022317143561543692:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152162152448]' derivation='Count' name='[cnt:Calculation_1219068152162152448:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152163409923]' derivation='Count' name='[cnt:Calculation_1219068152163409923:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152166035460]' derivation='Count' name='[cnt:Calculation_1219068152166035460:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2369948970982801409]' derivation='Count' name='[cnt:Calculation_2369948970982801409:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[code]' role='dimension' type='nominal' />
            <column datatype='string' name='[countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_1844012970967576576]' derivation='None' name='[none:Calculation_1844012970967576576:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[source_root]' role='dimension' type='nominal' />
            <column datatype='date' name='[story_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[target_root]' role='dimension' type='nominal' />
            <column datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143549136900:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152162152448:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143541334019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143561543692:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152163409923:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166035460:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_2369948970982801409:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143549136900:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152162152448:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143541334019:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143561543692:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152163409923:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166035460:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Coerce&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Exhibit force posture&quot;' />
              <groupfilter from='&quot;Protest&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Use unconventional mass violence&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' included-values='in-range'>
            <min>1945</min>
            <max>2000</max>
          </filter>
          <slices>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#59a14f' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[Multiple Values]</rows>
        <cols>([federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk] / [federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{CBFB5218-8F5D-4321-82C9-29B837C646AF}' />
    </worksheet>
    <worksheet name='4'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column caption='event_type' datatype='string' name='[Calculation_1844012970967576576]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([code], &apos;11&apos;) THEN &apos;Disapprove&apos; &#10;ELSEIF CONTAINS([code],&apos;12&apos;) THEN &apos;Reject&apos;&#10;ELSEIF CONTAINS([code],&apos;13&apos;) THEN &apos;Threaten&apos;&#10;ELSEIF CONTAINS([code],&apos;14&apos;) THEN &apos;Protest&apos;&#10;ELSEIF CONTAINS([code],&apos;15&apos;) THEN &apos;Exhibit force posture&apos;&#10;ELSEIF CONTAINS([code],&apos;16&apos;) THEN &apos;Reduce relations&apos;&#10;ELSEIF CONTAINS([code],&apos;17&apos;) THEN &apos;Coerce&apos;&#10;ELSEIF CONTAINS([code],&apos;18&apos;) THEN &apos;Assault&apos;&#10;ELSEIF CONTAINS([code],&apos;19&apos;) THEN &apos;Fight&apos;&#10;ELSEIF CONTAINS([code],&apos;20&apos;) THEN &apos;Use unconventional mass violence&apos;&#10;ELSE &apos;Other&apos;&#10;END' />
            </column>
            <column-instance column='[Calculation_1844012970967576576]' derivation='Count' name='[cnt:Calculation_1844012970967576576:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[code]' role='dimension' type='nominal' />
            <column datatype='string' name='[countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[eid]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1844012970967576576]' derivation='None' name='[none:Calculation_1844012970967576576:nk]' pivot='key' type='nominal' />
            <column-instance column='[countryname]' derivation='None' name='[none:countryname:nk]' pivot='key' type='nominal' />
            <column datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Assault&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Fight&quot;' />
              <groupfilter from='&quot;Protest&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Use unconventional mass violence&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([eid])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:countryname:nk]' />
                  <groupfilter function='member' level='[none:countryname:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' included-values='in-range'>
            <min>1945</min>
            <max>2000</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1844012970967576576:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' />
              <text column='[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1844012970967576576:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1844012970967576576:qk]</rows>
        <cols>[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]</cols>
      </table>
      <simple-id uuid='{05FB2345-F5DD-4377-AAFA-7BC59942888E}' />
    </worksheet>
    <worksheet name='5'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column aggregation='CountD' caption='rus' datatype='string' name='[Calculation_1022317143541334019]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (CONTAINS([source_root], &quot;RUS&quot;) OR CONTAINS([source_root], &quot;SUN&quot;)) AND&#13;&#10; (NOT CONTAINS ([target_root], &quot;RUS&quot;) OR NOT CONTAINS ([target_root], &quot;SUN&quot;)) THEN &quot;RUS&quot; END' />
            </column>
            <column aggregation='CountD' caption='nato' datatype='string' name='[Calculation_1022317143549136900]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot; &#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;CAN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143554514949] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558508550] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558758407] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143558905864] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;HUN&quot;) AND NOT CONTAINS([target_root], &quot;HUN&quot;) &#13;&#10;AND NOT CONTAINS([target_root], &quot;CAN&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;ISL&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NOR&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;TUR&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;)&#13;&#10;AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;CZE&quot;) AND NOT CONTAINS([target_root], &quot;POL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;)&#13;&#10;AND [story_date] &gt;= [Calculation_1022317143559049225] THEN &quot;NATO&quot;&#13;&#10;END' />
            </column>
            <column caption='FirstBatch' datatype='date' name='[Calculation_1022317143554514949]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE (&quot;1949-08-24&quot;)' />
            </column>
            <column caption='SecondBatch' datatype='date' name='[Calculation_1022317143558508550]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;1952-02-18&quot;)' />
            </column>
            <column caption='ThirdBatch' datatype='date' name='[Calculation_1022317143558758407]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1955-5-8&quot;)' />
            </column>
            <column caption='FourthBatch' datatype='date' name='[Calculation_1022317143558905864]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1982-5-30&quot;)' />
            </column>
            <column caption='FifthBatch' datatype='date' name='[Calculation_1022317143559049225]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1999-3-12&quot;)' />
            </column>
            <column caption='eu1' datatype='date' name='[Calculation_1022317143561314315]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1958-1-1&quot;)' />
            </column>
            <column aggregation='CountD' caption='eu' datatype='string' name='[Calculation_1022317143561543692]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;BEL&quot;) AND NOT CONTAINS([target_root], &quot;BEL&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot; &#13;&#10;ELSEIF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DEU&quot;) AND NOT CONTAINS([target_root], &quot;DEU&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ITA&quot;) AND NOT CONTAINS([target_root], &quot;ITA&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;LUX&quot;) AND NOT CONTAINS([target_root], &quot;LUX&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;NLD&quot;) AND NOT CONTAINS([target_root], &quot;NLD&quot;) AND [story_date] &gt;= [Calculation_1022317143561314315] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;DNK&quot;) AND NOT CONTAINS([target_root], &quot;DNK&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;IRL&quot;) AND NOT CONTAINS([target_root], &quot;IRL&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) AND [story_date] &gt;= [Calculation_1022317143563157518] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;GRC&quot;) AND NOT CONTAINS([target_root], &quot;GRC&quot;) AND [story_date] &gt;= [Calculation_1022317143563837455] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;PRT&quot;) AND NOT CONTAINS([target_root], &quot;PRT&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;ESP&quot;) AND NOT CONTAINS([target_root], &quot;ESP&quot;) AND [story_date] &gt;= [Calculation_1022317143564128272] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;AUT&quot;) AND NOT CONTAINS([target_root], &quot;AUT&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;FIN&quot;) AND NOT CONTAINS([target_root], &quot;FIN&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;ELSEIF CONTAINS([source_root], &quot;SWE&quot;) AND NOT CONTAINS([target_root], &quot;SWE&quot;) AND [story_date] &gt;= [Calculation_1022317143564386321] THEN &quot;EU&quot;&#13;&#10;END' />
            </column>
            <column caption='eu2' datatype='date' name='[Calculation_1022317143563157518]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1973-1-1&quot;)' />
            </column>
            <column caption='eu3' datatype='date' name='[Calculation_1022317143563837455]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1981-1-1&quot;)' />
            </column>
            <column caption='eu4' datatype='date' name='[Calculation_1022317143564128272]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1986-1-1&quot;)' />
            </column>
            <column caption='eu5' datatype='date' name='[Calculation_1022317143564386321]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='date(&quot;1995-1-1&quot;)' />
            </column>
            <column aggregation='CountD' caption='usa' datatype='string' name='[Calculation_1219068152162152448]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) THEN &quot;USA&quot; END' />
            </column>
            <column aggregation='CountD' caption='gbr' datatype='string' name='[Calculation_1219068152163409923]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) THEN &quot;GBR&quot; END' />
            </column>
            <column aggregation='CountD' caption='fra' datatype='string' name='[Calculation_1219068152166035460]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) THEN &quot;FRA&quot; END' />
            </column>
            <column caption='event_type' datatype='string' name='[Calculation_1844012970967576576]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([code], &apos;11&apos;) THEN &apos;Disapprove&apos; &#10;ELSEIF CONTAINS([code],&apos;12&apos;) THEN &apos;Reject&apos;&#10;ELSEIF CONTAINS([code],&apos;13&apos;) THEN &apos;Threaten&apos;&#10;ELSEIF CONTAINS([code],&apos;14&apos;) THEN &apos;Protest&apos;&#10;ELSEIF CONTAINS([code],&apos;15&apos;) THEN &apos;Exhibit force posture&apos;&#10;ELSEIF CONTAINS([code],&apos;16&apos;) THEN &apos;Reduce relations&apos;&#10;ELSEIF CONTAINS([code],&apos;17&apos;) THEN &apos;Coerce&apos;&#10;ELSEIF CONTAINS([code],&apos;18&apos;) THEN &apos;Assault&apos;&#10;ELSEIF CONTAINS([code],&apos;19&apos;) THEN &apos;Fight&apos;&#10;ELSEIF CONTAINS([code],&apos;20&apos;) THEN &apos;Use unconventional mass violence&apos;&#10;ELSE &apos;Other&apos;&#10;END' />
            </column>
            <column caption='West' datatype='string' name='[Calculation_2369948970982801409]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([countryname],&apos;USA&apos;) OR  CONTAINS([countryname],&apos;GBR&apos;) OR CONTAINS([countryname],&apos;FRA&apos;) THEN &apos;West&apos;&#10;ELSE &apos;Other&apos;&#13;END' />
            </column>
            <column-instance column='[Calculation_1022317143541334019]' derivation='Count' name='[cnt:Calculation_1022317143541334019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1022317143549136900]' derivation='Count' name='[cnt:Calculation_1022317143549136900:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1022317143561543692]' derivation='Count' name='[cnt:Calculation_1022317143561543692:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152162152448]' derivation='Count' name='[cnt:Calculation_1219068152162152448:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152163409923]' derivation='Count' name='[cnt:Calculation_1219068152163409923:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152166035460]' derivation='Count' name='[cnt:Calculation_1219068152166035460:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2369948970982801409]' derivation='Count' name='[cnt:Calculation_2369948970982801409:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[code]' role='dimension' type='nominal' />
            <column datatype='string' name='[countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_1844012970967576576]' derivation='None' name='[none:Calculation_1844012970967576576:nk]' pivot='key' type='nominal' />
            <column-instance column='[target_root]' derivation='None' name='[none:target_root:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[source_root]' role='dimension' type='nominal' />
            <column datatype='date' name='[story_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[target_root]' role='dimension' type='nominal' />
            <column datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143549136900:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152162152448:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152163409923:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143541334019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166035460:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143561543692:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_2369948970982801409:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143549136900:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152162152448:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152163409923:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143541334019:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166035460:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1022317143561543692:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Coerce&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Exhibit force posture&quot;' />
              <groupfilter from='&quot;Protest&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Use unconventional mass violence&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:target_root:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([target_root])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;ABW&quot;' function='range' level='[none:target_root:nk]' to='&quot;ZWE&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' included-values='in-range'>
            <min>1945</min>
            <max>2000</max>
          </filter>
          <slices>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[none:target_root:nk]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='14' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:target_root:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0ylu8n80byp4731h73qz30z8f062].[Multiple Values]' enable-instant-analytics='true' formula='total' id='refline1' label-type='value' scope='per-cell' value-column='[federated.0ylu8n80byp4731h73qz30z8f062].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[Multiple Values]</rows>
        <cols>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{ED5A0050-9878-4D62-8D82-00BA271CF827}' />
    </worksheet>
    <worksheet name='5-'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column-instance column='[code]' derivation='Count' name='[cnt:code:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[code]' role='dimension' type='nominal' />
            <column datatype='string' name='[countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[countryname]' derivation='None' name='[none:countryname:nk]' pivot='key' type='nominal' />
            <column datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' included-values='in-range'>
            <min>1945</min>
            <max>2000</max>
          </filter>
          <slices>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ylu8n80byp4731h73qz30z8f062].[Longitude (generated)]' field-type='quantitative' max='22551560.207619183' min='-11116608.412367919' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ylu8n80byp4731h73qz30z8f062].[Latitude (generated)]' field-type='quantitative' max='14823066.640553826' min='-12297224.169514455' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]' />
              <text column='[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:code:qk]' />
              <lod column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[Latitude (generated)]</rows>
        <cols>[federated.0ylu8n80byp4731h73qz30z8f062].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{37D3E326-9345-46A7-92AA-C4E6D8C380FA}' />
    </worksheet>
    <worksheet name='7'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column caption='event_type' datatype='string' name='[Calculation_1844012970967576576]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([code], &apos;11&apos;) THEN &apos;Disapprove&apos; &#10;ELSEIF CONTAINS([code],&apos;12&apos;) THEN &apos;Reject&apos;&#10;ELSEIF CONTAINS([code],&apos;13&apos;) THEN &apos;Threaten&apos;&#10;ELSEIF CONTAINS([code],&apos;14&apos;) THEN &apos;Protest&apos;&#10;ELSEIF CONTAINS([code],&apos;15&apos;) THEN &apos;Exhibit force posture&apos;&#10;ELSEIF CONTAINS([code],&apos;16&apos;) THEN &apos;Reduce relations&apos;&#10;ELSEIF CONTAINS([code],&apos;17&apos;) THEN &apos;Coerce&apos;&#10;ELSEIF CONTAINS([code],&apos;18&apos;) THEN &apos;Assault&apos;&#10;ELSEIF CONTAINS([code],&apos;19&apos;) THEN &apos;Fight&apos;&#10;ELSEIF CONTAINS([code],&apos;20&apos;) THEN &apos;Use unconventional mass violence&apos;&#10;ELSE &apos;Other&apos;&#10;END' />
            </column>
            <column-instance column='[code]' derivation='Count' name='[cnt:code:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[code]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1844012970967576576]' derivation='None' name='[none:Calculation_1844012970967576576:nk]' pivot='key' type='nominal' />
            <column datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Assault&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Fight&quot;' />
              <groupfilter from='&quot;Protest&quot;' function='range' level='[none:Calculation_1844012970967576576:nk]' to='&quot;Use unconventional mass violence&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' included-values='in-range'>
            <min>1946</min>
            <max>2000</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:code:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]</column>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#e15759' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</rows>
        <cols>[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:code:qk]</cols>
      </table>
      <simple-id uuid='{0BB072D7-3EE8-4201-AFAB-2F8C70BF00A6}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column caption='West' datatype='string' name='[Calculation_2369948970982801409]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([countryname],&apos;USA&apos;) OR  CONTAINS([countryname],&apos;GBR&apos;) OR CONTAINS([countryname],&apos;FRA&apos;) THEN &apos;West&apos;&#10;ELSE &apos;Other&apos;&#13;END' />
            </column>
            <column-instance column='[eid]' derivation='Count' name='[cnt:eid:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[eid]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2369948970982801409]' derivation='None' name='[none:Calculation_2369948970982801409:nk]' pivot='key' type='nominal' />
            <column-instance column='[countryname]' derivation='None' name='[none:countryname:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ylu8n80byp4731h73qz30z8f062].[Longitude (generated)]' field-type='quantitative' max='21116913.114878159' min='-20323180.367076933' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ylu8n80byp4731h73qz30z8f062].[Latitude (generated)]' field-type='quantitative' max='16424711.310816519' min='-7558933.5763682434' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:eid:qk]' max='10000' min='100' num-steps='10' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#cae1ca</color>
                <color>#a7d1a7</color>
                <color>#87c287</color>
                <color>#6bb26b</color>
                <color>#51a351</color>
                <color>#3a933a</color>
                <color>#278327</color>
                <color>#177417</color>
                <color>#0a640a</color>
                <color>#005500</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_2369948970982801409:nk]' />
              <text column='[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:eid:qk]' />
              <lod column='[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]' />
              <geometry column='[federated.0ylu8n80byp4731h73qz30z8f062].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[Latitude (generated)]</rows>
        <cols>[federated.0ylu8n80byp4731h73qz30z8f062].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0948519F-B02C-4F89-B56F-63DF6F6D96F2}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column-instance column='[eid]' derivation='Count' name='[cnt:eid:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[code]' role='dimension' type='nominal' />
            <column datatype='string' name='[eid]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ylu8n80byp4731h73qz30z8f062].[none:code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:eid:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:eid:qk]' value='68' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:eid:qk]</rows>
        <cols>[federated.0ylu8n80byp4731h73qz30z8f062].[none:code:nk]</cols>
      </table>
      <simple-id uuid='{A323B536-A223-4426-B5E7-F007DEE0C230}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column aggregation='CountD' caption='usa' datatype='string' name='[Calculation_1219068152162152448]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;USA&quot;) AND NOT CONTAINS([target_root], &quot;USA&quot;) THEN &quot;USA&quot; END' />
            </column>
            <column aggregation='CountD' caption='gbr' datatype='string' name='[Calculation_1219068152163409923]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;GBR&quot;) AND NOT CONTAINS([target_root], &quot;GBR&quot;) THEN &quot;GBR&quot; END' />
            </column>
            <column aggregation='CountD' caption='fra' datatype='string' name='[Calculation_1219068152166035460]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;FRA&quot;) AND NOT CONTAINS([target_root], &quot;FRA&quot;) THEN &quot;FRA&quot; END' />
            </column>
            <column caption='null' datatype='string' name='[Calculation_1219068152166596613]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([source_root], &quot;&quot;) THEN &quot;null&quot; END' />
            </column>
            <column-instance column='[Calculation_1219068152162152448]' derivation='Count' name='[cnt:Calculation_1219068152162152448:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152163409923]' derivation='Count' name='[cnt:Calculation_1219068152163409923:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152166035460]' derivation='Count' name='[cnt:Calculation_1219068152166035460:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219068152166596613]' derivation='Count' name='[cnt:Calculation_1219068152166596613:qk]' pivot='key' type='quantitative' />
            <column-instance column='[eid]' derivation='Count' name='[cnt:eid:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[eid]' role='dimension' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[source_root]' role='dimension' type='nominal' />
            <column datatype='string' name='[target_root]' role='dimension' type='nominal' />
            <column datatype='date' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:eid:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166035460:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152163409923:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152166596613:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:Calculation_1219068152162152448:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[Multiple Values]</rows>
        <cols>[federated.0ylu8n80byp4731h73qz30z8f062].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{849088BE-9BD1-4B78-8A28-0781731E09D9}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column-instance column='[eid]' derivation='Count' name='[cnt:eid:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[eid]' role='dimension' type='nominal' />
            <column-instance column='[source_root]' derivation='None' name='[none:source_root:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[source_root]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ylu8n80byp4731h73qz30z8f062].[none:source_root:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:eid:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylu8n80byp4731h73qz30z8f062].[none:source_root:nk]</rows>
        <cols>[federated.0ylu8n80byp4731h73qz30z8f062].[cnt:eid:qk]</cols>
      </table>
      <simple-id uuid='{E7E2B3AC-45ED-421F-A6C4-9E139243E320}' />
    </worksheet>
    <worksheet name='how many countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='PhoenixNYT_1945-2005' name='federated.0ylu8n80byp4731h73qz30z8f062' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylu8n80byp4731h73qz30z8f062'>
            <column datatype='string' name='[countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[countryname]' derivation='CountD' name='[ctd:countryname:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ylu8n80byp4731h73qz30z8f062].[ctd:countryname:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{72922C7F-7655-426B-9A7B-900A41165DAE}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_2369948970982801409:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_2369948970982801409:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:eid:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{29327B4E-AB21-4FFC-8AD6-D1B3760484A9}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:eid:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{20B4D0F1-F996-4767-A941-E0F876852738}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='9' param='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152162152448:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152163409923:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152166035460:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152166596613:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:eid:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:source_agent:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:source_root:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:statename:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C46BE8A-951A-46A0-BE38-30A5D16D935B}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_2369948970982801409:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:eid:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:source_root:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D097DCB-1009-42F8-B7F9-B8321E08F503}' />
    </window>
    <window class='worksheet' name='1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' type='filter' />
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[tyr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='10' param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143541334019:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143549136900:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143561543692:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152162152448:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152163409923:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152166035460:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_2369948970982801409:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:code:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F03A1F0F-77D9-45CD-938A-EDB465AB184D}' />
    </window>
    <window class='worksheet' name='2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[countryname (group)]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143541334019:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143549136900:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143561543692:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152162152448:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152163409923:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152166035460:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152166596613:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012971028602881:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_2369948970982801409:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:code:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A848569-D3A6-4729-BAEF-8C7FE36AD09D}' />
    </window>
    <window class='worksheet' name='3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' type='filter' />
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[:Measure Names]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143541334019:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143549136900:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152162152448:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152163409923:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152166035460:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_2369948970982801409:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:code:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7E4ACBE-77ED-4EE0-A590-FF9E7A406186}' />
    </window>
    <window class='worksheet' name='4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' type='filter' />
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_2369948970982801409:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:eid:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4485CA33-89CA-473E-AC43-E38A84C8CB52}' />
    </window>
    <window class='worksheet' name='5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='196'>
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' type='filter' />
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='14' param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:target_root:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143541334019:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143549136900:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1022317143561543692:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152163409923:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1219068152166035460:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_2369948970982801409:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:code:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:target_root:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[usa &amp; fra (Combined)]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3EF80B9A-C248-49E7-95CE-146A44E67135}' />
    </window>
    <window class='worksheet' name='5-'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:code:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:year:qk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{600BD536-46D2-4172-A5D7-985840A8DC44}' />
    </window>
    <window class='worksheet' maximized='true' name='7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]' type='filter' />
            <card param='[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:AdhocCluster:2:ok]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:Calculation_1844012970967576576:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:code (bin):qk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:code:nk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:code:qk]</field>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{280410EF-8D7F-40A3-AD25-6D87986B0C4E}' />
    </window>
    <window class='worksheet' name='how many countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylu8n80byp4731h73qz30z8f062].[none:countryname:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75DDE74C-01D0-49C2-B42D-352CC79AEC47}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9WY9c2XW2+Zw55jHnZHIqsoo1SqWhNLQ/tKC20RDQAuQb3/kHGLAB/QT/
      CF/53lfShSHD+GA03O5PlgyXSjWoBg7JIZM5RGZGxhxniDPt3RcnI4qsYpJxIquCZDVfoJCZ
      rNgr1tlnT2vttd6lSCklL/AC/z+EoiiK+rSVeIEXeJp4MQEeA8dxnrYKL/A148UEeAyiKHqq
      3y+ESPV5KWXqNtPIiOOYs56Uz6Lbg23P8nxCiC89hz6ztBf4Ev7xH/+RV199lX6/z8rKCufP
      n2dpaWmqtr/+9a9ZWFhgd3eXMAz5xS9+wT/8wz/wy1/+klKpNJWMf/7nf8Y0TXK5HHfv3uXa
      tWu89957XLp0iV/84hePbfv3f//3/M3f/A2e5/Gb3/yGn/3sZ/z617/me9/7Ht1ul1qtxp//
      +Z9Ppce7777LrVu3WFtbw7IshsMhg8GApaUlfvrTn04l4/j4mLt379LpdOh0Opw/f57Lly/z
      q1/9il/+8pcoinJq29/85jeEYcji4iKj0Yhbt27xk5/8hN/+9rf84Ac/4N///d/52c9+BrzY
      Ab5SCCEwTZMgCAiCINWqGUURcRwTRRGtVotGo4Gmady4cSPV9zuOg23bE3lHR0cYhvHEtpcv
      X+aPf/wjH3zwAbZts7q6yquvvkoURfz85z9nMBik0uPu3bvUarVJX7zxxhvs7u6mWsEfbLuz
      s8O7776LlJJut/vYdplMBoD33nuPc+fOoSgKpVKJjY0NRqMRr7/+Oq+99hrwYgf4SrG2tkYU
      RVQqFfb29vj+978/ddsrV67wve99j/fffx9N09jb2+Pv/u7v2NzcTPX929vbrK2tEQQBS0tL
      /NVf/RX9fv+Jbd98803iOCaOY7773e/Sbrc5d+4cGxsb/Mu//AtvvPHG1HosLi7y13/913Q6
      HbrdLqVSiW63S6VSeezK/SAqlQqHh4csLCzQ6/WoVCosLS3xwx/+cLIjnYaXX36Zo6MjVFVl
      ZWWFWq3GcDgkjmMKhQK5XG6ih/LCDXo6+v0+5XL5aavxAl8TFEVRJjuA4ziEYfjQB6SUU8/Y
      byK+2B9PgpCSWEh0VSEWoKmk7j8pJdFYhgRVAXUGGeO2AAqz6RELUFUYL5Gamn4sSCmRk99n
      k/Fgv4775nHPI6VEnHzXuD+1k3eiq0xkwANHoHw+D8DW1hYff/wxi4uLRFHEm2++ye7uLleu
      XMF1XcIwpFarYVlW6gfZ2tpCCMHKygpSSlRVRQiBrusIIRiNRmQyGaSUE32eJqY5OjwIJxAc
      DQMyemJa1XI6OVNLJSOIJcdOiK4q9LyIi9UMGSPl4AU6bogXChSgnjfIp9QjEpLtrk9GV8ka
      Kj0v4spCNpUMgI4bEQtJECcD8ULVSj0Z3UBwOAzImSpCwErJRH+MiCCW7PV9XqpnGfoxHTfC
      0BQUBUxNJYjEZFH5kg3w4Ycf0mq1iOOY9fV1/umf/on19XXu3r3Lt771LX73u99RKpWe6FV4
      FEajEa+++iqffPIJAO12O1FC16lWq1SrVT755BOklPzkJz9JLf9pwzp5K7GULOQNwjj96VJT
      FaJYslQwUIDeKGLFMFPJUAA/SmTMogMkk0hTkl1EU2C1lE6HMSpZnbYboqmgayryRL80ME/6
      1QsEOVPDCWLKmdPNV0tXyRsaUkrcQJA1VPxIEAtQkChKsrPBIyaAqqqcO3cOgPX1dUzTpN/v
      E4YhzWaTOI7JZtOvBACapnHnzh0URUEIQalUolQqoes6lmUxGAwoFovP7bnbDQQZXaWY0ei6
      ESszDBovFJiawigUxEJSzKRbuQGETI4BQSTxQoGmKql3AE1RsE5Wf0VRyBmzOQz7o4gwlmQN
      lSCSqY9z8Hm/ljIaAz+e7LCnYRQK/FhwZIeUMhptN6KU0XGCmFJGoz+KMLVExtRG8Phj46PL
      LDjtq8Zb4oP//1mwPV4Ywc83hEhs2NOG0kNG8JMwcRvNMDB93yeO49TtnjZGo9FUPvQXeH4x
      14uw4+Njjo+P8X0/tYfleYAUEdI+QgY2snXrc/dJGhlSIgcNZOgijz5F2oez6WIfIeMI2d1C
      Dhqz6dHaRHpdZOce0mnOpsdgH9ndRg72kJ17s8nwesjjG8jIRzY/RcbBExpI5DB5Zhl6yMOP
      k3fS/AzpDx/q17lehHU6HbLZLKPRCCEEYRhSKpXodDqYponneWSzWVzXpVKpEEURw+GQUqlE
      sVhkMBjQ7XZ5+eWXnwkv0ZfgdaG7BTIGq4Qc7qOUzqWTEY3g+Dpc/ilkKjAaQGEllQgpBbQ3
      YfktsIpw9CmU1lLq4UH3HgwPkJGHoltwabqwjodgZJHHN1DWvoM8+BNK9RKnnklOQ+sGFFbh
      4EPQLZ5kRsvAhtYmFNdA0SD2kZv/E2Xt7eT95GowSjx8c90BVFVF0zR830cIgW3b9Ho9ut0u
      QggMw5iEE9i2Ta1Wo1ar4fs+t27dotlsYhgGo9FonmpPDSW3AJoBi68j+3uk93eAYmQhW0VB
      gcEu1F5KL0NRobCc/NG8AevfSy2DOIJMGRAoZgHUGdfK1m2U1e8ACopmIOUMR+HFV2G4j3Rb
      YOShf/+xH1esIljFZCFAgJlHqV2GwX4y+fq7ULsCzHkHKBQKSCk5d+7cJNQ4n8+TyWTo9/vU
      ajW63S7VapVSqUShUKDdbrO2tkapVKJer7O9vf1srv6QbKtSQOiilDeguJpehj8EKZBuG2pX
      UdT0XiApYggcUFpgFWB4CPUr6YSY+WSwVS6B10l2kllg5sA+BM2E4iqKkv55CD0wiyirb8Px
      DVh6fFiGHPWS99D4AErr4NtQuQDDBixcg1F/0q9zCYUIguCJQVBxHKNp2uTns4DhcEixOOOL
      f4FnHtlsdnov0FlgmrNdojxt+L4/iSx8gW8m5moDbG9vs729PfH3Hx0dATAYDB763bZtIPEa
      NZuzeR/GMuaKwIHhQWLIDvZmkyEi6N1PtvDOHQjO8BxSQH8Hutuzte1tg9NMjg5ua3Y9JvIe
      f3Z/Ikb9xDAXKROVBvsw6iX9GY2gtwXBEJizDdBsNllYWOCzzz4jm82yv79Pu90ml8uxv7/P
      /v4+5XKZnZ0d3nnnnUlM+d7eHtlslk6nQ7lcplqtsrW1xfr6OlEU0W63WVlZodVqoWka+Xye
      4+NjlpaWqNfrdLtd9vb2KJVKBEHAD37wg6/nATUz8Z6oixD5MwpRQITgtiG3mAxAszCjKDXx
      IA32Z9PDKicD3+tAeWM2Hcbo70LoJq7hWS85naOkvdeB/JQeqdBLbBA9A0YWmp8l/25VgDnv
      AJZlUS6XiaKIKIpYWVlB13WCIKBQKKDrOnEcs7i4iGEY1Go1SqUS1WqV4XDIK6+8MvESDQYD
      VFUljmOq1Srdbpd6vY5hGBwcHFCr1chmsxwfH+O6LhcvXsRxnK/3hllEyYodBxA6EM9w13Fi
      RKMo4B4nbryzYLCfGIJpIaJktS0sQ7YC/vAMSshEnt9LXMSzorSRyNFThOIEw2QhsErJwpKt
      Jc/jdYA55wM4jkMURZNz9YMhFZ7nYRgGuq4ThuHkBlbTNHq9HsViEVVV8f1kZQ2CgGw2S6PR
      oFarUSgU6Pf75HI5fN8nl8sRBAG+75PP59E0jSiK8H1/6vCG1KEQkZ9ssbqV/G7m07sPRZQc
      pYzsifejADN4giaIw8Q1mxZSJINeM2EcwmbMFgN2Zl0m7YOkf81iul1ExCcLi5PsasEQ9CyK
      bipzmQBxHJ85WftpYDAYTJ2P+wLPH0zTnI8XaJyf+rwhiqJvZMjGC3yOuRrBm5ubSCm5dOkS
      UkrCMERVVQaDAfV6nTiOJ6HS4wuwWSNPnwZGzhEje59MYR27u0lp4Q3MTDWVjDj06By8S23t
      h/SbH2FmahRqL8+kj5SS7sG7FGqvpNZDiIh+8yNU1SCOPHSzSGnh9Zn0ALC7t/GG+yxs/O8z
      22Ej5xBvuEdp4U00fbqErNDvM2h9hpmp4rtNyktv4/RukykkdtFcJ4Bt20gp+fjjj8nn8+i6
      zmg0QkrJ7u4uruuSy+VYWVnh8PCQlZWV52oCWLklRvY+Vm6RYfs6qpb+/kPVMxhmEVWzkv/S
      GHxfgAJkCmvItG5DQFV1dKOAiH10s0gceTPrAeO+SR+U9yDs7m2Qgji0p54AullKwkoAIUJ8
      94iRfYDxNLxA5XKZt99+m4WFBZaXlwmCYHLGNk2TpaUllpaW6Ha7WJZ1ZjKmecN3DnEH9+ns
      /36mwQ8Qhw7uYAendw+3f29mOQASiTfYwRvszKCHx6D1KYZVxnebSXjFGdDZ/y8MqwzM/k4z
      uWVQVOJo+lgwd7BNGPRRVBPdKBAFQ8xsnSh0gTl5gU7LBxBCTPKCFUWZDPgHt8inmRjzIhQi
      QRJU9vhE9LnpIuKZ4qMApIwfikXK5/PzMYJ1XX9m4nvSwDCM5zaM4wWmw1wmwOMGfxzHqKo6
      1eoSRRG6/rnKj9oxvkpomvbQ902DMZXMV0EpI6VIzq9nkHOW1Xvc9uQvzkomfpY++bxfRWo9
      xv0oSdpKKSd2wVyN4A8//JA4jrl69SrD4XDCAvHqq69iWdbE+6PrOrlcjnw+T6vVQlGUL12I
      bW1tce7cOcrlMoeHh6ytrdFoNFhdXeXo6IgLFy7M3YAWQZvY20XLXSZ2NjEqM8Thj2WFA+Lh
      DRSzjl5IGcp8AiklsbuFDAcYlbdTto2J7dtI4YOM0TJrKJl0iTkPIh4dIMMeevHV1G1F0CH2
      dlCNCiLoouUvoxrTXVDKyCZy7qKoJlKEKKqBDAcoZh2YsxHs+z6O43D9+nW2t7e5ffs2i4uL
      7O3tcXx8zPXr11laWuL69evcvn0b13U5PDzkxo0b3LlzByEEw+GQzc3NSW7B/fv3qVQq/OlP
      f8IwDK5fv0673X4qF2+KUUNRM6hGCUWbMX5nAokUZ0v8SRLCjRnDD1SQMaq5iIxs4tFsqZlj
      aJlVZkkQAlDNpF9lPELLXULGKWjr1QzICC13EWIXUE/6NTk9zHUHOHfuHHEc4zgOqqqiqir9
      fp9qtcrx8TG1Wo2DgwMWFhZYWFjAMAwuXLiAYRjk83kMw6Df71OpVDBNEykl9Xqdvb09VldX
      KZfLhGFIr9cjjuPUx5ezQoYdZNRH+MfIqI+MXRQtN6M0FcWoomjpCcgm+kgxuw4yQMYOillH
      Neugno0cIB4dIqPhlwzRaSCCNjLqo2bWid0t9OK1VG1RdETQQtELoKgoRgVFS8JxXnCDPgYv
      aFG+2UhFi3IWBEHwXIZC+L6P553tAugFnm3MZQJIKZFS4jjOhPdTURSCIHjIzTj+3LNy+zvW
      Z1r4UcTQ96lks/RHHrVsLrXXQ0qJEwTkTZO261DN5tBm6A83CMgYBn4UYWga+gwywjhGSImu
      qgRxRDYlReMX9fHjiGo2/XFMSIkXhpiaxsAfUclkp+6TKI7peB7VbJae51HN5eiPPPIn426u
      h+StrS2klCwsLEwumTRNo9/vUyqVcF2XRqPBO++881wSUtmBz912kjlVtCyElCzm0xnDfhTx
      /v4ul2t13DDk2HF4dWk5lQwhJR8d7PPWyhq3jptcrNaopyQSkFJy/egQVVHQVBUvDPnuudmT
      Yv50sM9GpTrTBOh6LlvtNhnDwNR1ypnpw0NCIWgMemy2mgghWSoU2Ov3+PGFS8CcJ8BoNMJ1
      XXzfnzBC27Y9CYC7cuXKhC36ecQojChnMgRxzEK+QDjDsS9jGNRzeZaLRT7Y25tp9VcVhbVi
      YruslUozOV+Gvk/LcRBIZmK0/QJeXlziT4191krl1Pyg9Vyeg8GAi9Uam8dNWo7NSnG6MHVD
      05ASwiieLAKXa3U2W8fAnCfA5cuXgc9rEbiuy/nz57Ftm0KhwPHx8SRx5XncAfw4QkjJWqnE
      fr/Pa8vp/eZOEOBHEX1vRM40ealeTy1DCMHAHyVJZWGAoWrUc+l2gFImw0+vXKXtOizkCxyf
      Mcfa9n1Wi+WZLsKOHRs/ihj4I3RNS7WL2L6PqihcWVg4OQrlOLKHbJSTYLinGgvkOM4zy/ED
      TCbmC3wzMbdYoNOKaeRys/rI54MwDJ95HV/gbJiru+Xu3bvcvn17UhjjUZiGROtZR3/ksd1p
      450hm8yPIna6bTru7MW6pZQcDQe0nPTHFyEl+/0ufc/lYNA/kx6QGLL7/d5MIe5hHNNxHdwg
      YKfbSWVb+VHE/U6bURjStIcIKdnptrFPcsvnagMsLi5i2zY3b96kVqsxGo0m5LgbGxvs7SVc
      OpVKBdu2KRaLdDod6vX6xH54HlDOZOl7HtoZgtgsXaeUyRKdcTEoWBaNfo+FlN4ogKKV5dge
      4oUBF2rpbZEHkTNMDgd91krpLxbDOKY/8rAVH11VU/WrrqoEImnfH3nUc3mKmSxdL5nQT8Xh
      vri4iKZpZDKZSS7A4eHhxDu0sLDA8fHxhPLkaVdsTwspJWEcY57BmyWlpO04qY3XL2K31+V8
      9fSSoo/7/sagx0a1yoVanf1+70x6NPo91k8Mz7TIGDpIWCgUkCS7ybQQUlLJZAniCEPViIXg
      aDhgrZToMtcdIJfLYVkWlcrnHWGaJjs7O9TrdXq9HouLiwyHQ9544w0sy3ouqQljKdiopsvB
      fRTWyrN5TR5EOZPF9n0sPb1XrWhlkgusKJp58E5kZTI4QUDRSv8+HT/A1HXiWKAoUE2xKMRC
      MIoiatk8vZGHGwYULQs3TGoMzI0W5XnEi1igbzZ0XX9Bi/I4hGE4IeJ6gW8m5l4iybbtrzzA
      zLZt4jhmODydvu/g4OAr/c5HIe50Ce/eQwyHhLdunUmWFAL/w48QKWsVj9sGn36KHPmEt28T
      3rkzkw5x85hob4/wzh2C69dnkjFG1DggvDtbiaS42ST4+BPiVpvgxg1k8IQSSQ9ABgHBp58S
      HRwkMtptgo8/Ju52gTnbAL1e4gYbl1uVUuK6Lu+88w6NRoMwDCdkuVEUkc1m8TxvQp+Sz+cp
      FAocHh7iui7lchkhBL7vs7q6ipSSzc1Ncrkcw+FwEnQXhiH5fJ7BYMDm5ubk861Wi0wmw3A4
      ZHV1leFwyFtvvTXzuVutlBHNI5STZJ2zQPo+0nGQ0Qw7p6KglkrIOEJdWCBupJ/8MoqIDxpg
      WujnN4gPzpYQE927i1oqz5QWqdbrRHt7RHfvgGUhwxBlylzt8N4WMgyJ9xsolkXwyado1QrR
      1nYiO+2DnAWj0Yjd3V1qtRr9fh/XdSc1h7vdLsPhkIWFBSzLmuTVjjk+L126RKlU4s6dOxSL
      xQmP6MWLFykUChiGMckvHifKZDIZut0uwcmKIaVkY2OD1dXVSajz2MM0Ts4ZJ9T0eum9HqLf
      Jz48QnS7yc8z7nTa8hLxCW18KkiZfP/xMcEf30etpjdgZRiCYSD7faLt++gXzqfX4wGopTLS
      92EGj17w8ccoVga1UkXRdMRjdvovQqtUUAwTJZNBBj7GlSvJAlF9CqEQcRwThiGmaRKG4SQg
      bkyIq2naZHUYu0fHcUHjfx9XkAmCYPLvUsrJv0dR9JCcB5Puv1iPePzZB3UaZ5pBEqqRhhZF
      xjEIkZQhFwI0DeUsNZV9H0wztQwpZTLQFGVCR67M4JKVUk4qXc76HBNZcQxRhHJKVMAT2570
      J0EAJwvkVG3H/WgYyc5hWcjRCCWToVAozIcc17bt55Jjc8xU9wLfTNRqtfl4gaYJKPu6KU5m
      gaqqU7tBv1jlfpaz7kOUKnzOoTYbpcnD61oaGaetiWd5N7O+34f6UcokMnsGGQ9+94PPN1cj
      +MaNG4xGIy5fvoyqquzt7XH+/PmJ96ZYLD7T0aGnoXOwS7uxQ3lxhaPt26y99CpH9+/w2o//
      j6lljBybW3/4X1z+1jts/ekPrFx+he7hPuXFFVYuv5JKHxHHbL73W2pr5zneuUu+XOPim9NR
      tERhwPYnf0TTDUbOkIVzl7C7LUQc8dLbP0qlB8Ct935LvlxD1TQ6+/d5/X/8n1MP4M7BHu3G
      fcqLK+ze+BPrL79Oa2+by9/6AbnS6XZN53CPo61NLr31faxcgU/+1/9k+eJVmjt3Wdy4xLB9
      THUlqd88VyN4fX2d5eVl7t+/z/b2NqPRiDAM2dzcZG9v77kNgisvJR6oUj0p21NaWEFPmT5o
      ZXNk8kU6B7tceOO7uMM+YeDP1CdR4NNu7NA72icYebT2p6/NNdbbG/bpHTUYtA7RTYtgNH34
      wYNQFZVhu0muWMEdpnPpVk76dXHjMplCidrqBk6/+2SiMCkJ/RHByKNzsItnD9BNCytXIJMv
      0m8dTnSZ6wQYM62Nia5yuRytVmtCc/Ks5AKnRTJQjrjzwX+RyRUYtA8ZtI9wh9N7kjx7wLDT
      RNMNtj5+D920MDMZRJzea6KZJuXFFVRNp7pyjoVzF6du63sOUgqMTJZifREhYnzXRpshlALA
      sJJnGLabZPJFZIoJ3T3aZ9A6otPYYXHjEv3WEYVKjSh4/OWkqmqomk5rbxuA2uoGIo7RDZNs
      ocTi+ZcmY+2p0KI86iufpbP/GE8rFGJMSTg+/57JBhh7gVLIGHvgJrmQM8j4kh4nOKsdMS1p
      gpSCkW2TKRRP/c6HaFHGaYpfB8aXXs8bPM97Lr1XL/A5HP/03BN4wAgeG5+3bt3Ctm3efvvt
      r+xIMr4HGM/gWVe1eSOO46ncoMncTib4OH98/DONv/qLbdPKeJysWbxAX8yFTyvjUbn0Z5Ux
      zfN8sd1p/QqP8AL94Q9/4Fvf+hYfffTR5HY0iiIODg545ZVXuH37NlevXuXu3bv82Z/9GefO
      nZv6gW7dukU2myWbzU4ursY/4fMcYSEEKyuzE7HOG5GQ3OkGnCsZtN2YjK4gJCznNbQp33cQ
      S1pujASEhMWcRm8k0FRYyqdz1gkJ9/shppbooasKa8XpZEig6cZICaoCkUiebymvkdGnH7x7
      w4i8oeKFAnkiN6urLOSmp0V0QsmxG1HLaAwDQVZXGUWCWlYja5yuyzAQDHzBcl7HDQWdUYym
      KMQSCoaCHUpW8okeX+oVRVEwDIO7d+8ipUQIwUsvvUQ2m+XDDz/k9ddf5z//8z/J5/N0Op1U
      E0BRFC5cuMCtW7dQVZWjo6PJClsqlVhfX+fDDz8kk8k8VxOgYUdoJ/77jK4QS4mmKLiRpGhO
      N2h0VUECmqpgKcnLVxRmyiqTJNQoyX8wiqY3PP1IYPsCQ1PIGSqqIilb6U8CkQAnEJgnkyan
      q3S8mHp2Oip8AEtTQCZ6+LEklpJaViMUkscxA3mRxFAV7FCgkvRtshDAKJKYGgyCpE++ZATf
      uHFjko4YBAFLS0ssLCzw7rvvUq/X+eijj/jZz37G9evXuXbtGtUpEj/GR6CDgwM8z5vwACmK
      gq7rZDIZTNOc0KIYhsHGxhkrk38FmLZCjJSSYSAI4uT3rKEy9AW1nJa8xClgBwI7EBRMlYEv
      yBkKfpRMqHImJZmslBzZMZauIE9e/LQyxseHgS8YnQykSEgMTaGWnV6PthsTS3nCAZQsCH4s
      Wc5rU0+A/ijGCSUFU2HgC0qWhh0IlvIaunq6DD8SdDyBqkJGV/DC5DlCISf9WzAVVmuldKEQ
      43N8WuKq02hRnnW8KJH0fCMWElVVTuX0Sk2LMmuZo+e1zNC4Gv0LfHMxl1CI8ZY3pkMpFAqo
      qvrMs79N660STgs56qHmFhBuG7V6AdG+g1p7CUWb7hllHCLat1HyS0inhVJYQjpN1NI5FCsd
      o4OUEtG5h1pYRnod0EzU4vQ2lQwcEDGoOsQ+wmmh6BZqZfqQaDFogGag6FnGHjJhN9HqL00v
      w2kjR13U6kWk20XJ15HOMWrh8VypMhwhevdRKxdA1ZJ3UbmA6O+i1i4jOndRS0+hTvDh4SGZ
      TGbCEu37PqVSiW63i2mak+hL13WpVqsEQcBwOKRSqVAqlej3+7Tbba5du/ZMxQwpqk58vIlQ
      boOUiM4WSjZlDH4cAApykNTSlW4bRc8QH32Kfv6H6WQFNnLYIO7voS6+Qnz4ydQTQEpJ3PgQ
      NAPiCFQdbekacePDqSeAlJK4eR1Q0GqXkKMBwj5K2p9cqk0DRdWIW5soiobo76FqbyCOrj9x
      AojOPWTkJYO/u43obBHvf4C28X3iw49Rc3Xio8+ApxAKYVkWrusShiG2bdPv92m1WsRxPElq
      GVeCqdVq1Ot1XNfls88+o9FooGkarjtbXMrXBkVNBoyIUbIVpD9EMbKI3vQxOMRhsrotv4Ec
      9VEr54lbm2jnZqgzZuZBzyIDG3F8E33jnambSq+D9LqI1m2k20Y6TUR3G3X121PLUBQFtbSe
      7GSlsZdQQdpHyHj6dEZUFTQzWUz0DGq2CuaTd0O1ch5FMxHHNyF0UcvnUOtXEN1tEDHx8Sba
      etKvc90Bxj7+CxcuTCJAx6WPBoMBtVqNTqdDtVqdrPrHx8esr69TLBZZWlri3r17zxxfp/Q6
      KJkKanEZ4bQwrvyU+Phmqu1exgHoFtLroC6+AnGIYhaRzjFKcTWlQsllo3r+h4j2XcTwCC0z
      XUiHmqujXPu/kh0oV0e6bRARypTtP4eCfuFHiO4WUkRoK28gnWNIUfhbul0Uq4z0bRAhor8H
      IkT6AxTrdHZoGQfI0EXRsyjFVUR3C7V6PtlF6lcQzRuJLswpFmiaiMZxCdQvlkJ9mnhBi/LN
      hqZp80mICcNwKjfoOD/3WWGCC4KA0ehslRpf4NnGXG2A3d1ddnZ2JrEmrVZSTWU4HD70+/iM
      3+l0Jv+eFk/FTpASdbiXnDsH9xNPSlrEAWp/CwIbtb8N4QzPISWqfZAcXewDFK+TXgZAYKOM
      uqjDveS5ZoDidVCcIxS3hWo3ZpPh91EHOyjBMOmbNHZE6KL2t1FGPRS3CXGQ9MdJv871rHF8
      fEy9XmdzcxPLsmg0GnQ6HXK5HPv7+xwcHFAqldjZ2eG73/0u9+7do1ar0Wg0yFIRR8IAACAA
      SURBVGazdDodyuUylUqF3d1dVlZWiKKITqfD8vIyrVYLwzDI5XI0m00WFxcnDBSNRoNSqUQY
      hnz729MbdGmgjNooow6qiJCZKorfR2ZT8nIqGmgZNHsfkV9BdY8R5QvplRERRD6KiCD20+sh
      BarbBFVP9HBmo0XRBtuI3BJK2Eeas3nupGaieW2i3CIKCkocIKe1JYwcnJSaVe0DhGah2nuI
      4lPICLMsa+LejKKI5eVlNE1jNBpN6oWFYcji4iKmaVKpVMjn89TrdQaDwaSEkmVZE46hKIqo
      1Wq0220WFxdRVZWDgwMqlQq5XI5ut4vjOJw7d47hcPi1Zp0poYcSjUCEKMEQ1PQXh0poowQD
      RG4Rxe8nHqZZIGMU4YMIZiuUHSeTRwkGycDJpzTETyDMEkrkIfIrKP4A5Az9LwXCKqEN90BR
      kXqKy0kpIXJBhKCoyURW1EQX5kyLMhgMiKJoEgD3YLi167qYpomu6w9Vj9R1nXa7TblcnkwW
      YEKUdXh4SKlUmtwn5PN5RqMRhUIB3/cnv48NbM/zqNWmWw1nCoWIk45WggHSqkzt8/68fYAS
      OkgjhxK6SLOUfiJJmew+moEiJVLVQZ+BZFjKZCdBpvLePITIQxERUlFRpECaM4SWhC5K7CP1
      DEo0SmSoUx5epEwGv2YmR9IHYqTzxZSxQLMiDMPnMt/3RSzQNxuZTGY+XqBnPeThNIxGo1PL
      O73ANwNzNYJv3bqFlJKXXkouiKIoQlGUySXYOERaCDExbJ+HRHlveIBnH2DlFrB798iXL+AN
      9igvvYWZ8gIpChy6Rx9SXnydTuOPVFfexsotpJIhRUz36ENUzSQKXXQjT2XpzanbHt3/f1k4
      92P6zU/Q9AxhMCBXPEe+cnFqHfrHn6EZOeLQS2T4fcLAZnHjz1JnuDn9HQbtm2Tzy4T+gPLS
      m5iZ00NNQn9A9+hPLJ3/H0gpae39F7nSBu5gB8OqEAYDrGxS8WauE2BshL7//vuT29woioii
      iHv37k1igVZWVtjb25sYtc86MoUV3OEe2cIKw/YtrGyd9v5/U55y0D2Ifus6Ig4Z2UfEsU8U
      OlikmwDKic3guy3MTJUojStVUcnkFpPEqEwZEYfEoUd4YjROi0L1CoP2TUr1awzaNxm5LcLR
      bFVm8uXzOP37SCnw7AalhWuP/bxuFtFObJ6Rc4jvtihWr6DpOQqViwy7d1BPbJq5jq5CocB3
      vvMdFhYWWFlZQQhBsVhEVVVUVaVer7O4uDhxjT4vifSe3cDpbXG49X+jmwVGThMrt0QUTE/i
      Oka2uA6KQjDqYeUW8N309yAiDpFCIKXAd48RKfzmUkbYvXsMO7fpNP6IbuQws3V87/HJ5V+E
      3b2DO9jB7t7F7e+gKCq6mUfK9Jecvtcmk1tEiIhMfoU4evzlZOj3sLv3GHbvEkc+mpElDAaI
      2EeIKNmdTibIU6FFGWOcDzw++jyKQuNpJs/PGgqRJP/HqNN6Kr4AISIURUtchsr0KYRftYwx
      pIjPLkNKkGKyO80KIaKp+3XkHGNla6d+50O0KF8nHucFelbCHh6Fs1eIOUsW3FeRQfcsZuF9
      Fe97uudS9BJBGD32O+cyAYQQp8YCPUhf/iQ8yCABXz+h7pjSfa6QJxwKE4LdWS/CxtQmCQnI
      U6ehGe/us+oxziNIkU9wmg4SyThRcq5G8CeffDJhmRgOh1SrVT799FNeeeUVLMuaeH8Mw5jQ
      p3S73SS0V1Xp9XoUCgU0TeP+/fusra1RKpVoNpusrKxweHjI8vLyJIR63ga0DI6R7m2U7EXk
      aA8ldxXFSFctUgoP6W2DmoG4D8YiSmZ65g04YZbz7iJFgKLlkbGNUngjpYwIvC1kNEQxKsiw
      g1pKm5sgkaNd5Ggf9DLIELXwVuoBLGWM7P4WpfQ9pHcXtTh9KIuMbKR3B8VYQPoNlOxlpL8P
      2UvAnCeA7/sEQcCNGzeIoojj42NqtRr7+/sUi0WazSavvfYa//3f/02pVOLKlSvs7+8zHA4x
      TZNarYZt2xwdHVGtVhFCTEqsfvzxxywvL3Pjxg0URWF1dXX+HiRjAfQmirWGDLso+gylRdUM
      xEOQAUr2Cviz1DZLBphiLsI4HCKtBEVHqhZKbhmEj6LNEsejJBNYhEgZQNDhy3RbT4a0P036
      Rc2k1kPR80g1k3yvDJLBLwIIknyAuU6A1dVVoijCdd1JFZfhcEi5XKbValEulyeDe2FhAV3X
      OX/+PIeHh+RyuUmmWKlUmlSXqVQqHB4esrS0RLlcJooi+v0+cRzPP68gHqJYq8nKa1Rn26rj
      IeilZOV2b6de/QGQUTIBtSKIEWgzJvZLCVoRwh7MogdA2ILsBZSghUSZKbZJyV2F0R7ENjLq
      QeyiaNMVLpFSJp81l5Npp2aQfgPU5IJzrrFADyo1Db5Y0OA0T9Gj/v9XceZ9KqEQDxSBSGwA
      SLtiPizu2Sg88qzoAUwKkOQLhfmFQjyP4RC+7z+XlepfYHrMZQKMz+Kj0SihD8xkJuVLH5wY
      aeiv54HxBd2TIKQkiCIUBUZhRNYwcMKASiabihx3FIZkDOPzn1FIRjdmWjUjIYiFwI8iDE0j
      m2IB8sIQU9OwAx9D1YiFwNJ1zBRHSjcIECfMcOJkJ4uFoGhlpn6ecb+auk4QRWiqiu37lLPZ
      E8a5R0NKySgKyRomYRzjBgGWrjOKQvKmhRsGWFryLHMdaTdu3ODGjRscHh5y69Ytms0mx8fH
      bG5ucnR0xNbWFr/73e+eO0rytmPzp8Yew5HP+7s7tBybTxoN2q4ztYxRFPJf2/cYRRG/37qH
      kJLf3r2DmOGEKqXks4MGnx40aDk27+1Mz04RC8F/bd3FjyJats2797f49LDBnxr7qXRoOTbv
      3t+m7Ti8e38L2w/4/dY90jxN23H4aH+PzslPJ/D59KBB23l8vzpBwLv3twEI4phbzSP+n9ub
      NPp97raO2e122TxuAk/BC+S6LkEQTEqajtkh4jjm6tWrz1RS/LRYyBc4GAySVVYBSzdOdrPp
      ZWQNk8VCkaxhsFQsoqkq6+UZvEgkA2C/38PUdBbyhVQEu+Pv1VQVLwx55/xFbjaPaDl2Kh36
      nse15WW6rssrSysULIvzlepjV+4vYiGf52DQZ6FQoDHokzXMk3uNx3dswbKonYTS5AwDVVH4
      3y5d5sO9XWr5PLEQvL66Bsx5AoyjQG3bnniDLly4gG3b5PN5ms3mZGI8TzZD0x7ihQGHwwHl
      TBYn8ClYFrkUz2D7Pl4YsNfrJrIGA5zAp+XYLBdPpwB5FAqWxc9efZ3D4YCWbVPPT08jE4kY
      2/dp2kMq2RxZ0yRnmrxZWkulQyQEThCcHEF8DE3llaXHE1p9EeN+fbBP8qZF9gn11/ojDzcI
      +eSgweX6AmvlCoamUcpmubq4RMdxME8uVOfiBTrtKwaDAaVSupc7T7ygRXm+MbZBToOqqvPx
      AgVB8MiQAsMw8DxvHirMBN/3n2n9XuDsmKsRvL29zb179+h2u6d+Joqi5zJ9EsAJkqNDGMc0
      hv2ZwrmllBwM+7hhwF6/xyhK7xCQUtIbecRCcOzYdLzp8wGklHQ9FyElB8MBA39E13PpppAB
      0PFcWo6NFwZ4YUgQRdhPqO54GpwgoGkPcYOA/UGf+AnjY/wMY/RHHmEcsz/on/zsEZ4syHO1
      Aer1OrZts7m5Sa1Ww/d9CoUC3W6X9fV1Go2EN6ZcLuM4DsVikW63S7Va5cKFGahB5oxDe4iu
      anS7LZYLJfqjEZWU9OpNx2YURVQVBU1V6Xgua8X0x7Ce52JpOm3XYaM8fTySJBm8Gd1g4I8o
      Wxl2Bl02UhrkOcNgt9/D0DTcMKBoZeh6LgUzfYrpoT3AUDUsXU8mVBQ+Vk4Qx3Q9l2o2RyRi
      7vc65A2LlWKRW60mC/k8+4OnUCd4jHq9jqqq6Lo+CVloNptEUYSmaSwsLNBut4miiFKp9EyH
      TD+I1WIJNwxQTkqcznqBW7YyHNpD8id+7LRQFIX8yQDZKFdopChQrSoKecNEUxXWS2V2Bz3y
      pplqFwE4HA7YKFcmehRMi9NLVTweq8USThigKgq5KfrE0nVMTUdIScd1URQFNwpOSizlEEJO
      olTmugNks1lM03zI8LUsi/v371Ov1+l2uywtLTEcDrl69SqmaT5XmWGRECzm8lQyWZquzWoh
      vYG/lC/QGA5Yyhdouw7L+fShGELKxPsSBkRCsFyYXkYsBLGU2L7PKIrYKFcYRVHqWmUZw6A/
      Gp20U+h4yUAUUqCmjAca96tycqlWsh5/O++d3CPtD/osF4pUsjlU4MixWcoXOHKGrJeSHW0u
      XqAgCJ7Lc/0LWpRvNrLZ7Hy8QM9riaQXsUDffMydGzSbzaJp2ldae8u2bbLZLI7jnHqvcHBw
      wOrqbPR+T0LU6RL3uqiWRdzroS8uEu43MC9dRKtMZzwK3yfYvI1x4Tzh/ftotRrRcYvMW2+i
      pIyNknGMf2sTFAVFU0FRsa5ema5tFOHfvo1aKBB3e2RevUZw/z5qPo+Rov+E7xNsbaHm86iW
      lUS5hiFGirK6cbdL1OmiZizibg99dYVwb5/Mq9dQHrOoxv0+wc4u5oULgCTY2sJYWZm8k3C/
      gb6YMG3MdQJ0Oh0qlQpHR0eTwDfHcfjBD37A/v7+JEkmn88ThiG5XA7HcSblk4rFIsVicVJu
      tVQqEccxo9GItbXkpvLWrVvk83n6/f6EEtH3fXK5HPl8nhs3buD7Puvr67TbbSzLwrZtlpeX
      cRyHt956K3XwmVYqEh0cEHa6yCBAX1tD0TXUFGWclJNbY61UIrIyqKUSSnc2GhFF0zBWV4h7
      fbRKmWBnZ/rGmoaMY0R/gJqxEJ5HcPce5kuXpxYhpcS/cQMUBf3CBcLdPczLl/BvbWKkSCtQ
      i0Vk44Cw20WGAXG3g/Xaa0THxxjr66e3y+WI2y3k2ioyCIkODoiOj8n/2Z8RbG0jRh6xnYR2
      zNUL5Hkeu7u71Ot12u02/X4fy7ISv223S7/fZ2FhAcMwJgRZpVIJz/O4fPkyxWKRmzdvks1m
      J5GaFy9eJJ/Pk8lkJl4kIQT1eh3Lsmg2mxM+0XF1mrW1NTzPYzAYTIh6NU2j3W4ThiH9fp9+
      f3rPibBtouNjzPMbSZkkXQeUyaCeBjIIiNpt4uEQ4TqomUzydwo9HkSws4txbh33D++hL6cI
      QYgitHweYQ+J2h3iwQCtXiPupdBDShRdJ2oeE7fbRO0Wca9H1GohU3i1HurXOEYtlgh391Ce
      cCwVjoO+tEzUOCButzEvXUZRNfxbt0ABrVZDDOZIjjvGmGUhk8ng+z6maRKGIdlsFs/z0HV9
      kvQehiGapuH7PtlsdpIgMo4Tcl2XTCaDqqpIKSeEukEQoOv6JIx5HHg3zkCDz0MzRqMRhmFM
      dAqCgFwuN7m1dhxnqlAIGQTIMARNAyGSFyQlSoqysjKOkaNRsrUrCqgq0vNQDOOx2/2p8qIo
      Wc09D1QVdUpbRkqJGA5RMxlkGIGePBOqmhxlUuogoyhpr2kQxSi5FCHij+hX4biohfxjZcgo
      QrguwvPQazXEaISayyFcN/npOKi5HKphzIcc13Xd58aX/yAcx3mmqlG+wFeLcrk8Hy/QNAW2
      n6WUuTHGl3WnQZ4Uo/vi74/6+0l4VKrnLPhiP07br4/73CwyTltXp3muR/XrF38+qe2jPveg
      TuP/N1cjeHNzE9/3uXTpEqqqcnh4yOrqKq7rEscxhUJhUjvgWUencR+n12HjtbeJo5DP/vPf
      WH3pVQ7v3WT54st0D3fZeO075ErTeYH6zQaHd29SXFhm2D5i9cpr7N38E+df/w7F2tJUMuIo
      YvezD1B1nSj0kUJSXT3HoHXExTe//9i2u9c/pFhbpFBfYvf6B8RhhGboyDihWLRyBTZee/vU
      9lJKdq9/QBQEXPr2D9m98SGGmUEIgTfsUags0D9u8PI7P3msV6vT2MHptdl47W16zQa9wz0K
      tUWGnWOyhTKD1iEbr36b7CPCQ7qHexxt3aK+fpHuwS4rV15FVXX2bn7EwrlLtBv3qa9f5Pj+
      HVYuJ/yiczWCV1dXWVhYYHt7m+3tbQaDAb7vc/36dRqNxnN1WVZZXicMEuN69/qHqKpKdXUD
      K5untn4BEcfoKYzg0B8R+B7HO3cIRx6tnXuJNyVFVpmm6yiaiohjirUlykurHN+/i+8+OZml
      unKOYORimBa5UpWlCy+RL9eprm7gDrq4wyd7pHLlGtrJM7d27tFvHZLNFxkNBxRqiwnJ1xN2
      gMryGqGf9GuxtoQQMcf37+ANerj9Dk6vjYgffZwuVBeQQlCsLyOlwDAz5Cs1zGweFAVv2Mcb
      9AgDn/Z+kiU31wkwPlKMOT9zuRztdptqtYqmac9MLvA06B7uMWw1ObhzndLiCoqq0m8eUFs7
      T2PzE3TTQojpzatCtU4mX+DcK29h5YuUl1axsvnJYJgGoT9CxDFSCpxem+rKBpXltYTb8wno
      NHboHu7RaewwsgeUFlfwhj1KiyuY2Tz6E5JQAHZvfISZydHc3qS8uIoUAqffQTNNdj77I1a+
      mJB2PQbdw32G7aRf+80Gg+MjcifBfFJK8pU68Sn2ZGPzEwwrw9HWzSQi9mgfb9hD03VypQrF
      6gKGlSFXqlBd3QCeIVqUZ+nsP8aTQiGklHjD/tTHnMdhfC8yPr+qqooUIrnMStE3QsQoMxLZ
      +q6Dbppo+sM7Vxo9xn2SLZYfokNMaw99sV+FEKiqOvk5Dbxhn0yh+BC95IPEC/l8/nMvkOM4
      X1syuhDiuQloexCe532lN9Yv8GxhYWHhy27QMefmzs4O2WyW1dVVDg4OWF5eptlsEgQBGxsb
      k1l48+ZNAK5d+7xogZQS13W/5EJ8Fj09j8MsKZHjVfxJ6XjTylBQZiKYS7r6c0LZVLvICXHU
      FzHLezvrO5/W+/NFPNj/iQ4KkoffySPp0f/1X/+VH/3oR/zqV7/iL//yLzk4OOB3v/sd77zz
      Du+99x7nzp2j3W6zt7fHz3/+c37/+9/z4x//mPfffx/HcRgOh6yvr/Nv//Zv/O3f/u1Dk+DG
      jRtkMhkKhcIkD2D8UwiBbdsUCgWEEKysrMzUYU8TkZDcOHJZK5t4oWClaKKr6V58GAu2OyPO
      VSz2+wFFS2O5mO4iTAJNOyAWEktXcYKY89XpLsJiITm2Q/xYYOkqfiRAgq4prJfTJ7O03Yie
      F2FqChlDZakw/bPYfkzHDVkrW9w4clkuGoSxZPkJ/eqFMU07pJLRyZkq212fWlbHCwU5U6Vp
      h5yvJs/ypQmwtrbGf/zHf/Daa6/RbDZxHIcrV65w584drl69iud5fPDBB2QymYeONY1Gg0aj
      wcbGBoPBgGvXrj3SpXn58mWuX78+cYOOjxiVSoVz587x/vvvY1nWczkBdns+uqrQ9yJMXcUL
      YoqZdJ5mQ1MpWloqSpUvIowFvVESwz/0Y9QUk1BVkom8kDfoeRGVrE4QSaIZPXQKUM3qaKpC
      2w1ZzE+/kudNFdtXJv1q6SqjMMKPBLp5+t2SqanEQqKqStKfpkrGUBn4MV4oKFkaw9EpKZHv
      vPMOb775JpZloaoqvu9zcHDAtWvXODo64o033kDXdba2tlAUhW9961v4vs+FCxe4ePEinuex
      trZGu91mNBo9dIYuFovcvXt3QoW+traGZVlYloVpmuzv77OysvLcVmY8X7HojSJMTWU4ijD0
      9F6tIBKMIkkmlmQNFWsGGYaqcLmWwfZjipbOwJ/+Fj4SklhKgkgQxnLyb6Y2m4fODQVZIxmQ
      2ZTP4gRJX6yXTIZBjALoqvLEXdULBVlDww1iNAVGkSQnJBk9WVyGfkzGSHSZixfoeTWCn3Xa
      lhc4G3Rdn1+JpLlXWvkKEATBGUskvcCzjrmGQuzs7CCEYHl5GU3TnttMsdMg+3vgdSBXh2ED
      lt5AMdK5UWXgwNGnUFoF5xisMkp9umSWh+Q4LQgdGPXAyKHUr07XTkRw9AmYxaRtaQ3sJlhF
      lNpL6fWIA2htgp4B+wjO/2jqsk9yeAD9HSisgn0ApQ0Y7sPS6yjG6SEz0utC5w4svJK4w1o3
      YflN6O1AYQnat6H+MvAUuEHL5TL7+/uEYYiqqpO/xyHR4ySYcfnU4XBIPp8nn8/T6XTwPI+X
      X36ZajVd6aG5YNhI3I5OE9nbQalehpQTAN0CM59Ud8zWQUv/iqSIob0Jmo4cHKCYeZhyAqCo
      kF9Ctm4lfx8eQ+SjWCVIOwGkhIOPQEQoS68j7aN07tBcHdneRMmUkb1tFN1C9vdQalfgMRMA
      I598V/n8yTtRYf995KiD4g+Svj36GJhzKITv+3Q6HXRdJ5vNcnR0xMHBAcPhEEVRJjuCZVlo
      msb6+jr5fB5VVdne3kbTNOI4fnbticoFiEPk8DBZcYN0hLIA2E2kfQS5JRjuoxRPz3w6FdEI
      RJQM/kwZ0pRrjQJk448oK99GyS+hGDmUbA1mKG8qpQAZIwf7yN59qGyQiium8T5KbgGanyY6
      yBilch5GT0jOCV2U6iXo70LtCkQ+yCjpBzMPqgGZZAGdayiEc0JrPU4+GSfFxHFMs9mcXLYt
      LS1hWRa6rtPv9ycpktlsll6vR7FYnAuDdFpWCBk4ELpglcDrQmEpdZVHGY2SF2yVkhACfcak
      fCmT40dgg2aiWNM9hxQxuK3kyBK6kFsAfwCahWJNT7L7kMzoxI7SzHQhEf4AwhHoJkRBspsG
      NhSWH9uvMvSS/hfhif7D5OgjRbIruceQX6ZQLM0nIeZ5pTt84QX6ZsOyrPl4gZ43vv8xDMP4
      xhnqL/Aw5joyb968SSaTYW1tDVVV2dra4vz58ziOQ7vd5vz589i2jeu6rK6ucv/+fUzTpFKp
      kMvlJvm949zgTCZJuBizPjiOQzabxfd9er0etVptcukWRdEk0f5rD3Czj8DvQ/lCYtTOgjhI
      PCBGHoop6VykhNYtqF6CwS5oFpQ30uvgHEEcJUcJKaA6PTPElzBsJDJKM1SbdNvgNBPvmtuC
      4jpkHhOjFXpJ3y28AoED/fuJVyt0obiWyMjWgDlPgMFggGmaXL9+nUKhQLvdxvd9LMui1+sx
      GAwmZLlLS0uTkqj7+/s4jjMZ9CsrK3zwwQdsbGyg6zqj0WiSUN/pdCiXy4xGI4IgmHxPs9lE
      VVU8z+Mv/uIvvt4Hjbyks/0B6IuzyVCNxGjTZtyBspVkEmlmMoDTIg6Sc7RqJPZIdEaaePso
      WQykSF8qNVMG+xAytRP76An2jJ75vN+cZuLybLyftOvvJM9mJl6kuXqBxskwqqoSRRFLS0sP
      UZyYpomu6+TzeeI4plwuU61WCYIAwzC4evUqiqIQxzGZTIZ6vT65ZTYMgyAI/r/2zvRHjiQ9
      77/Io7Kqsq6urj7Z7Olucjk73F1SK62kXa1WggUbFgTYkG3ok+G/z4YFfTEM2YC9MHRgZWAP
      zc5whpxpzpB9X3VXVmVWZkaEP2RXDmeGR2WRU2SP+XxpsrvircjIeON4j+dlaWkpVRyAg4MD
      pJTs7Ozguu58YowKi8kLyM12aQQSBRqeZ7PgpNCJD2Hcg7EHUyTEPBW2m0z8zufJLvIycCrJ
      zvSChJinorWbTGoVJeP6IgWKR8kq750lF+eLB8kOKIxk5c+VEssQc6ZFeR6UUmmm2FdDaKWU
      aWL95G+T8Njz83OWlpbS482TSROTz05Ct7NWoZy5Qoy+rGM1Q1HoVw6tADFb0e5X2o/XMCah
      94S/QCRj8YQ5VwgxHytQFEVX0gr0lhz32418Pj8fK5BS6krGAkkpM/c7a+LGN4VXkXz0JiUw
      aa0QwkAricjolNNKfnnneeIeMtdL8AcfJO7nd955Bylleuk9OTlhc3OT8XicensPDg64c+fO
      laoWGQxPGXZ2cRe+Q/f019RWf4+8O9udQ8mQs0f/k8VrPyVXWMzUVmvFxd7/pr7+E9pH/0Sp
      fotidStbB7Smf/EBWkvGowvKi9+lWJm9So/XeUjv/H3Wb/37zM5Bf3DAoPUA0yqgVESl8T2c
      4nRUMePROYP2J1SX7tI6/HtK9e8y6n2Oc/le5npIneQcP3z4kE6nQ6lU4uzsjEqlwv379/n8
      8885OTkhjuO5eXtfJZziCqbtkndXsfM1nGK2sqBPQmtNLl8nGJ5kbiuEQbG6jdaKXLGBPzjM
      LCMKB/iDQ6Kgg1No4A+yFcr+KoqVTYqVzcyTH8C0XQwzj2mXiMMBWcIpRv19hDBpHf4dMg6I
      xl3icJgm7M91hq2trbG+vs7JyQnlcpm9vT2WlpZoNps0Gg0Mw0h5P5/kAb0qGA9PCf0m0bhH
      3l17ueOHihCGjWllJwrTShJ4JykFiWlnp3e0bJf6tT8iGByhVIj1vOCzKRB4x1Qa35+p7bD7
      OVauhGHa5AqNTEpUWrhF7/x9yvXbIARaS1QxwLx8ntdCi3JV8PYS/O2G67rzqxDzhlhbMyEM
      w7cVYr7lmIsCTOz7w+EwYfdyv6C39n0/zT9+EUajUZpoPwmLFkJMRb47a7+zsNVprUAFIGx0
      7CHs2kvRgei4jzDyiBmcUFr6YOTQ8QAwMOxsQX1ffP+lR9XIIcQMIdEqAhIHmNYxhpXdOahV
      mIyn6aLl8HJcM7wX6V++kx7CqibPddmPud4BHj58iNaapaUlBoMBCwsL7O7ucvPmTYrFIr7v
      MxwOkVLiui6Li4tpEr1pmil/fxRF7O/vc+PGDVzX5eDggPX1dY6OjlhbW6PVanHr1q1vTDGe
      BR31kP4+Qlhg2BhoRK4+m6zYIx58hF25A2Tk5deKuP8RZvm7oCLk6BHGwh9k7EBE3P8Qq3oX
      6e1iujcRGZUIQI1P0XIMykerGFG9O0OI+BA5eoyRX0cFR5jF7anHVWtF1PoFRmEdFfUwnCWE
      sFBBYlyYe4WYVqvFwcEBw+GQ09PTlEGi1+txeHjI1tYW+/v7dDqdNE7o8kWTCwAAGtNJREFU
      8PCQbjchZ/U8j9PTU1ZXVzEMg6OjI3Z2dtjd3WV1dZXj4+NUieYNYdcQhoORX0UFJ5er34xQ
      Iwyrihw9zt4PYWDkV5J6xTLAdKfMBvuSEBOzuI30djGclZk9yYazetnWRJgFEtaibNBqjLDK
      GOmkn16GGj1Go1FhC8NKFFiNzzFLryEl8jvfSV6E53mEYUihUKDf79NoNGg2m2xsbLC/v887
      77xDqVTCcRxWVlbSii+T2l8rKyvkcjlM02Rzc5O9vT1u3bpFPp9PY4Feh/NGR220CkErDGcV
      w2nMLEvklmDcSiZQ1n5ohY4HKAyE6SDsGbhLtUbHA4z8OjrqJRlV1gw1i4NTUCEit4CWo5mO
      UagQLidxciSc3iJlujsIZxnUGBWcJccoY4SO51gi6SpegOElYoHe4krAMIz5WIHCMLySZtDx
      eIzvv2QY8Fu80ZjrHeDk5ITDw8N0RxgMBl/6u9b6SvPwjOOYk34PP4q4f372UgGAkZTcOz2h
      H0xfH2ACrTVHvS6RlJwO+gTx9HcRrTUH3Q5SKR42L+gFPo87bZrD6Qt1PImOP6Ln+5wNBnx6
      cT7TaaA9GvHJxTnjOObjs1PCDPXmgjjio7NTxnHMg/Mz+kHAR2en+JdRCXO9A3Q6HaSUhGGI
      53ksLi7SbrfpdrvUajWklBweHvKTn/zkSnmAJxjHMRdDj4vhkJVSmTPPY23GnGJDCAwhOB30
      qWT0RWigORxSzRfojEbYpknemm48tdaceQOKuSSB/dOLC0qOQ8/3acxQMDCWkrbvc71a47N2
      k++QPUHocafNYBxw4XnUCoVMxBIPm00Kts3/2v2ElVKZo34PyzC4f34KvIZYoOFwSLPZRAiB
      53mcn58DiYXo+vXrrK2tXbkYoAncXC61T4QynpkeHUBqxaLrMpqhZoMASo6D1JqSk0dmqFQj
      hMDNOWhNSogrlZrBdpMg+X7FbuuCW43pAtiehpVSmVgpyk6e0/7gxQ0ucWtpiV4QULBsVstl
      IilRWmNdRpTO3QpkGAaj0YjhcEiv1+O9996j0+lQq9XodrtUq9WUMv2qoRv4FCyba9UqJ4MB
      G9XZK8donWz932lktyRpkpV8GI6JlYQ4g9lQayzDQCpF3rLYWFml6/u4M5IDtEZD8pZFxczT
      C3zqxWKWBRyAm4sNmkOPn25t86jdZmdx+uhYqTQVx+Hu2jqft1vcWGxw2Ovy3nISqDi3hJin
      XYKfzPR6EzGpV/AW304UCoX5WIFs276aZ/rLCvJv8e3F3OsER1FErVbj2rWnU/55nkc+n7+S
      R6AJeoHPhTdgtVyl9BK1Dk76PcpOfmYZWmv2u21ypslaxkJ+sVLsd1pU8gWCKCJWkq169uPY
      2aBPzjSJlcIbj9mqL2Z2UnZGQy6GHhUnzygK2azVsaY8OXjjMWeDHotuidZoSMVJjmIrpcQ4
      MddZtrq6iud5PHr0KK0+U6vVODs7Y3t7m88++4xyuUyj0eDg4ICFhQUGgwGLi4vcvn17nl19
      KVTzBdrDIYWX2PVCGXPhDciZ5uwKAHRGIxzLyqwAkYwZxzHn3oDteoPWFLWGn4Z60eXc61Nx
      Chx022yRLbsNYKHo0h6N8KOISEo6/oil0nRe6V7gI4Sg5/vkTJPBZdnZk0HCL/paaAuWlpZw
      XZfl5WXK5TKmadLtdjFNE9d1sW2b8XicFum7artBLGUSpfoSdY/DOMY2TYZhOLMMrTU505wp
      LMSxbIq5HK6d43TQY/UpldmnQccf0fFHBHGEaZioGa6cozCkYNssl8tIpShmuJA33BKhlMRK
      0hmNWL5UnMmiMldalAktyZMQQhCGIZZlpRlgExa3J8ORX0cR7VlDIV5VMvmrqLAYK4UxgzJq
      rQmlJGeaaJjZpBsrlaYfasCewegxqVo5eR47g1IrrYmkxDZNpFKYQhApRS4pzP6WHPd5eJsR
      9u3G3MhxZ6EXmQXPoySZha4kjmPiDG73J7/nZehRXpUMSJximmy7yNN26Vnx5C42y/N8tc20
      MtLPaZ0+/9PW+rkerg8ODiiVSik14oTwtlKpEMdxWmDbtm2klNi2zWAwoFar0ev10hDpKIpS
      6vJ+v08YhjiOgxACy7LI5XKMx2MsyyKKIvL5POfn52xsbNButzEMg1KpRK/XY2FhIQ3F6PV6
      LC5mt1JMIFtt5OkJwi2hu12snW2MjKEQOggIP/gA+84donv3MNfWsa6tZ5MhJdHuLmiNWa8j
      my1y35vOiKClJPzVr7Fv3yZ6+BCjVkV1uljra5gz0ErGjx+j2h3s2+8Rvf9bnJ/8eOq2stVC
      np4hCnmQClFyUd0e9o0dxHPuAWo4InrwAOf3fhd5cUF8fIy1tkZ8cIC1s0O8t4+9sw3MWQGC
      IMBxnDT8YTgcEoYhP/7xj9OySb7vY9s2Wmssy6JYLPLhhx9SrVbpdDoopWg2m2itcRyHpaUl
      Wq0WN27cSEsoWZaV2vC11nieR61Ww/M8ut0uw+GQUqlEt9tlf3+fKIpYWVlhNBqxmMHL+FUY
      9QXUxTlEIbLTwdJb2YU4Dkalgmq2sG/dIj46gowKgGEgbBth28R7ezBlHNCkrdFoJCmMQYA8
      DTCKRWSnO5MCGK6LDgKij++DZaKVQkx5HzHqddRFE2HZyNYZtFtg2ShviFl/tgIYxQLCTXIG
      tFKoVptY6+R5Dg7Rvo9stZLPZn6il4BSiv39fVZWVgiCgGKxyNraWloLLAxD6vU6ruuitcY0
      zXTlbzQaabjE1tYWtVqNRqNBvV5PJ/ck+d40Ter1OsVikSAIcF03TaCp1+spBYthGBSLRYrF
      Yqo0cRzTbrdpt9vZn6/dRjabaCkx63X0DMc+7fvIZhNhW0T3H2DMcgeJY+ThEVg25sZGtmwu
      qVAXF6heD3NxEXNlBZF3ZibYjR4+ROTzWJuX5LQZrpyq1UI2LxImN8vEWGyAafKijDDleaiL
      JvHeHno4xFxZwSi6GPVFjIWFL+0ec6VFmViBvnoefBoh7pMkuE9agJ51Pn7y91+V86J7wYSY
      96vf9TKX4Cwr3XNliNdHbDv5/skEeZ0Uien7zTCuajhEFIug9ZfaaKVACEql0vwuwVkvk09i
      nhakJ79rUljjJYS9gh69xdcw7bg6Dkx24We0mYsCTKhMngd56Tx6Hfb+Z0FrPXWNsHTHUgrj
      soqNgLmv3rP6Dp5sp6T88op5ufrOasF5FVYtGceYUzhEJ+OuLt/D0/ox2fFhzpfge/fuMRqN
      WF9fx7IsHj16xLvvvsvFxQX5fJ56vX4l7e7No8ecfv4JuXyRQfuC937yL/jl3/41P/63/xGn
      mC2JZNBu8ukv/47Fa1scfXqP7//Jn1NtTMcxqqTkl//jr/n+n/xrDj5+n2DoUa43aJ8c8vt/
      8VfPbbv7q3+gXF+ivr7J/V/8nNJCAyVjEAZe+wLHLfG9n05fWeez9/8vuXyRXL7A4af3uPE7
      f8jHv/g5f/SX/2lqGed7D/n0l/9A4/o2WikaG1s8/PUvuP3Tf0l16esX8u75CY8//BU7d/+A
      h//8T2z/4EcUSlXe/z//nd/5s3/D+z//b/zwX/0ln/3zL8i7ycI21+V2c3OTjY0N+v0+nU6H
      hYWFNDHm9PR0nl15pVhc3yRXcEGAYVrs/voXWDkH3+tnllVaWMSt1lndfpel6zt0z6YnpTVM
      k9XtdzEtm2Klxo0f/pjSwiLbd37/hW3Xbt5Ga4iCgMb1HQbtC5qHjxl22wjDQGSM4l/b+S5a
      Kfbu/ZooGLH7q38ErYnD6VNeG9e3WVzfJPRHxOGYQrlKZWmFyjMWhNryGsVKjWKlhmXnEMIg
      XypTX90g75aor13HzjkoKVnZShhK5roD5HI5isUinudhmiamaabRn4VC4UqGTAO0Tw4J/RGV
      xWW00mz/4Ef0mme41ezV7LWS1FbW0Voh45hyffoUQiljRv0OnZNDrFye0kIDr9NieXPzhW1b
      R3uMeh2EIRh2W2y8+wOqS2t0zo7oN0/JF7PtzM2jxwTDAb/35/+Bi/3PWXrnBud7n2Ha08fx
      eJ0WG+/dJQp8zh5/ChpWt2898xjVPT8hDEac739GLl+gdbKPlDFhMOLs8W7yc+8hQhiMR0mO
      8xtTIulNxP9vtCgyjjBM640oiPEqEEchpmU/83mEEF9YgYbDYcrf/8o7ckVjgXzfv9IsFW/x
      YqQK4F5m/D948IDPPvuMP/7jPyYMQ46Pj7l79+5LfcnEDzCp37u8vHwlVhmt9VQpkaHU+JEi
      bxkEsaLsGIxjTd6a3nKitca/bNMbK8o5g1BqChlkAPiRwrEEXqhxTEGsNJYBjjWl7Vxr+mNF
      zhRoDaYBk5z6oj39lXEUKZQGQ1ySOIjEEunmppcRSk0QK1zbYBAqHFMwlppSzsAyvj4m41jj
      x4qqYxDEmsJlf4M4iQL1QkUpZ+BFipL9jBJJ9+7d40c/+hF/8zd/AySr4P3799NwZc/z+NnP
      fsa777479YNM8Pnnn/POO++wv79PHMdpOSQpZRq/M/Hm7uy8RFHmOUNrzTDSdMcxC3mDWMF+
      L+Zm3caccu7GGlojyWopeSW9QOFFiusVa+rrp9aali9pFE3avsQ2wLycKKul6SaeAHKmoONL
      IgVLRZOLkWSpmC2MWQBtX37t+Yv29ArdGkkipekGiRLYuWRxKFjwNH0WArwwmey9sWTDNlBa
      c9iPWStZRErjhQnDRTdI/ANfE6O15re//S137tyhXq+zublJqVTi+PgYIQTLy8szTf6J7Hw+
      z3g8RmvN4eEhQRCkR6Tt7W1OTk4IZiCDep3wY03BFqy6JoOx4sSLMUSygk0L2xA4VuJ1DSJN
      vWBQtLLtkkIIXNtAa7ANQIgvVuAMMgZjRb1o4piCti+xjC8mzLTojxVLRZNizsCPNWXHYBhl
      vG6KRBkjlUR0jmON1uA8Y1wEicIbl+20TpQHIJAaQwjk5a6Uere/egkej8f0+30WFxfpdrup
      E0splWZpZU0UnxyBer0e7XabQqGQ1vKVUlIul8nlchwfH1MsFpFSPjNneJ6YNhSiF0hCqXEs
      g1AqFgsmY5kcQaZd7UKp6fgSxxKEUuPaRrplT3tsUFrTHEmcy0mTtwwipbENQSnD0WMUKQqW
      oBMkR6FYaQwBFWf6XaA5ii/JvZJJmYTBQDU/vYxhqPBjhZsz8MaKWj7JKHvWcW4YJrtmOWfQ
      HysMAQv5JKEnVprB+PIIFCoqjkGjVp5PQsxV5QZ9S4vy7UaxWJxfiaSriAmF+1t8ezFXR9je
      3h5KKVZXVzFN88oqxleh+ieo7j5GeQXtdxClZVT/GHPthwhzuiHWMkSdP8BYfg91/jHG8nvI
      o3/GqG1iVNamk6E16uweRuMW8vTDpD+jNtguZuPmlP2IkCfvY1Q30d4ZxtIt1Pl9AMz1H04l
      A0Ce3/+iILVWiFwJPR5grj6/UqQatdFBD7O+jRqcJuNY30ENzxH5Gqq7h7n2Owjz605TNThD
      dR9jLN5ENXeT/goDdX4fY+ld5NFvMNfuoIcXiHzi35mrAvi+T61W4/DwkCiKME2TarXK0dER
      +Xw+rQE2HA6pVCoIIej3+5TLZUqlEq1WiyAIuHXrFgsL2b2s3xREsQ4X95HNXURhAXXxKcKw
      0L0DRH17ajk66F3+7IMwEKUl9PACplQA0OgoQIfDS4VcQ7Y+Q+QyKEDQg2CAHP4GUaiDUhhL
      30We3pv6OQCElUeeXbbRClFaBmElZZKMZ087YTko7xzq26j2I4S7hA666FEb3T9JJnT3AHPx
      61ZCkXNR3X2Ix8lC0vwUY+lddNBDnn2EuXIbeX4f3TtIlXmusUBhGKb0J/l8nuPjY46Ojuh2
      uwgh0h1hkt547dq11BM7qS8WhuEb51STR79BlNcwV++ADDHrO+jIh1yGQDgNOg4g8tFxgPa7
      qNN7GIs3snVGxRCNsDZ+H3n2IUZh4amr5bMginVEaRnhlEHF6NBDnn6AufqDDM+iwc4DAuwC
      2G7Sr9BLdoTntlXocf9yMVBovw1mLtk91u6iYx/hPH1ctYowFrbQ40GiLAAyQscBQhio7j46
      6IJhoQZJ7NlcQyF6vWSFc103LT7hOA5xHHN+fs7KygpnZ2esrKxQKBTI5XI0m02q1Srj8RjX
      dbm4uKBer88lbmjaUAg1akE4hFwJohEiX0UHfYzK+tTh0DoK0N4ZOCUYe+CUYTxAFGrpdv1C
      GVqhe0fJ5It8RKGODj2E5SAK0+2YWil0bx9RXkV7F5ArIqw8IpMya9TgBAzrcsJrhJVHRz5G
      6fkM0crvwHiADofJZB61EU4J7XeTcQ2HzxxXHfTQow6ieg3dP0ZrhVGsJ22L9URWdeMyK01h
      WM58rECTbLDn4VXEjL9qTBLv3+LbCdu252MFiuP4SppBoygifAlmtrd48zH3OsG5XI719XWE
      EBweHrK+vp7WCpj8ezwe02g0OD4+xrIsFhYWyOVyxHGMYRiJtUOplD0iiiIcx0lDKaIootfr
      UavVsCwr/Txc0gV+Q9YnEbQRfgudryNCD1W+lhwDskCGmP3HyMo2hneEtkvoYkZSWq0xuw+R
      lU2MwRGYOVR5I5sMFWP099BWEaGTxSuzDEB4pwjpg2GDilDV6Y0CqYzhGSIaovMLCL+FKq2D
      /ZwsQ60xO58iazdAmBi9R8k7Cdpop4IIPbSdHOnmqgD9fp96vc6DBw8oFos0m02GwyH5fJ5O
      p0O73aZcLtNqtahWq7RaLcrlMt1ulzAMU0/08vIyH374IdevX0cIwWg0olAoIKXE8zzK5XJa
      hKNSqdButzk/P8eyLIIg4E//9E+/kefTuSrG6BwxOk8mvgyzK4Bho808GBZCjsF0ZqrOonIV
      UBIRDmCGSvNojRgndzasIiLMntyTtM0hRmdg5RHhAFV558UX4a9ARMNEAQqLiIlp9XmfD9oQ
      +6AlIhohIg9daCQynBpChmAmi+BcrUCGYaTn/DiOaTQaqaPJMAxs205Jqyb5uLVaLQ2buHnz
      ZprTaVkWlUol/dvk97VajU6nQ6VSwTCM1OS6tbVFLpf7Rs2nZvch2nDQuSR8QsgZjk9yjOE3
      EUELbTogZwnH1hh+EyPogGnPlpesJViFxJav4uRnZhkaEfmJ6bKwiLaLZItMuhRTWATDxBhd
      JIvBi57HsJKVP2iDisDIJau/7SLGHbSZS8d1rrQoz8MkUflp1CZPVpJ5ki5FCMH5+TlLS0up
      AhiGkf6cfHaSaD+hZZk28f6luEG1hFmKQn8h4HLSGS+XWK8VMCO1yqRtQi74GmXopH3GnYPQ
      S45KEz4ircAw0nF1S6U3xwr0JuKtFejbjblZgd7kOmDPg2mamWsTfEHgJBHGbM+tv7JqzmIW
      fhkZXyxW+qX78WWZGpFxFX86ARq86Cj15OcmY/EFWdpkbOZ8CX7//fcRQrCzs0Mcxynt4dHR
      Edvb2wRBgGmaxHHMwcEBd+/evVKJ8krF7H30n2ls/BGh36G2/ANMK9sFNAx6dM8/wDAs4tAj
      765QW7mTSYZWkvbpb5Cxj4rHGFae5c2fTd32+OHfsrL1Z/SaHxOHQ0Bh2S6L1/4wWz+0pt/8
      mH7rE6pL32fQ/pT1m38xtRL4gxMGnYdYtosQgurS99n/+L+yefuvMMxnW/K01ux/9F/Y+O6/
      Q8bjZDzNHHHokcsvoOQ4bT/XS/CEe/Ojjz7i4uKCQqHA8fExlUqFDz74gE8++STNFnNd98pV
      hjnf+zssu4TXfkgUdAj9VmYZVs5FyTGF8jrjUfNytcqIywlWLG8QhQNkNMrQ1MStvpPsXlrh
      VjdRKsb3TrJ3QwiK1U3c2haWXcQpLGbaAfKlVUwrTy5fIxiecb7/9xiWQ/yC5+mefwAC4tBL
      x7O6dBvLLlJd/j5KhhSrCVPGXGfY+vo6169f5/DwkGq1yqNHj1haWqLZbNJoNNII0X6/n9IS
      XqUdoL72I/qtBzjFBn7/4Lmr1LPgD44QwkTFiRIYGXcQAKUiAu+UXKGOU6hjWNMnMCkV4Q9P
      EYZJMLog765QcFeeG8D2PIz6h9SWfsDFwT+Syy+gtZpaCQLvhGB4jpUrYVp5Ko33GPUPMIzn
      z4nywk20kvjDU4LhWTqetlNGRj5x6KFVQnn5WmlRvkpo+zS8zrCIl6FFeRUhHa+i1NKbIuNl
      MVOBk2iEaRWmo0X5JnFVM8LCMMT3/dfdjbeYGYIofn5++VwUYGJ/nyTDT8KdIbkXTBxgL0IQ
      BGk+slIqXRW+KULdyXdMC61CUCEYDqgAzNJsJLU6BJED6YFZRGT0J2itQQ6TfqBBWJnO3lqN
      k+9XIxA26BiEiTCyH8e0TBYQYRbQKkAY0x/HvhgLKxlPYSf/NwrPHROtVfL8posQRvJehAFy
      BKZ7+bcklGKud4BPPvkErTWrq6sMBgMWFhbY3d3lxo0bFAoFxuMxnuehtaZQKLCwsMDe3l5a
      3GJSVENKycHBAVtbW7iuy/HxMaurq5ycnLCyskK73WZnZ2f+5lc5Qo92EYUtdHCAKOyAna0+
      LzpED95HuLfRw4/AbiCK0yWzPCEEohY67oEQCOf61P3QWqEHv0WU7kDURkctRG4ZPT5FVH43
      Yz+AuIcO9qFwAz16gKj9NEPbLnp8mCgjCmHX0cFhMh7Wc46mcoQeHyPMEtpZQ/f+CeG+hw4v
      EKYL+gsCuLknxPR6PQ4ODuj3+5ycnLC6ukqr1Up/v7Gxwd7eHq1Wi/F4nIYzTCq2DIdDTk9P
      U+/v8fEx169fZ3d3l8XFRY6Pj/E87/UkzRhOYl42Jpff7NcrYTgIu568JKM4Q+AApB5XYSFy
      0zFLpy2FgcgtgxDoqIMo3kJHXUQxY2IOJN5XIwnF0P5DUBFaTc8+KKxaumMIq54ogpFHmC9w
      TgqR7BTOGgT7l+Ecl0chYXL5koA57wDb29sJidRwSBzHOI6T7gSdToe1tTWOjo7Y2NigVCqR
      y+VYWVnBsiwsyyKfz6eV4ye7wvr6OgcHB+zs7KQBcf3+jIFbL4u4B2bpcqstQIbtfgIt/eSo
      oGUyeayMOwgACi19hFWBuJ8cHabeASRajRDhRXJsiC/HUo6ev+o+C3E/mcjF76DDFuIFFpwv
      9SXuJGNhNyDuQmEL4UyRZCRHCOGg/c8RzgbCXgQ1BjFMjlN6CHYdeINigd5EvKVFueJ4QeSo
      67ri/wFVDkZubkMLUgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='3' width='192'>
      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
      1+tRLBZRVZUkSTg6OmJ/f59KpZKmtdttdnd3MU0T0xwPKvf39+l2u+i6nlYyT58+pd1uYxhG
      mnZycsLu7i6FQgFd19PzYLxjRxiG6Lqe3k+SJHK5cReq2+2ys7ODYRiYppm+p1arhe/76fts
      tVq0222CIEjf59HREa1WizAM0/OGwyE7OzvAOHxGkiT29vbSLXQmH8hoNpuvrKXdbl/Scnx8
      TKvVIgiCqbXc2EjScRxyudy42T9lNBpdivib7JUzeUkTkiTJXGvbNr1eL1MrTO53PqJvsr3G
      +YbMcRwMw8B1zw2QXPdSBKKiKHS7XarVy04sz/PSe45GI4IgwHHOrXUIQ3zfz4yDJEm6VIuF
      YZjW0hM9SZLguu6lMdTJyQnr6+uZ3zeptc7/Ftu26Xa7l/Lm4v0m4Srna0vXdTFNM/NbJl3Z
      i+fl85fn06/S0m63M6Hxk/ud56rgN9d1yeVy2Oe6UVdd63leaiDX1fK8fEm/bHTprq9IsVhE
      1/X080kwLhCTDbUmTGrp82lxHFOpVDKFOJ/PXyokkiShquqlZm0wGDAajdImXlXVS1rCMKRc
      LtPtnrndDcNA0zS63S7Ly6drGFw3/R7aBNM00+dONE66ZYVCIU2bfCvt8PAwfbm5O+oAAAQr
      SURBVAmSJFEulykUCulLTJKEcrlMEAQEQZCeWyqV6Ha71Gpn033FYjG9z3k9uq4TBEHaUkzy
      bJJfk+7m8fExlUolrf3K5TK5XC7tfiRJgmEYlEolXNdNn2eaJqPRKFOYVFW98j3FcZx2hSda
      z2uZpHU6HWRZZmtr7M94npZyuYzneek7MAyD0WiU+aTS5Lt1F7VEUYTvn/kVAAqFwiUjmGi5
      sRag1+th2zaWdTYQmdS2F2vFJEkyaZZlsbu7S/uc48xxHEajUcbCLctiMMjGzxQKBRRFodFo
      ZK61LIt+/2wjVlmW6fV6mYJ9lZYgCNjd3eXw8Gyw6LourutmWjTXdfE8D8uyziJddZ0wDNnY
      2EhfVhRFtNtt+v1+pvU5OTlhdXU1k3bVOOng4IDd3V2C4Mw77LoujuNkanHLsjI79k00bWxs
      ZIyk3W5jWVYmXx3HoVjMblU40XI+bzqdDru7uwyHZzN5o9HoyvfUbrczrbyu65TL5Uz+X6Vl
      NBqlRvUiLd1u95KWSZm52JNotVoZQ9Z1nVKpRKlUurkWoF6v02w2Mz/aMAyGw2HG+iZ99PNN
      2tbWVlorTCgWi2ialrFm0zTZ2trK1JCDwYAgCPA8L63xG40Gx8fHJEmS1uyT2r7f77Oycro2
      wfdxXTdTszQajYwxwXhGZ2Njg263mxZOWZZZX19H1/X0xUxeZLvdptEYh3vruk4+n6fX66Va
      ZFmmWCzS7XZZWjpbeON5XmbzYSDdhW9CkiSsr6/TarUyEw+T33Q+X8Mw5OTkJC18ALVajU6n
      kx5P+t+O42Tened5mRYB4O7du1ykWq2iaVqmgJXLZcrlcuY9OY6TDmorlbGXt16v0263U6OQ
      JCltea7Scn7Q/N57Z067F2mZFPTzvYHzWm6sBXhecNpFy/U8L+2jv4jJeedrvkkz2jydQoRx
      s2dZVuZFXaXnqlrEdd2pN/btdDoZQ1YUhXa7TbPZTGtxwzDo9XoYhpHRc7Hv+7xZCt/3CYLg
      pQtFWq1WuiBpwnA4pNvtZmq/SQtx3siuek9X5c2k0L3sS46WZREEQSZvgiCg2+1mupuyLON5
      XsYoruKqVnBSUZ0v2C/Scr7MhGF4pRbXdcdLe29qGtRxnHS12FXW+Sqcn8Z7HpZlcXJyguu6
      fPzxxwwGAzRNo9ls0uv1+Oyzz25MC7x4EUcYhukM0oMHDxiNRhSLxXT26cGDBy81/JvSAnB4
      eEi73WZzcxNFUSiXy+lMyfLyctpq3ISel2mZzBLqus7W1hau66bdk6WlpTeqpdvtpt2iG2sB
      ut0u/X7/yhmVV2WaFUOapuE4TqbPOBqN2N/fz9R8N6HlZXpkWU5nhybEcczu7i7FYvHGNoOd
      dqWaLMuZFgHG67ong/ebYtr3ZFnZNRHHx8eEYfjGtaiqim3bJEnC/wffNyCorYsOAAAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='5-' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3hc93nn+zlt+gxmMOgdIEiCIEiCvZmiZfUSW7GURLYTOz3O9aZsrjfZ
      ZO8mWSdx4t20u0/WN5s4zc7acRJLjm25KCJpUSTFKooEQAJE78CgTW+n3T+GGAIEQA5IgiRk
      fJ+HDzhzZn7nd86c91fe9/t+X8E0TZM1rOEHFOKD7sAa1vAgcdcGYBgGhmHci76sYQ33HXIu
      H1JVlb6+PrxeL9FolLy8PEzTxOfzrXT/1rCGFUVOBiDLMoIg0NPTg8vlIhwOIwgC+fn56LqO
      aZprs8AaViVyMoBYLEYoFKK4uJhwOIzL5UIQBAzDQBQzq6jZvysFXdcRRRFBEAAwTZO5+3fT
      NOcdX8MacoGwXC+QaZrzHrLZkX8lDcA0TU6ePEl/fz82m43nn3+e8+fPMzMzgyiKWCwWPB4P
      oVCIJ554YsX6sYb3Hpb91D6oETYcDvPEE0/gdrsZHR3FMAx8Ph8lJSWMjo7i8XgeSL/WsLqx
      7BngZuQ6A5imycjICHa7HUmSsn97e3vxeDxEo1Hcbje6rlNSUjLvu7quc/r0aYqLi5mcnMTp
      dJKfn084HEaWZRwOB+Pj4xQUFFBVVXU3l7OGHzDcVwPo6+vj2rVrTE1NcejQIXp6ekin0xw4
      cIBjx46h6zqNjY2sX79+3ncj8RSiKOC0We6mq2tYwwLc10DY22+/TWVlJYZhMDo6iqZpxONx
      AoEAtbW1NDY20tbWNu87Y9NR/uvfHOMfX2+5n11dww8I7usMMDU1hdVqxeFwMDIygt/vJxKJ
      4PV6sVgshEIhJEnC7XYTiib5lzevMDIRYcu6YqKJND/x5Na76eoa1rAA980AcsXV/gnOXR2h
      c3ia5/evZ+fGMiLxFH/1zQv8xkffd0/OsYY1zCKnOMD9xKnWIcamo/yXnziEzZLpns9tJxJP
      o2o6iiwBEI1GOX36NEVFRUxMTHD48GHOnTuHw+EgGAxSV1dHX18fZWVlrFu37kFe0hoeYjx0
      ZLh4UuWnnmnOPvyz8LpshGOp7Gu73Y6maRQXF9Pf349pmgSDQdrb21FVlYmJCUzTxOl03u9L
      WMMqwkM1A5imyfhMlJJ814JjlUUeekeD+PMcAAQCASRJYnJykoqKClpbW6mpqUFVVRKJBLqu
      Ew6HkSQJwzAQBCEbLZ7FbCR7bkR7DT9YyJkM19vbS2FhIaOjoxQWFmZH33uJiWAcv8eBKC4M
      ttWW+ugamWZXQxkApaWllJaWArB582ZUVUWSZcSbAnXj4+O8+uqrrF+/nv7+fp5//nm+9rWv
      sX//fq5evYqu66iqyr59+ygoKLin17OGhx85k+EMw2BsbIzp6eksAa6kpOSekuFaesbYVO1H
      07QFxyoL3bz5bt+ixwDSmsEf/N1RPnhwA7s2lmbfn40Y+/1+2traUFWViooKrl27hiAIDA4O
      8uyzzzIyMoLX673ra1jD6kJOBhCPx1FVlbKyMhRFweFwZPMA7iUZ7kr/FC8+sglZXtit4nw3
      oVgKQRSRFjmXYQrEUyrHLvZzuSfAhx/ZREGeg2QyidvtZmZmhg0bNnDlyhUkSaKqqorR0VGe
      euopOjo6OHTo0KLnvZ8wTZNLly6h6zrJZJKysjJ8Ph/Xrl2jqKiIUCiEruvous7u3bsfaF/f
      K8jpF3c6nWzZsgUAv98/79i9okGbpsnYVJQS/8L1P4AoCjisCrGEisdpXXB8aCLMujIf/+HD
      ezjfMcr/+69n2FZfzPu2VLGzpmbB0gjIeocqKyvvyTXcLQRBwG63k0wmSaVSRCIRampqMAyD
      lpYWZFkmlUphGMaaAdwjPDQ7v8lQHL/HvuiDOouq4jwGxkOLHmvpGWdXQxmCILC7oYzf+cnD
      2Cwyv/gnr/HlN1qYDMVXquv3DKZp0tnZicViQVEUpqam6OrqYnx8nMrKShRFoaCggMLCwgfd
      1fcMHppA2LGLfSTTGs/srV/yM2+3DRKYifGh9zXMe980Tf7o/5zk5z+4A7/HcaNvpknfaJCR
      yQjfO9dNSb6Tp/bUU+xz4nYsnEUeNqRSKSyWDP8pFxbu3J9y7udv/onXciZu4KFwg5qmSWtP
      gBcObbzl52pKfJy5Mrzg/XhSJaVq+Nz2ee+LgkBdmY+6Mh8Ht1TSNTzNPx9r4+K1MT7/a89S
      6L0RIxgbG2NiYgKbzYbFYqG6uprBwUHy8vLo7OyktraWvr4+mpub75vL1Gq18saFHi5eG+PT
      L++/5YNrmianT5/OLp+ampoYGxtDlmVCoRCqqlJdXc3ExAQHDhy4L/1fDXholkDDk2EqCm/N
      6S/0OhifiWEY80e0ruFpNlT4b7l8EgSB9RV+/tPLB/j5H9rBn3z1babDiexxp9OZpWZ3dXWh
      aRqvvfYab7/9NgMDAxw/fpxEIrFk+yuFiZkYeo77rEQiwfr16zEMg8LCQvx+P93d3YRCIUKh
      EKdOnWJ4eOEA8oOMh2IGmAon8Hvst52aZUnEZpGJJdPzljAXOkbZ1VDG6Ogo7e3tlJSUEIvF
      2L59O+fOncPj8TA2NkZ9fT19fX0c3reP6hIvf/xPp/ilF/dS6ndx7NgxCgsL+eY3v8n73/9+
      2tvbcblcFBUV0drays6dO2ltbSWdTmOz2Vb6lmRxsXOMyiLPbe/N7DJnenoal8tFS0sLTqeT
      8vJyXC4XqqrS3NzMyMjI/ej2qsFDYQCtPQGaaoty+mxFoYfhyQgNVRkDME2TwUCIjzzehIhB
      PB7H5XJx+fJldu7cic1mY2xsjPLyci5fvoxhGKTTaTZU+vmFD+3kT//5bX7lxb188IMfBGD/
      /v0YhsHk5CQ//uM/jmmaNDU1oSgKGzduRJKkFbsPN2M6kplxUqp+288mUhqHHjmc5UothfLy
      8nvSt/cKHvgSyDRNWnsDNNXlZgD15T76xoLZ11OhBDargt2qcOnSJfLz85mensbn89HW1kZn
      ZydVVVW0t7dTWVmJ3W4nnU4DUF3s5dM/tp+/ePUsr77Vnh1FRVGkqCjTH0EQUBQF4L4+/ABn
      2oY4tLUKVbu9Afz+l97iH7576T706r2Fh2IGGBgPUV6QW05vTYmXb5/pyr6+3DNOY03GLbhn
      z57s+6ZpZjeDAPX1i3uXivNdvHS4kT/7l9PsaSij/Bb7ENM0aWlpoaqqimg0SkVFBdFolP7+
      ftxuN4qiEIlEcLvdWZrG3eDs1WF++aW9nO8Yve1nG6oKFnh71nB7PPAZYCqcIN9jX5T/sxhK
      /W7GpiLZH/tK3wQ7Nix82ARByHmtvnNjKZ/75OP8xStnicbTt/ys3W7n0qVL2cy1I0eOEI1G
      uXjxIqdOncLpdNLe3p7TeW+FUDSJIkt4XTbSqnbbh1vTDdp6A3dkBN3d3Zw+fZrz588TjUbR
      dZ0TJ04wPDzMkSNHGB4e5sSJE+9JA8vJAFRVpaOjg97eXlpaWujv76e/v/+eRIGXs/4HsCgS
      kiSSSGlousHoVIRi391RngVBoLzAzcee3MqffPXUkksO0zR5/fXXqaqqIhAIMDg4iNvtZmxs
      jKqqKhRF4dvf/jZ1dXULvjs+Ps5rr71GS0tL1njeffddzp49y3e+8x06Ojp4/fXXs59/+8oQ
      +zZXIAgCQg6DQzKtkkzrhOZQxnPFbGaez+cjGo3S19fH2NgYJ0+epL6+nmg0Snt7+3vSAHJa
      AkmSRDqdpqioiHg8TiQSwTAMqqqq7poM19IzzrP76pckuS2GojwHwxOZiHB5gRtMA027e2Ns
      qMznQFMln//6OT71wq5FP/PTP/3TiKLISy+9xOTkJAcPHsz2vbGxMaubdPP1zKrr1dTUcO3a
      NRKJBKdOnaK4uBhBEBgbG8PpdGa/d+bKEL/y4p7sa03TbukJSqY0GmsKuNIXYM91xmyuOHXq
      FCUlJQwODuJyuZAkCavVisVi4fz58zQ2NuL1etF1/T2nAJiTASQSCRRFIRgMYrfbcbvd2Yf+
      bshwhmkyNBGhtjQ/5yUQwPpKP71jIeIpleb1pfeUxPb4rjomQnFeeauDH3l/Y/ah03SDmUiS
      VDrzQEqSgOL08W73JJVFHsoK3Ldsd2JigoKCAkZGRojH43R2dvKJT3yCyclJ+vv7WbduHa2t
      rSQSCUzRgiiI5LluuIZFSVqUBDgLVTfYtbGMdzrHONC0PGmYZ599Nvv/WXp4c3PzvM80NDS8
      JyPIOZPhGhoaFj12NyPCyZYBwtclT5aD6hIvb5zvYSIU51Mv3FtSmCAIvPyBJn7vH97kN//q
      CE6bgqoZGKaJ12XDbs14hHTDwDRNuoZn2FxTyCc/tPiMMYu592/Dhg3ohsF0OEl1dTXV1dXA
      DRfl6+e62bOpLPvASYIAt1l9GIZJbZmPr5/owDDMZd/TWUiSRNdIkC986y3+4Gc/gEW5v56v
      +40H6gWqK/Xx4iOblv290nwXvaMzOKwKPve9D0qJosCPfmAzA+MhDm6pwqpIyNLiuqOptMbv
      ffE4gZkYRTnuRQRBoHc0yG/+1RH+6Bcep748P3vMNE3OXBnmF+cuwQThds8/umHisCnkuaxM
      hePzaB7LhSwKdA9PX49Av7cN4L56gaanpxkYGCAYDGbyCwrc1OVn8g26urqIRCIMDg7eth2n
      3UJK1amv8C97WjZNk8HBQaamppiYmAAy6+uOjg4ikQgjIyMMDw+TbzN4ak89LrsFRZaWPI/V
      IvPRx7fwxe9dynmTOPuQ//ChBr7wrXdo65vIHosm0iTTGgV5N0h9oiBg3KZt3TCQRIEtdcVc
      7Z/MqR9LIRxP4bJbcnK/rnbcVwMwDIMLFy7Q1tbG1NQU4+PjvPXWW5w6dYqZmRm+9a1v8fbb
      b6Prtw/8aLqB06bcUT90XefChQucOHECgBMnTjA4OMjFixfp6OjIblBzxabqgusPTG40g5Gp
      KL2jQT7y2BZ+/SMH+Zdjbbz5bj8AZ64Ms2fT/GitVZFIp299T3TDRBJFNtcU0tITyLnvi2Ew
      EObFw4283Xr7wWi1474awPnz56mrq8sms0ciEYqLi+np6WF6eppt27YRjUZzGtU/9cN7ONxc
      fUf9OHHiBI2NjVnKg2EYRKNRYrFYNuFkOXub2X3Dq8fbiSfVW37WME3+6UgLP/JoI6IokO+x
      858/9j4udo7y1aNtvN02xP7NFfO+Y7PKJNK3aff6ur+swM3oVARNv/O92chkhG31xSTS2m2v
      Z7Xjvu4BZl2GswoNsViMXbt28fjjjxMMBrPkrZs9SqZpcu7cOYqKigiHw2zdupUil0Boapzw
      tICqqhQUFBAMBqmpqbltP5577jlkWebw4cNEIhH2799PLBbD7XaTTCYxTZMnn3xyWdfmddt4
      bGcdrxy/yo/fQsGupXscqyLTUHUjAd9mkfmlD+/hL79xgba+AH7PfFq3RZZI3mIG0HQDQcgs
      lURJwJ/nYGw6SkWhZ4EixuwybdZdO/t3bt2F0ekopfkudjeUcfbqMO/fXrOse7GacF8NwO2e
      7yqcW2JpVpHBbp//48/C6XQSDAYJh8PZ1x0dHfT391NXV0dPTw92u/22BiAIQva8brd7wXmt
      1sUTZTRNY3BwkOLi4uzMNattmkwmsdvtbKvxcPrKEL2jM9SWLiwfldZ0vvbmVX75pb0LjkmS
      yI8/uYXt60uQpPkDgM0ik74FH0jTjXkkuC21RbT0BMh3yhw7doxUKoWiKDz55JOcOHECURSz
      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
      WqtALb7W/H/iUffFqyq1gQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='24' name='how many countries' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACO0lEQVRYhe2Yv2siURzEx+MIyTYhKGmybCdY5j9ItJUUBmyshUDAVhAESZFqIQpJISms
      rURSRCzEQqsIWkgSEJtAdHETsgRUXNGdKwJySzxyd+TusXd+ujffHwzDg8euiyTxH/NFtAHR
      rAIQbUA0qwBEGxDNKgDRBkSzCkC0AdGsAhBtQDSrAEQb+FXG4zE0TYNlWTZ9Pp9D0zQ8Pz9j
      2fedZVno9/uYTCY2/esfdfuJ3N7eQlVVjEYjbGxswDAMqKoKn8+HXC6HYrEIWZZhmiaGwyFU
      VYWiKHh9fUUmk8HNzQ12dnbQ7XYRjUYRiUTeFtMhZLNZ3t3dLc6lUomxWIwk2Wq1aJrmolYs
      FplMJkmS1WqVhUKBlmWRJA3DoN/v53A4JEk65gYcHR3Zzh6PBy6XCwCwu7trq5mmic3NTQDA
      /v6+rSZJEiRJWsw6JoDv6XQ6ODk5QSqVWmiapqHX66FWq6HRaODi4uLd3Hg8RjKZxN7eHiRJ
      ehP/1hX+DK6urnh4eMiHh4cf9jw9PTEej/P8/HyhPT4+MhgM8vr6+l2/YwJoNpsMhUIcDAYf
      9r68vPDg4IAkaZomQ6EQK5XK0l7HPIPlchnHx8fY3t626bPZDOVy2fYs1ut1uN1uAEC73YbX
      60UgEFi610U646doOBzGZDLB2traQpNlGWdnZ0gkEri/v4csy9B1HQBwenoKn8+Hy8tL5PN5
      bG1t2fal02koiuKcAD5iOp1C13Wsr6/D4/H89Nw/E8Dv8g3AYXordx5GqQAAAABJRU5ErkJg
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
